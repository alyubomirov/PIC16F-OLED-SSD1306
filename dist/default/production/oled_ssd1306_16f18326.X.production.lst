

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Feb 07 13:25:51 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F18326
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	idataBIGRAM,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	intentry,global,class=CODE,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	swtext1,local,class=CONST,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	dabs	1,0xCA0,32
    73                           	dabs	1,0xC20,80
    74                           	dabs	1,0xBA0,80
    75                           	dabs	1,0xB20,80
    76                           	dabs	1,0xAA0,80
    77                           	dabs	1,0xA20,80
    78                           	dabs	1,0x9A0,80
    79                           	dabs	1,0x920,80
    80                           	dabs	1,0x8A0,80
    81                           	dabs	1,0x820,80
    82                           	dabs	1,0x7A0,80
    83                           	dabs	1,0x720,80
    84                           	dabs	1,0x6A0,80
    85                           	dabs	1,0x648,40
    86                           	dabs	1,0x23E8,0,_frameBuff
    87                           	dabs	1,0x7E,2
    88  0000                     
    89                           ; Version 1.44
    90                           ; Generated 14/09/2017 GMT
    91                           ; 
    92                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F18326 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000E                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  008C                     	;# 
   157  008E                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0097                     	;# 
   164  009B                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010E                     	;# 
   172  0111                     	;# 
   173  0112                     	;# 
   174  0113                     	;# 
   175  0114                     	;# 
   176  0115                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0118                     	;# 
   180  0119                     	;# 
   181  018C                     	;# 
   182  018E                     	;# 
   183  0197                     	;# 
   184  0199                     	;# 
   185  0199                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019A                     	;# 
   189  019A                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019C                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019D                     	;# 
   199  019D                     	;# 
   200  019D                     	;# 
   201  019E                     	;# 
   202  019E                     	;# 
   203  019E                     	;# 
   204  019F                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  020C                     	;# 
   210  020E                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0212                     	;# 
   215  0213                     	;# 
   216  0213                     	;# 
   217  0214                     	;# 
   218  0214                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0219                     	;# 
   228  021A                     	;# 
   229  021B                     	;# 
   230  021C                     	;# 
   231  021D                     	;# 
   232  021D                     	;# 
   233  021E                     	;# 
   234  021F                     	;# 
   235  028C                     	;# 
   236  028E                     	;# 
   237  0291                     	;# 
   238  0291                     	;# 
   239  0292                     	;# 
   240  0293                     	;# 
   241  0294                     	;# 
   242  0295                     	;# 
   243  0295                     	;# 
   244  0296                     	;# 
   245  0297                     	;# 
   246  0298                     	;# 
   247  029F                     	;# 
   248  030C                     	;# 
   249  030E                     	;# 
   250  0311                     	;# 
   251  0311                     	;# 
   252  0312                     	;# 
   253  0313                     	;# 
   254  0314                     	;# 
   255  0315                     	;# 
   256  0315                     	;# 
   257  0316                     	;# 
   258  0317                     	;# 
   259  0318                     	;# 
   260  038C                     	;# 
   261  038E                     	;# 
   262  0391                     	;# 
   263  0392                     	;# 
   264  0393                     	;# 
   265  0397                     	;# 
   266  0398                     	;# 
   267  0399                     	;# 
   268  039A                     	;# 
   269  039C                     	;# 
   270  039D                     	;# 
   271  039E                     	;# 
   272  039F                     	;# 
   273  0411                     	;# 
   274  0411                     	;# 
   275  0412                     	;# 
   276  0413                     	;# 
   277  0414                     	;# 
   278  0415                     	;# 
   279  0416                     	;# 
   280  0417                     	;# 
   281  0418                     	;# 
   282  0418                     	;# 
   283  0419                     	;# 
   284  041A                     	;# 
   285  041B                     	;# 
   286  041C                     	;# 
   287  041D                     	;# 
   288  041E                     	;# 
   289  041F                     	;# 
   290  0498                     	;# 
   291  0498                     	;# 
   292  0499                     	;# 
   293  049A                     	;# 
   294  049B                     	;# 
   295  049B                     	;# 
   296  049C                     	;# 
   297  049D                     	;# 
   298  049E                     	;# 
   299  049F                     	;# 
   300  0617                     	;# 
   301  0618                     	;# 
   302  0619                     	;# 
   303  0619                     	;# 
   304  061A                     	;# 
   305  061B                     	;# 
   306  061C                     	;# 
   307  061C                     	;# 
   308  061F                     	;# 
   309  0691                     	;# 
   310  0692                     	;# 
   311  0693                     	;# 
   312  0694                     	;# 
   313  0695                     	;# 
   314  0696                     	;# 
   315  0697                     	;# 
   316  0698                     	;# 
   317  0699                     	;# 
   318  0711                     	;# 
   319  0712                     	;# 
   320  0713                     	;# 
   321  0714                     	;# 
   322  0715                     	;# 
   323  0716                     	;# 
   324  0717                     	;# 
   325  0718                     	;# 
   326  0719                     	;# 
   327  0891                     	;# 
   328  0891                     	;# 
   329  0891                     	;# 
   330  0891                     	;# 
   331  0891                     	;# 
   332  0891                     	;# 
   333  0892                     	;# 
   334  0892                     	;# 
   335  0892                     	;# 
   336  0893                     	;# 
   337  0893                     	;# 
   338  0893                     	;# 
   339  0893                     	;# 
   340  0893                     	;# 
   341  0893                     	;# 
   342  0894                     	;# 
   343  0894                     	;# 
   344  0894                     	;# 
   345  0895                     	;# 
   346  0895                     	;# 
   347  0895                     	;# 
   348  0896                     	;# 
   349  0896                     	;# 
   350  0896                     	;# 
   351  089B                     	;# 
   352  0911                     	;# 
   353  0912                     	;# 
   354  0913                     	;# 
   355  0914                     	;# 
   356  0915                     	;# 
   357  0916                     	;# 
   358  0918                     	;# 
   359  0919                     	;# 
   360  091A                     	;# 
   361  091B                     	;# 
   362  091C                     	;# 
   363  091D                     	;# 
   364  091E                     	;# 
   365  091F                     	;# 
   366  0E0F                     	;# 
   367  0E10                     	;# 
   368  0E11                     	;# 
   369  0E12                     	;# 
   370  0E13                     	;# 
   371  0E14                     	;# 
   372  0E15                     	;# 
   373  0E16                     	;# 
   374  0E17                     	;# 
   375  0E18                     	;# 
   376  0E19                     	;# 
   377  0E1A                     	;# 
   378  0E1B                     	;# 
   379  0E1C                     	;# 
   380  0E1D                     	;# 
   381  0E1E                     	;# 
   382  0E1F                     	;# 
   383  0E20                     	;# 
   384  0E21                     	;# 
   385  0E22                     	;# 
   386  0E24                     	;# 
   387  0E25                     	;# 
   388  0E28                     	;# 
   389  0E29                     	;# 
   390  0E2A                     	;# 
   391  0E2B                     	;# 
   392  0E2C                     	;# 
   393  0E2D                     	;# 
   394  0E2E                     	;# 
   395  0E2F                     	;# 
   396  0E90                     	;# 
   397  0E91                     	;# 
   398  0E92                     	;# 
   399  0E94                     	;# 
   400  0E95                     	;# 
   401  0EA0                     	;# 
   402  0EA1                     	;# 
   403  0EA2                     	;# 
   404  0EA3                     	;# 
   405  0EA4                     	;# 
   406  0EA5                     	;# 
   407  0F0F                     	;# 
   408  0F10                     	;# 
   409  0F11                     	;# 
   410  0F12                     	;# 
   411  0F13                     	;# 
   412  0F14                     	;# 
   413  0F15                     	;# 
   414  0F16                     	;# 
   415  0F17                     	;# 
   416  0F18                     	;# 
   417  0F19                     	;# 
   418  0F1A                     	;# 
   419  0F1B                     	;# 
   420  0F1C                     	;# 
   421  0F1D                     	;# 
   422  0F1E                     	;# 
   423  0F1F                     	;# 
   424  0F20                     	;# 
   425  0F21                     	;# 
   426  0F22                     	;# 
   427  0F23                     	;# 
   428  0F24                     	;# 
   429  0F25                     	;# 
   430  0F26                     	;# 
   431  0F27                     	;# 
   432  0F28                     	;# 
   433  0F29                     	;# 
   434  0F2A                     	;# 
   435  0F2B                     	;# 
   436  0F2C                     	;# 
   437  0F2D                     	;# 
   438  0F2E                     	;# 
   439  0F2F                     	;# 
   440  0F30                     	;# 
   441  0F31                     	;# 
   442  0F32                     	;# 
   443  0F33                     	;# 
   444  0F34                     	;# 
   445  0F35                     	;# 
   446  0F36                     	;# 
   447  0F37                     	;# 
   448  0FE4                     	;# 
   449  0FE5                     	;# 
   450  0FE6                     	;# 
   451  0FE7                     	;# 
   452  0FE8                     	;# 
   453  0FE9                     	;# 
   454  0FEA                     	;# 
   455  0FEB                     	;# 
   456  0FED                     	;# 
   457  0FEE                     	;# 
   458  0FEF                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000E                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  008C                     	;# 
   493  008E                     	;# 
   494  0090                     	;# 
   495  0091                     	;# 
   496  0092                     	;# 
   497  0093                     	;# 
   498  0094                     	;# 
   499  0097                     	;# 
   500  009B                     	;# 
   501  009B                     	;# 
   502  009C                     	;# 
   503  009D                     	;# 
   504  009E                     	;# 
   505  009F                     	;# 
   506  010C                     	;# 
   507  010E                     	;# 
   508  0111                     	;# 
   509  0112                     	;# 
   510  0113                     	;# 
   511  0114                     	;# 
   512  0115                     	;# 
   513  0116                     	;# 
   514  0117                     	;# 
   515  0118                     	;# 
   516  0119                     	;# 
   517  018C                     	;# 
   518  018E                     	;# 
   519  0197                     	;# 
   520  0199                     	;# 
   521  0199                     	;# 
   522  0199                     	;# 
   523  019A                     	;# 
   524  019A                     	;# 
   525  019A                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019C                     	;# 
   532  019C                     	;# 
   533  019C                     	;# 
   534  019D                     	;# 
   535  019D                     	;# 
   536  019D                     	;# 
   537  019E                     	;# 
   538  019E                     	;# 
   539  019E                     	;# 
   540  019F                     	;# 
   541  019F                     	;# 
   542  019F                     	;# 
   543  019F                     	;# 
   544  019F                     	;# 
   545  020C                     	;# 
   546  020E                     	;# 
   547  0211                     	;# 
   548  0211                     	;# 
   549  0212                     	;# 
   550  0212                     	;# 
   551  0213                     	;# 
   552  0213                     	;# 
   553  0214                     	;# 
   554  0214                     	;# 
   555  0215                     	;# 
   556  0215                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0216                     	;# 
   560  0216                     	;# 
   561  0217                     	;# 
   562  0217                     	;# 
   563  0219                     	;# 
   564  021A                     	;# 
   565  021B                     	;# 
   566  021C                     	;# 
   567  021D                     	;# 
   568  021D                     	;# 
   569  021E                     	;# 
   570  021F                     	;# 
   571  028C                     	;# 
   572  028E                     	;# 
   573  0291                     	;# 
   574  0291                     	;# 
   575  0292                     	;# 
   576  0293                     	;# 
   577  0294                     	;# 
   578  0295                     	;# 
   579  0295                     	;# 
   580  0296                     	;# 
   581  0297                     	;# 
   582  0298                     	;# 
   583  029F                     	;# 
   584  030C                     	;# 
   585  030E                     	;# 
   586  0311                     	;# 
   587  0311                     	;# 
   588  0312                     	;# 
   589  0313                     	;# 
   590  0314                     	;# 
   591  0315                     	;# 
   592  0315                     	;# 
   593  0316                     	;# 
   594  0317                     	;# 
   595  0318                     	;# 
   596  038C                     	;# 
   597  038E                     	;# 
   598  0391                     	;# 
   599  0392                     	;# 
   600  0393                     	;# 
   601  0397                     	;# 
   602  0398                     	;# 
   603  0399                     	;# 
   604  039A                     	;# 
   605  039C                     	;# 
   606  039D                     	;# 
   607  039E                     	;# 
   608  039F                     	;# 
   609  0411                     	;# 
   610  0411                     	;# 
   611  0412                     	;# 
   612  0413                     	;# 
   613  0414                     	;# 
   614  0415                     	;# 
   615  0416                     	;# 
   616  0417                     	;# 
   617  0418                     	;# 
   618  0418                     	;# 
   619  0419                     	;# 
   620  041A                     	;# 
   621  041B                     	;# 
   622  041C                     	;# 
   623  041D                     	;# 
   624  041E                     	;# 
   625  041F                     	;# 
   626  0498                     	;# 
   627  0498                     	;# 
   628  0499                     	;# 
   629  049A                     	;# 
   630  049B                     	;# 
   631  049B                     	;# 
   632  049C                     	;# 
   633  049D                     	;# 
   634  049E                     	;# 
   635  049F                     	;# 
   636  0617                     	;# 
   637  0618                     	;# 
   638  0619                     	;# 
   639  0619                     	;# 
   640  061A                     	;# 
   641  061B                     	;# 
   642  061C                     	;# 
   643  061C                     	;# 
   644  061F                     	;# 
   645  0691                     	;# 
   646  0692                     	;# 
   647  0693                     	;# 
   648  0694                     	;# 
   649  0695                     	;# 
   650  0696                     	;# 
   651  0697                     	;# 
   652  0698                     	;# 
   653  0699                     	;# 
   654  0711                     	;# 
   655  0712                     	;# 
   656  0713                     	;# 
   657  0714                     	;# 
   658  0715                     	;# 
   659  0716                     	;# 
   660  0717                     	;# 
   661  0718                     	;# 
   662  0719                     	;# 
   663  0891                     	;# 
   664  0891                     	;# 
   665  0891                     	;# 
   666  0891                     	;# 
   667  0891                     	;# 
   668  0891                     	;# 
   669  0892                     	;# 
   670  0892                     	;# 
   671  0892                     	;# 
   672  0893                     	;# 
   673  0893                     	;# 
   674  0893                     	;# 
   675  0893                     	;# 
   676  0893                     	;# 
   677  0893                     	;# 
   678  0894                     	;# 
   679  0894                     	;# 
   680  0894                     	;# 
   681  0895                     	;# 
   682  0895                     	;# 
   683  0895                     	;# 
   684  0896                     	;# 
   685  0896                     	;# 
   686  0896                     	;# 
   687  089B                     	;# 
   688  0911                     	;# 
   689  0912                     	;# 
   690  0913                     	;# 
   691  0914                     	;# 
   692  0915                     	;# 
   693  0916                     	;# 
   694  0918                     	;# 
   695  0919                     	;# 
   696  091A                     	;# 
   697  091B                     	;# 
   698  091C                     	;# 
   699  091D                     	;# 
   700  091E                     	;# 
   701  091F                     	;# 
   702  0E0F                     	;# 
   703  0E10                     	;# 
   704  0E11                     	;# 
   705  0E12                     	;# 
   706  0E13                     	;# 
   707  0E14                     	;# 
   708  0E15                     	;# 
   709  0E16                     	;# 
   710  0E17                     	;# 
   711  0E18                     	;# 
   712  0E19                     	;# 
   713  0E1A                     	;# 
   714  0E1B                     	;# 
   715  0E1C                     	;# 
   716  0E1D                     	;# 
   717  0E1E                     	;# 
   718  0E1F                     	;# 
   719  0E20                     	;# 
   720  0E21                     	;# 
   721  0E22                     	;# 
   722  0E24                     	;# 
   723  0E25                     	;# 
   724  0E28                     	;# 
   725  0E29                     	;# 
   726  0E2A                     	;# 
   727  0E2B                     	;# 
   728  0E2C                     	;# 
   729  0E2D                     	;# 
   730  0E2E                     	;# 
   731  0E2F                     	;# 
   732  0E90                     	;# 
   733  0E91                     	;# 
   734  0E92                     	;# 
   735  0E94                     	;# 
   736  0E95                     	;# 
   737  0EA0                     	;# 
   738  0EA1                     	;# 
   739  0EA2                     	;# 
   740  0EA3                     	;# 
   741  0EA4                     	;# 
   742  0EA5                     	;# 
   743  0F0F                     	;# 
   744  0F10                     	;# 
   745  0F11                     	;# 
   746  0F12                     	;# 
   747  0F13                     	;# 
   748  0F14                     	;# 
   749  0F15                     	;# 
   750  0F16                     	;# 
   751  0F17                     	;# 
   752  0F18                     	;# 
   753  0F19                     	;# 
   754  0F1A                     	;# 
   755  0F1B                     	;# 
   756  0F1C                     	;# 
   757  0F1D                     	;# 
   758  0F1E                     	;# 
   759  0F1F                     	;# 
   760  0F20                     	;# 
   761  0F21                     	;# 
   762  0F22                     	;# 
   763  0F23                     	;# 
   764  0F24                     	;# 
   765  0F25                     	;# 
   766  0F26                     	;# 
   767  0F27                     	;# 
   768  0F28                     	;# 
   769  0F29                     	;# 
   770  0F2A                     	;# 
   771  0F2B                     	;# 
   772  0F2C                     	;# 
   773  0F2D                     	;# 
   774  0F2E                     	;# 
   775  0F2F                     	;# 
   776  0F30                     	;# 
   777  0F31                     	;# 
   778  0F32                     	;# 
   779  0F33                     	;# 
   780  0F34                     	;# 
   781  0F35                     	;# 
   782  0F36                     	;# 
   783  0F37                     	;# 
   784  0FE4                     	;# 
   785  0FE5                     	;# 
   786  0FE6                     	;# 
   787  0FE7                     	;# 
   788  0FE8                     	;# 
   789  0FE9                     	;# 
   790  0FEA                     	;# 
   791  0FEB                     	;# 
   792  0FED                     	;# 
   793  0FEE                     	;# 
   794  0FEF                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0008                     	;# 
   804  0009                     	;# 
   805  000A                     	;# 
   806  000B                     	;# 
   807  000C                     	;# 
   808  000E                     	;# 
   809  0010                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0013                     	;# 
   813  0014                     	;# 
   814  0015                     	;# 
   815  0015                     	;# 
   816  0016                     	;# 
   817  0016                     	;# 
   818  0017                     	;# 
   819  0018                     	;# 
   820  0019                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001C                     	;# 
   825  001D                     	;# 
   826  001E                     	;# 
   827  001F                     	;# 
   828  008C                     	;# 
   829  008E                     	;# 
   830  0090                     	;# 
   831  0091                     	;# 
   832  0092                     	;# 
   833  0093                     	;# 
   834  0094                     	;# 
   835  0097                     	;# 
   836  009B                     	;# 
   837  009B                     	;# 
   838  009C                     	;# 
   839  009D                     	;# 
   840  009E                     	;# 
   841  009F                     	;# 
   842  010C                     	;# 
   843  010E                     	;# 
   844  0111                     	;# 
   845  0112                     	;# 
   846  0113                     	;# 
   847  0114                     	;# 
   848  0115                     	;# 
   849  0116                     	;# 
   850  0117                     	;# 
   851  0118                     	;# 
   852  0119                     	;# 
   853  018C                     	;# 
   854  018E                     	;# 
   855  0197                     	;# 
   856  0199                     	;# 
   857  0199                     	;# 
   858  0199                     	;# 
   859  019A                     	;# 
   860  019A                     	;# 
   861  019A                     	;# 
   862  019B                     	;# 
   863  019B                     	;# 
   864  019B                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019C                     	;# 
   868  019C                     	;# 
   869  019C                     	;# 
   870  019D                     	;# 
   871  019D                     	;# 
   872  019D                     	;# 
   873  019E                     	;# 
   874  019E                     	;# 
   875  019E                     	;# 
   876  019F                     	;# 
   877  019F                     	;# 
   878  019F                     	;# 
   879  019F                     	;# 
   880  019F                     	;# 
   881  020C                     	;# 
   882  020E                     	;# 
   883  0211                     	;# 
   884  0211                     	;# 
   885  0212                     	;# 
   886  0212                     	;# 
   887  0213                     	;# 
   888  0213                     	;# 
   889  0214                     	;# 
   890  0214                     	;# 
   891  0215                     	;# 
   892  0215                     	;# 
   893  0215                     	;# 
   894  0215                     	;# 
   895  0216                     	;# 
   896  0216                     	;# 
   897  0217                     	;# 
   898  0217                     	;# 
   899  0219                     	;# 
   900  021A                     	;# 
   901  021B                     	;# 
   902  021C                     	;# 
   903  021D                     	;# 
   904  021D                     	;# 
   905  021E                     	;# 
   906  021F                     	;# 
   907  028C                     	;# 
   908  028E                     	;# 
   909  0291                     	;# 
   910  0291                     	;# 
   911  0292                     	;# 
   912  0293                     	;# 
   913  0294                     	;# 
   914  0295                     	;# 
   915  0295                     	;# 
   916  0296                     	;# 
   917  0297                     	;# 
   918  0298                     	;# 
   919  029F                     	;# 
   920  030C                     	;# 
   921  030E                     	;# 
   922  0311                     	;# 
   923  0311                     	;# 
   924  0312                     	;# 
   925  0313                     	;# 
   926  0314                     	;# 
   927  0315                     	;# 
   928  0315                     	;# 
   929  0316                     	;# 
   930  0317                     	;# 
   931  0318                     	;# 
   932  038C                     	;# 
   933  038E                     	;# 
   934  0391                     	;# 
   935  0392                     	;# 
   936  0393                     	;# 
   937  0397                     	;# 
   938  0398                     	;# 
   939  0399                     	;# 
   940  039A                     	;# 
   941  039C                     	;# 
   942  039D                     	;# 
   943  039E                     	;# 
   944  039F                     	;# 
   945  0411                     	;# 
   946  0411                     	;# 
   947  0412                     	;# 
   948  0413                     	;# 
   949  0414                     	;# 
   950  0415                     	;# 
   951  0416                     	;# 
   952  0417                     	;# 
   953  0418                     	;# 
   954  0418                     	;# 
   955  0419                     	;# 
   956  041A                     	;# 
   957  041B                     	;# 
   958  041C                     	;# 
   959  041D                     	;# 
   960  041E                     	;# 
   961  041F                     	;# 
   962  0498                     	;# 
   963  0498                     	;# 
   964  0499                     	;# 
   965  049A                     	;# 
   966  049B                     	;# 
   967  049B                     	;# 
   968  049C                     	;# 
   969  049D                     	;# 
   970  049E                     	;# 
   971  049F                     	;# 
   972  0617                     	;# 
   973  0618                     	;# 
   974  0619                     	;# 
   975  0619                     	;# 
   976  061A                     	;# 
   977  061B                     	;# 
   978  061C                     	;# 
   979  061C                     	;# 
   980  061F                     	;# 
   981  0691                     	;# 
   982  0692                     	;# 
   983  0693                     	;# 
   984  0694                     	;# 
   985  0695                     	;# 
   986  0696                     	;# 
   987  0697                     	;# 
   988  0698                     	;# 
   989  0699                     	;# 
   990  0711                     	;# 
   991  0712                     	;# 
   992  0713                     	;# 
   993  0714                     	;# 
   994  0715                     	;# 
   995  0716                     	;# 
   996  0717                     	;# 
   997  0718                     	;# 
   998  0719                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0891                     	;# 
  1002  0891                     	;# 
  1003  0891                     	;# 
  1004  0891                     	;# 
  1005  0892                     	;# 
  1006  0892                     	;# 
  1007  0892                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0893                     	;# 
  1011  0893                     	;# 
  1012  0893                     	;# 
  1013  0893                     	;# 
  1014  0894                     	;# 
  1015  0894                     	;# 
  1016  0894                     	;# 
  1017  0895                     	;# 
  1018  0895                     	;# 
  1019  0895                     	;# 
  1020  0896                     	;# 
  1021  0896                     	;# 
  1022  0896                     	;# 
  1023  089B                     	;# 
  1024  0911                     	;# 
  1025  0912                     	;# 
  1026  0913                     	;# 
  1027  0914                     	;# 
  1028  0915                     	;# 
  1029  0916                     	;# 
  1030  0918                     	;# 
  1031  0919                     	;# 
  1032  091A                     	;# 
  1033  091B                     	;# 
  1034  091C                     	;# 
  1035  091D                     	;# 
  1036  091E                     	;# 
  1037  091F                     	;# 
  1038  0E0F                     	;# 
  1039  0E10                     	;# 
  1040  0E11                     	;# 
  1041  0E12                     	;# 
  1042  0E13                     	;# 
  1043  0E14                     	;# 
  1044  0E15                     	;# 
  1045  0E16                     	;# 
  1046  0E17                     	;# 
  1047  0E18                     	;# 
  1048  0E19                     	;# 
  1049  0E1A                     	;# 
  1050  0E1B                     	;# 
  1051  0E1C                     	;# 
  1052  0E1D                     	;# 
  1053  0E1E                     	;# 
  1054  0E1F                     	;# 
  1055  0E20                     	;# 
  1056  0E21                     	;# 
  1057  0E22                     	;# 
  1058  0E24                     	;# 
  1059  0E25                     	;# 
  1060  0E28                     	;# 
  1061  0E29                     	;# 
  1062  0E2A                     	;# 
  1063  0E2B                     	;# 
  1064  0E2C                     	;# 
  1065  0E2D                     	;# 
  1066  0E2E                     	;# 
  1067  0E2F                     	;# 
  1068  0E90                     	;# 
  1069  0E91                     	;# 
  1070  0E92                     	;# 
  1071  0E94                     	;# 
  1072  0E95                     	;# 
  1073  0EA0                     	;# 
  1074  0EA1                     	;# 
  1075  0EA2                     	;# 
  1076  0EA3                     	;# 
  1077  0EA4                     	;# 
  1078  0EA5                     	;# 
  1079  0F0F                     	;# 
  1080  0F10                     	;# 
  1081  0F11                     	;# 
  1082  0F12                     	;# 
  1083  0F13                     	;# 
  1084  0F14                     	;# 
  1085  0F15                     	;# 
  1086  0F16                     	;# 
  1087  0F17                     	;# 
  1088  0F18                     	;# 
  1089  0F19                     	;# 
  1090  0F1A                     	;# 
  1091  0F1B                     	;# 
  1092  0F1C                     	;# 
  1093  0F1D                     	;# 
  1094  0F1E                     	;# 
  1095  0F1F                     	;# 
  1096  0F20                     	;# 
  1097  0F21                     	;# 
  1098  0F22                     	;# 
  1099  0F23                     	;# 
  1100  0F24                     	;# 
  1101  0F25                     	;# 
  1102  0F26                     	;# 
  1103  0F27                     	;# 
  1104  0F28                     	;# 
  1105  0F29                     	;# 
  1106  0F2A                     	;# 
  1107  0F2B                     	;# 
  1108  0F2C                     	;# 
  1109  0F2D                     	;# 
  1110  0F2E                     	;# 
  1111  0F2F                     	;# 
  1112  0F30                     	;# 
  1113  0F31                     	;# 
  1114  0F32                     	;# 
  1115  0F33                     	;# 
  1116  0F34                     	;# 
  1117  0F35                     	;# 
  1118  0F36                     	;# 
  1119  0F37                     	;# 
  1120  0FE4                     	;# 
  1121  0FE5                     	;# 
  1122  0FE6                     	;# 
  1123  0FE7                     	;# 
  1124  0FE8                     	;# 
  1125  0FE9                     	;# 
  1126  0FEA                     	;# 
  1127  0FEB                     	;# 
  1128  0FED                     	;# 
  1129  0FEE                     	;# 
  1130  0FEF                     	;# 
  1131  0000                     	;# 
  1132  0001                     	;# 
  1133  0002                     	;# 
  1134  0003                     	;# 
  1135  0004                     	;# 
  1136  0005                     	;# 
  1137  0006                     	;# 
  1138  0007                     	;# 
  1139  0008                     	;# 
  1140  0009                     	;# 
  1141  000A                     	;# 
  1142  000B                     	;# 
  1143  000C                     	;# 
  1144  000E                     	;# 
  1145  0010                     	;# 
  1146  0011                     	;# 
  1147  0012                     	;# 
  1148  0013                     	;# 
  1149  0014                     	;# 
  1150  0015                     	;# 
  1151  0015                     	;# 
  1152  0016                     	;# 
  1153  0016                     	;# 
  1154  0017                     	;# 
  1155  0018                     	;# 
  1156  0019                     	;# 
  1157  0019                     	;# 
  1158  001A                     	;# 
  1159  001B                     	;# 
  1160  001C                     	;# 
  1161  001D                     	;# 
  1162  001E                     	;# 
  1163  001F                     	;# 
  1164  008C                     	;# 
  1165  008E                     	;# 
  1166  0090                     	;# 
  1167  0091                     	;# 
  1168  0092                     	;# 
  1169  0093                     	;# 
  1170  0094                     	;# 
  1171  0097                     	;# 
  1172  009B                     	;# 
  1173  009B                     	;# 
  1174  009C                     	;# 
  1175  009D                     	;# 
  1176  009E                     	;# 
  1177  009F                     	;# 
  1178  010C                     	;# 
  1179  010E                     	;# 
  1180  0111                     	;# 
  1181  0112                     	;# 
  1182  0113                     	;# 
  1183  0114                     	;# 
  1184  0115                     	;# 
  1185  0116                     	;# 
  1186  0117                     	;# 
  1187  0118                     	;# 
  1188  0119                     	;# 
  1189  018C                     	;# 
  1190  018E                     	;# 
  1191  0197                     	;# 
  1192  0199                     	;# 
  1193  0199                     	;# 
  1194  0199                     	;# 
  1195  019A                     	;# 
  1196  019A                     	;# 
  1197  019A                     	;# 
  1198  019B                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019C                     	;# 
  1204  019C                     	;# 
  1205  019C                     	;# 
  1206  019D                     	;# 
  1207  019D                     	;# 
  1208  019D                     	;# 
  1209  019E                     	;# 
  1210  019E                     	;# 
  1211  019E                     	;# 
  1212  019F                     	;# 
  1213  019F                     	;# 
  1214  019F                     	;# 
  1215  019F                     	;# 
  1216  019F                     	;# 
  1217  020C                     	;# 
  1218  020E                     	;# 
  1219  0211                     	;# 
  1220  0211                     	;# 
  1221  0212                     	;# 
  1222  0212                     	;# 
  1223  0213                     	;# 
  1224  0213                     	;# 
  1225  0214                     	;# 
  1226  0214                     	;# 
  1227  0215                     	;# 
  1228  0215                     	;# 
  1229  0215                     	;# 
  1230  0215                     	;# 
  1231  0216                     	;# 
  1232  0216                     	;# 
  1233  0217                     	;# 
  1234  0217                     	;# 
  1235  0219                     	;# 
  1236  021A                     	;# 
  1237  021B                     	;# 
  1238  021C                     	;# 
  1239  021D                     	;# 
  1240  021D                     	;# 
  1241  021E                     	;# 
  1242  021F                     	;# 
  1243  028C                     	;# 
  1244  028E                     	;# 
  1245  0291                     	;# 
  1246  0291                     	;# 
  1247  0292                     	;# 
  1248  0293                     	;# 
  1249  0294                     	;# 
  1250  0295                     	;# 
  1251  0295                     	;# 
  1252  0296                     	;# 
  1253  0297                     	;# 
  1254  0298                     	;# 
  1255  029F                     	;# 
  1256  030C                     	;# 
  1257  030E                     	;# 
  1258  0311                     	;# 
  1259  0311                     	;# 
  1260  0312                     	;# 
  1261  0313                     	;# 
  1262  0314                     	;# 
  1263  0315                     	;# 
  1264  0315                     	;# 
  1265  0316                     	;# 
  1266  0317                     	;# 
  1267  0318                     	;# 
  1268  038C                     	;# 
  1269  038E                     	;# 
  1270  0391                     	;# 
  1271  0392                     	;# 
  1272  0393                     	;# 
  1273  0397                     	;# 
  1274  0398                     	;# 
  1275  0399                     	;# 
  1276  039A                     	;# 
  1277  039C                     	;# 
  1278  039D                     	;# 
  1279  039E                     	;# 
  1280  039F                     	;# 
  1281  0411                     	;# 
  1282  0411                     	;# 
  1283  0412                     	;# 
  1284  0413                     	;# 
  1285  0414                     	;# 
  1286  0415                     	;# 
  1287  0416                     	;# 
  1288  0417                     	;# 
  1289  0418                     	;# 
  1290  0418                     	;# 
  1291  0419                     	;# 
  1292  041A                     	;# 
  1293  041B                     	;# 
  1294  041C                     	;# 
  1295  041D                     	;# 
  1296  041E                     	;# 
  1297  041F                     	;# 
  1298  0498                     	;# 
  1299  0498                     	;# 
  1300  0499                     	;# 
  1301  049A                     	;# 
  1302  049B                     	;# 
  1303  049B                     	;# 
  1304  049C                     	;# 
  1305  049D                     	;# 
  1306  049E                     	;# 
  1307  049F                     	;# 
  1308  0617                     	;# 
  1309  0618                     	;# 
  1310  0619                     	;# 
  1311  0619                     	;# 
  1312  061A                     	;# 
  1313  061B                     	;# 
  1314  061C                     	;# 
  1315  061C                     	;# 
  1316  061F                     	;# 
  1317  0691                     	;# 
  1318  0692                     	;# 
  1319  0693                     	;# 
  1320  0694                     	;# 
  1321  0695                     	;# 
  1322  0696                     	;# 
  1323  0697                     	;# 
  1324  0698                     	;# 
  1325  0699                     	;# 
  1326  0711                     	;# 
  1327  0712                     	;# 
  1328  0713                     	;# 
  1329  0714                     	;# 
  1330  0715                     	;# 
  1331  0716                     	;# 
  1332  0717                     	;# 
  1333  0718                     	;# 
  1334  0719                     	;# 
  1335  0891                     	;# 
  1336  0891                     	;# 
  1337  0891                     	;# 
  1338  0891                     	;# 
  1339  0891                     	;# 
  1340  0891                     	;# 
  1341  0892                     	;# 
  1342  0892                     	;# 
  1343  0892                     	;# 
  1344  0893                     	;# 
  1345  0893                     	;# 
  1346  0893                     	;# 
  1347  0893                     	;# 
  1348  0893                     	;# 
  1349  0893                     	;# 
  1350  0894                     	;# 
  1351  0894                     	;# 
  1352  0894                     	;# 
  1353  0895                     	;# 
  1354  0895                     	;# 
  1355  0895                     	;# 
  1356  0896                     	;# 
  1357  0896                     	;# 
  1358  0896                     	;# 
  1359  089B                     	;# 
  1360  0911                     	;# 
  1361  0912                     	;# 
  1362  0913                     	;# 
  1363  0914                     	;# 
  1364  0915                     	;# 
  1365  0916                     	;# 
  1366  0918                     	;# 
  1367  0919                     	;# 
  1368  091A                     	;# 
  1369  091B                     	;# 
  1370  091C                     	;# 
  1371  091D                     	;# 
  1372  091E                     	;# 
  1373  091F                     	;# 
  1374  0E0F                     	;# 
  1375  0E10                     	;# 
  1376  0E11                     	;# 
  1377  0E12                     	;# 
  1378  0E13                     	;# 
  1379  0E14                     	;# 
  1380  0E15                     	;# 
  1381  0E16                     	;# 
  1382  0E17                     	;# 
  1383  0E18                     	;# 
  1384  0E19                     	;# 
  1385  0E1A                     	;# 
  1386  0E1B                     	;# 
  1387  0E1C                     	;# 
  1388  0E1D                     	;# 
  1389  0E1E                     	;# 
  1390  0E1F                     	;# 
  1391  0E20                     	;# 
  1392  0E21                     	;# 
  1393  0E22                     	;# 
  1394  0E24                     	;# 
  1395  0E25                     	;# 
  1396  0E28                     	;# 
  1397  0E29                     	;# 
  1398  0E2A                     	;# 
  1399  0E2B                     	;# 
  1400  0E2C                     	;# 
  1401  0E2D                     	;# 
  1402  0E2E                     	;# 
  1403  0E2F                     	;# 
  1404  0E90                     	;# 
  1405  0E91                     	;# 
  1406  0E92                     	;# 
  1407  0E94                     	;# 
  1408  0E95                     	;# 
  1409  0EA0                     	;# 
  1410  0EA1                     	;# 
  1411  0EA2                     	;# 
  1412  0EA3                     	;# 
  1413  0EA4                     	;# 
  1414  0EA5                     	;# 
  1415  0F0F                     	;# 
  1416  0F10                     	;# 
  1417  0F11                     	;# 
  1418  0F12                     	;# 
  1419  0F13                     	;# 
  1420  0F14                     	;# 
  1421  0F15                     	;# 
  1422  0F16                     	;# 
  1423  0F17                     	;# 
  1424  0F18                     	;# 
  1425  0F19                     	;# 
  1426  0F1A                     	;# 
  1427  0F1B                     	;# 
  1428  0F1C                     	;# 
  1429  0F1D                     	;# 
  1430  0F1E                     	;# 
  1431  0F1F                     	;# 
  1432  0F20                     	;# 
  1433  0F21                     	;# 
  1434  0F22                     	;# 
  1435  0F23                     	;# 
  1436  0F24                     	;# 
  1437  0F25                     	;# 
  1438  0F26                     	;# 
  1439  0F27                     	;# 
  1440  0F28                     	;# 
  1441  0F29                     	;# 
  1442  0F2A                     	;# 
  1443  0F2B                     	;# 
  1444  0F2C                     	;# 
  1445  0F2D                     	;# 
  1446  0F2E                     	;# 
  1447  0F2F                     	;# 
  1448  0F30                     	;# 
  1449  0F31                     	;# 
  1450  0F32                     	;# 
  1451  0F33                     	;# 
  1452  0F34                     	;# 
  1453  0F35                     	;# 
  1454  0F36                     	;# 
  1455  0F37                     	;# 
  1456  0FE4                     	;# 
  1457  0FE5                     	;# 
  1458  0FE6                     	;# 
  1459  0FE7                     	;# 
  1460  0FE8                     	;# 
  1461  0FE9                     	;# 
  1462  0FEA                     	;# 
  1463  0FEB                     	;# 
  1464  0FED                     	;# 
  1465  0FEE                     	;# 
  1466  0FEF                     	;# 
  1467  0000                     	;# 
  1468  0001                     	;# 
  1469  0002                     	;# 
  1470  0003                     	;# 
  1471  0004                     	;# 
  1472  0005                     	;# 
  1473  0006                     	;# 
  1474  0007                     	;# 
  1475  0008                     	;# 
  1476  0009                     	;# 
  1477  000A                     	;# 
  1478  000B                     	;# 
  1479  000C                     	;# 
  1480  000E                     	;# 
  1481  0010                     	;# 
  1482  0011                     	;# 
  1483  0012                     	;# 
  1484  0013                     	;# 
  1485  0014                     	;# 
  1486  0015                     	;# 
  1487  0015                     	;# 
  1488  0016                     	;# 
  1489  0016                     	;# 
  1490  0017                     	;# 
  1491  0018                     	;# 
  1492  0019                     	;# 
  1493  0019                     	;# 
  1494  001A                     	;# 
  1495  001B                     	;# 
  1496  001C                     	;# 
  1497  001D                     	;# 
  1498  001E                     	;# 
  1499  001F                     	;# 
  1500  008C                     	;# 
  1501  008E                     	;# 
  1502  0090                     	;# 
  1503  0091                     	;# 
  1504  0092                     	;# 
  1505  0093                     	;# 
  1506  0094                     	;# 
  1507  0097                     	;# 
  1508  009B                     	;# 
  1509  009B                     	;# 
  1510  009C                     	;# 
  1511  009D                     	;# 
  1512  009E                     	;# 
  1513  009F                     	;# 
  1514  010C                     	;# 
  1515  010E                     	;# 
  1516  0111                     	;# 
  1517  0112                     	;# 
  1518  0113                     	;# 
  1519  0114                     	;# 
  1520  0115                     	;# 
  1521  0116                     	;# 
  1522  0117                     	;# 
  1523  0118                     	;# 
  1524  0119                     	;# 
  1525  018C                     	;# 
  1526  018E                     	;# 
  1527  0197                     	;# 
  1528  0199                     	;# 
  1529  0199                     	;# 
  1530  0199                     	;# 
  1531  019A                     	;# 
  1532  019A                     	;# 
  1533  019A                     	;# 
  1534  019B                     	;# 
  1535  019B                     	;# 
  1536  019B                     	;# 
  1537  019B                     	;# 
  1538  019B                     	;# 
  1539  019C                     	;# 
  1540  019C                     	;# 
  1541  019C                     	;# 
  1542  019D                     	;# 
  1543  019D                     	;# 
  1544  019D                     	;# 
  1545  019E                     	;# 
  1546  019E                     	;# 
  1547  019E                     	;# 
  1548  019F                     	;# 
  1549  019F                     	;# 
  1550  019F                     	;# 
  1551  019F                     	;# 
  1552  019F                     	;# 
  1553  020C                     	;# 
  1554  020E                     	;# 
  1555  0211                     	;# 
  1556  0211                     	;# 
  1557  0212                     	;# 
  1558  0212                     	;# 
  1559  0213                     	;# 
  1560  0213                     	;# 
  1561  0214                     	;# 
  1562  0214                     	;# 
  1563  0215                     	;# 
  1564  0215                     	;# 
  1565  0215                     	;# 
  1566  0215                     	;# 
  1567  0216                     	;# 
  1568  0216                     	;# 
  1569  0217                     	;# 
  1570  0217                     	;# 
  1571  0219                     	;# 
  1572  021A                     	;# 
  1573  021B                     	;# 
  1574  021C                     	;# 
  1575  021D                     	;# 
  1576  021D                     	;# 
  1577  021E                     	;# 
  1578  021F                     	;# 
  1579  028C                     	;# 
  1580  028E                     	;# 
  1581  0291                     	;# 
  1582  0291                     	;# 
  1583  0292                     	;# 
  1584  0293                     	;# 
  1585  0294                     	;# 
  1586  0295                     	;# 
  1587  0295                     	;# 
  1588  0296                     	;# 
  1589  0297                     	;# 
  1590  0298                     	;# 
  1591  029F                     	;# 
  1592  030C                     	;# 
  1593  030E                     	;# 
  1594  0311                     	;# 
  1595  0311                     	;# 
  1596  0312                     	;# 
  1597  0313                     	;# 
  1598  0314                     	;# 
  1599  0315                     	;# 
  1600  0315                     	;# 
  1601  0316                     	;# 
  1602  0317                     	;# 
  1603  0318                     	;# 
  1604  038C                     	;# 
  1605  038E                     	;# 
  1606  0391                     	;# 
  1607  0392                     	;# 
  1608  0393                     	;# 
  1609  0397                     	;# 
  1610  0398                     	;# 
  1611  0399                     	;# 
  1612  039A                     	;# 
  1613  039C                     	;# 
  1614  039D                     	;# 
  1615  039E                     	;# 
  1616  039F                     	;# 
  1617  0411                     	;# 
  1618  0411                     	;# 
  1619  0412                     	;# 
  1620  0413                     	;# 
  1621  0414                     	;# 
  1622  0415                     	;# 
  1623  0416                     	;# 
  1624  0417                     	;# 
  1625  0418                     	;# 
  1626  0418                     	;# 
  1627  0419                     	;# 
  1628  041A                     	;# 
  1629  041B                     	;# 
  1630  041C                     	;# 
  1631  041D                     	;# 
  1632  041E                     	;# 
  1633  041F                     	;# 
  1634  0498                     	;# 
  1635  0498                     	;# 
  1636  0499                     	;# 
  1637  049A                     	;# 
  1638  049B                     	;# 
  1639  049B                     	;# 
  1640  049C                     	;# 
  1641  049D                     	;# 
  1642  049E                     	;# 
  1643  049F                     	;# 
  1644  0617                     	;# 
  1645  0618                     	;# 
  1646  0619                     	;# 
  1647  0619                     	;# 
  1648  061A                     	;# 
  1649  061B                     	;# 
  1650  061C                     	;# 
  1651  061C                     	;# 
  1652  061F                     	;# 
  1653  0691                     	;# 
  1654  0692                     	;# 
  1655  0693                     	;# 
  1656  0694                     	;# 
  1657  0695                     	;# 
  1658  0696                     	;# 
  1659  0697                     	;# 
  1660  0698                     	;# 
  1661  0699                     	;# 
  1662  0711                     	;# 
  1663  0712                     	;# 
  1664  0713                     	;# 
  1665  0714                     	;# 
  1666  0715                     	;# 
  1667  0716                     	;# 
  1668  0717                     	;# 
  1669  0718                     	;# 
  1670  0719                     	;# 
  1671  0891                     	;# 
  1672  0891                     	;# 
  1673  0891                     	;# 
  1674  0891                     	;# 
  1675  0891                     	;# 
  1676  0891                     	;# 
  1677  0892                     	;# 
  1678  0892                     	;# 
  1679  0892                     	;# 
  1680  0893                     	;# 
  1681  0893                     	;# 
  1682  0893                     	;# 
  1683  0893                     	;# 
  1684  0893                     	;# 
  1685  0893                     	;# 
  1686  0894                     	;# 
  1687  0894                     	;# 
  1688  0894                     	;# 
  1689  0895                     	;# 
  1690  0895                     	;# 
  1691  0895                     	;# 
  1692  0896                     	;# 
  1693  0896                     	;# 
  1694  0896                     	;# 
  1695  089B                     	;# 
  1696  0911                     	;# 
  1697  0912                     	;# 
  1698  0913                     	;# 
  1699  0914                     	;# 
  1700  0915                     	;# 
  1701  0916                     	;# 
  1702  0918                     	;# 
  1703  0919                     	;# 
  1704  091A                     	;# 
  1705  091B                     	;# 
  1706  091C                     	;# 
  1707  091D                     	;# 
  1708  091E                     	;# 
  1709  091F                     	;# 
  1710  0E0F                     	;# 
  1711  0E10                     	;# 
  1712  0E11                     	;# 
  1713  0E12                     	;# 
  1714  0E13                     	;# 
  1715  0E14                     	;# 
  1716  0E15                     	;# 
  1717  0E16                     	;# 
  1718  0E17                     	;# 
  1719  0E18                     	;# 
  1720  0E19                     	;# 
  1721  0E1A                     	;# 
  1722  0E1B                     	;# 
  1723  0E1C                     	;# 
  1724  0E1D                     	;# 
  1725  0E1E                     	;# 
  1726  0E1F                     	;# 
  1727  0E20                     	;# 
  1728  0E21                     	;# 
  1729  0E22                     	;# 
  1730  0E24                     	;# 
  1731  0E25                     	;# 
  1732  0E28                     	;# 
  1733  0E29                     	;# 
  1734  0E2A                     	;# 
  1735  0E2B                     	;# 
  1736  0E2C                     	;# 
  1737  0E2D                     	;# 
  1738  0E2E                     	;# 
  1739  0E2F                     	;# 
  1740  0E90                     	;# 
  1741  0E91                     	;# 
  1742  0E92                     	;# 
  1743  0E94                     	;# 
  1744  0E95                     	;# 
  1745  0EA0                     	;# 
  1746  0EA1                     	;# 
  1747  0EA2                     	;# 
  1748  0EA3                     	;# 
  1749  0EA4                     	;# 
  1750  0EA5                     	;# 
  1751  0F0F                     	;# 
  1752  0F10                     	;# 
  1753  0F11                     	;# 
  1754  0F12                     	;# 
  1755  0F13                     	;# 
  1756  0F14                     	;# 
  1757  0F15                     	;# 
  1758  0F16                     	;# 
  1759  0F17                     	;# 
  1760  0F18                     	;# 
  1761  0F19                     	;# 
  1762  0F1A                     	;# 
  1763  0F1B                     	;# 
  1764  0F1C                     	;# 
  1765  0F1D                     	;# 
  1766  0F1E                     	;# 
  1767  0F1F                     	;# 
  1768  0F20                     	;# 
  1769  0F21                     	;# 
  1770  0F22                     	;# 
  1771  0F23                     	;# 
  1772  0F24                     	;# 
  1773  0F25                     	;# 
  1774  0F26                     	;# 
  1775  0F27                     	;# 
  1776  0F28                     	;# 
  1777  0F29                     	;# 
  1778  0F2A                     	;# 
  1779  0F2B                     	;# 
  1780  0F2C                     	;# 
  1781  0F2D                     	;# 
  1782  0F2E                     	;# 
  1783  0F2F                     	;# 
  1784  0F30                     	;# 
  1785  0F31                     	;# 
  1786  0F32                     	;# 
  1787  0F33                     	;# 
  1788  0F34                     	;# 
  1789  0F35                     	;# 
  1790  0F36                     	;# 
  1791  0F37                     	;# 
  1792  0FE4                     	;# 
  1793  0FE5                     	;# 
  1794  0FE6                     	;# 
  1795  0FE7                     	;# 
  1796  0FE8                     	;# 
  1797  0FE9                     	;# 
  1798  0FEA                     	;# 
  1799  0FEB                     	;# 
  1800  0FED                     	;# 
  1801  0FEE                     	;# 
  1802  0FEF                     	;# 
  1803  0000                     	;# 
  1804  0001                     	;# 
  1805  0002                     	;# 
  1806  0003                     	;# 
  1807  0004                     	;# 
  1808  0005                     	;# 
  1809  0006                     	;# 
  1810  0007                     	;# 
  1811  0008                     	;# 
  1812  0009                     	;# 
  1813  000A                     	;# 
  1814  000B                     	;# 
  1815  000C                     	;# 
  1816  000E                     	;# 
  1817  0010                     	;# 
  1818  0011                     	;# 
  1819  0012                     	;# 
  1820  0013                     	;# 
  1821  0014                     	;# 
  1822  0015                     	;# 
  1823  0015                     	;# 
  1824  0016                     	;# 
  1825  0016                     	;# 
  1826  0017                     	;# 
  1827  0018                     	;# 
  1828  0019                     	;# 
  1829  0019                     	;# 
  1830  001A                     	;# 
  1831  001B                     	;# 
  1832  001C                     	;# 
  1833  001D                     	;# 
  1834  001E                     	;# 
  1835  001F                     	;# 
  1836  008C                     	;# 
  1837  008E                     	;# 
  1838  0090                     	;# 
  1839  0091                     	;# 
  1840  0092                     	;# 
  1841  0093                     	;# 
  1842  0094                     	;# 
  1843  0097                     	;# 
  1844  009B                     	;# 
  1845  009B                     	;# 
  1846  009C                     	;# 
  1847  009D                     	;# 
  1848  009E                     	;# 
  1849  009F                     	;# 
  1850  010C                     	;# 
  1851  010E                     	;# 
  1852  0111                     	;# 
  1853  0112                     	;# 
  1854  0113                     	;# 
  1855  0114                     	;# 
  1856  0115                     	;# 
  1857  0116                     	;# 
  1858  0117                     	;# 
  1859  0118                     	;# 
  1860  0119                     	;# 
  1861  018C                     	;# 
  1862  018E                     	;# 
  1863  0197                     	;# 
  1864  0199                     	;# 
  1865  0199                     	;# 
  1866  0199                     	;# 
  1867  019A                     	;# 
  1868  019A                     	;# 
  1869  019A                     	;# 
  1870  019B                     	;# 
  1871  019B                     	;# 
  1872  019B                     	;# 
  1873  019B                     	;# 
  1874  019B                     	;# 
  1875  019C                     	;# 
  1876  019C                     	;# 
  1877  019C                     	;# 
  1878  019D                     	;# 
  1879  019D                     	;# 
  1880  019D                     	;# 
  1881  019E                     	;# 
  1882  019E                     	;# 
  1883  019E                     	;# 
  1884  019F                     	;# 
  1885  019F                     	;# 
  1886  019F                     	;# 
  1887  019F                     	;# 
  1888  019F                     	;# 
  1889  020C                     	;# 
  1890  020E                     	;# 
  1891  0211                     	;# 
  1892  0211                     	;# 
  1893  0212                     	;# 
  1894  0212                     	;# 
  1895  0213                     	;# 
  1896  0213                     	;# 
  1897  0214                     	;# 
  1898  0214                     	;# 
  1899  0215                     	;# 
  1900  0215                     	;# 
  1901  0215                     	;# 
  1902  0215                     	;# 
  1903  0216                     	;# 
  1904  0216                     	;# 
  1905  0217                     	;# 
  1906  0217                     	;# 
  1907  0219                     	;# 
  1908  021A                     	;# 
  1909  021B                     	;# 
  1910  021C                     	;# 
  1911  021D                     	;# 
  1912  021D                     	;# 
  1913  021E                     	;# 
  1914  021F                     	;# 
  1915  028C                     	;# 
  1916  028E                     	;# 
  1917  0291                     	;# 
  1918  0291                     	;# 
  1919  0292                     	;# 
  1920  0293                     	;# 
  1921  0294                     	;# 
  1922  0295                     	;# 
  1923  0295                     	;# 
  1924  0296                     	;# 
  1925  0297                     	;# 
  1926  0298                     	;# 
  1927  029F                     	;# 
  1928  030C                     	;# 
  1929  030E                     	;# 
  1930  0311                     	;# 
  1931  0311                     	;# 
  1932  0312                     	;# 
  1933  0313                     	;# 
  1934  0314                     	;# 
  1935  0315                     	;# 
  1936  0315                     	;# 
  1937  0316                     	;# 
  1938  0317                     	;# 
  1939  0318                     	;# 
  1940  038C                     	;# 
  1941  038E                     	;# 
  1942  0391                     	;# 
  1943  0392                     	;# 
  1944  0393                     	;# 
  1945  0397                     	;# 
  1946  0398                     	;# 
  1947  0399                     	;# 
  1948  039A                     	;# 
  1949  039C                     	;# 
  1950  039D                     	;# 
  1951  039E                     	;# 
  1952  039F                     	;# 
  1953  0411                     	;# 
  1954  0411                     	;# 
  1955  0412                     	;# 
  1956  0413                     	;# 
  1957  0414                     	;# 
  1958  0415                     	;# 
  1959  0416                     	;# 
  1960  0417                     	;# 
  1961  0418                     	;# 
  1962  0418                     	;# 
  1963  0419                     	;# 
  1964  041A                     	;# 
  1965  041B                     	;# 
  1966  041C                     	;# 
  1967  041D                     	;# 
  1968  041E                     	;# 
  1969  041F                     	;# 
  1970  0498                     	;# 
  1971  0498                     	;# 
  1972  0499                     	;# 
  1973  049A                     	;# 
  1974  049B                     	;# 
  1975  049B                     	;# 
  1976  049C                     	;# 
  1977  049D                     	;# 
  1978  049E                     	;# 
  1979  049F                     	;# 
  1980  0617                     	;# 
  1981  0618                     	;# 
  1982  0619                     	;# 
  1983  0619                     	;# 
  1984  061A                     	;# 
  1985  061B                     	;# 
  1986  061C                     	;# 
  1987  061C                     	;# 
  1988  061F                     	;# 
  1989  0691                     	;# 
  1990  0692                     	;# 
  1991  0693                     	;# 
  1992  0694                     	;# 
  1993  0695                     	;# 
  1994  0696                     	;# 
  1995  0697                     	;# 
  1996  0698                     	;# 
  1997  0699                     	;# 
  1998  0711                     	;# 
  1999  0712                     	;# 
  2000  0713                     	;# 
  2001  0714                     	;# 
  2002  0715                     	;# 
  2003  0716                     	;# 
  2004  0717                     	;# 
  2005  0718                     	;# 
  2006  0719                     	;# 
  2007  0891                     	;# 
  2008  0891                     	;# 
  2009  0891                     	;# 
  2010  0891                     	;# 
  2011  0891                     	;# 
  2012  0891                     	;# 
  2013  0892                     	;# 
  2014  0892                     	;# 
  2015  0892                     	;# 
  2016  0893                     	;# 
  2017  0893                     	;# 
  2018  0893                     	;# 
  2019  0893                     	;# 
  2020  0893                     	;# 
  2021  0893                     	;# 
  2022  0894                     	;# 
  2023  0894                     	;# 
  2024  0894                     	;# 
  2025  0895                     	;# 
  2026  0895                     	;# 
  2027  0895                     	;# 
  2028  0896                     	;# 
  2029  0896                     	;# 
  2030  0896                     	;# 
  2031  089B                     	;# 
  2032  0911                     	;# 
  2033  0912                     	;# 
  2034  0913                     	;# 
  2035  0914                     	;# 
  2036  0915                     	;# 
  2037  0916                     	;# 
  2038  0918                     	;# 
  2039  0919                     	;# 
  2040  091A                     	;# 
  2041  091B                     	;# 
  2042  091C                     	;# 
  2043  091D                     	;# 
  2044  091E                     	;# 
  2045  091F                     	;# 
  2046  0E0F                     	;# 
  2047  0E10                     	;# 
  2048  0E11                     	;# 
  2049  0E12                     	;# 
  2050  0E13                     	;# 
  2051  0E14                     	;# 
  2052  0E15                     	;# 
  2053  0E16                     	;# 
  2054  0E17                     	;# 
  2055  0E18                     	;# 
  2056  0E19                     	;# 
  2057  0E1A                     	;# 
  2058  0E1B                     	;# 
  2059  0E1C                     	;# 
  2060  0E1D                     	;# 
  2061  0E1E                     	;# 
  2062  0E1F                     	;# 
  2063  0E20                     	;# 
  2064  0E21                     	;# 
  2065  0E22                     	;# 
  2066  0E24                     	;# 
  2067  0E25                     	;# 
  2068  0E28                     	;# 
  2069  0E29                     	;# 
  2070  0E2A                     	;# 
  2071  0E2B                     	;# 
  2072  0E2C                     	;# 
  2073  0E2D                     	;# 
  2074  0E2E                     	;# 
  2075  0E2F                     	;# 
  2076  0E90                     	;# 
  2077  0E91                     	;# 
  2078  0E92                     	;# 
  2079  0E94                     	;# 
  2080  0E95                     	;# 
  2081  0EA0                     	;# 
  2082  0EA1                     	;# 
  2083  0EA2                     	;# 
  2084  0EA3                     	;# 
  2085  0EA4                     	;# 
  2086  0EA5                     	;# 
  2087  0F0F                     	;# 
  2088  0F10                     	;# 
  2089  0F11                     	;# 
  2090  0F12                     	;# 
  2091  0F13                     	;# 
  2092  0F14                     	;# 
  2093  0F15                     	;# 
  2094  0F16                     	;# 
  2095  0F17                     	;# 
  2096  0F18                     	;# 
  2097  0F19                     	;# 
  2098  0F1A                     	;# 
  2099  0F1B                     	;# 
  2100  0F1C                     	;# 
  2101  0F1D                     	;# 
  2102  0F1E                     	;# 
  2103  0F1F                     	;# 
  2104  0F20                     	;# 
  2105  0F21                     	;# 
  2106  0F22                     	;# 
  2107  0F23                     	;# 
  2108  0F24                     	;# 
  2109  0F25                     	;# 
  2110  0F26                     	;# 
  2111  0F27                     	;# 
  2112  0F28                     	;# 
  2113  0F29                     	;# 
  2114  0F2A                     	;# 
  2115  0F2B                     	;# 
  2116  0F2C                     	;# 
  2117  0F2D                     	;# 
  2118  0F2E                     	;# 
  2119  0F2F                     	;# 
  2120  0F30                     	;# 
  2121  0F31                     	;# 
  2122  0F32                     	;# 
  2123  0F33                     	;# 
  2124  0F34                     	;# 
  2125  0F35                     	;# 
  2126  0F36                     	;# 
  2127  0F37                     	;# 
  2128  0FE4                     	;# 
  2129  0FE5                     	;# 
  2130  0FE6                     	;# 
  2131  0FE7                     	;# 
  2132  0FE8                     	;# 
  2133  0FE9                     	;# 
  2134  0FEA                     	;# 
  2135  0FEB                     	;# 
  2136  0FED                     	;# 
  2137  0FEE                     	;# 
  2138  0FEF                     	;_frameBuff
  2139                           
  2140                           	psect	idataBANK2
  2141  0000'                    __pidataBANK2:	
  2142                           
  2143                           ;initializer for display_scroll@F7650
  2144  0000' 3400               	retlw	0
  2145  0001' 3400               	retlw	0
  2146  0002' 3400               	retlw	0
  2147  0003' 3400               	retlw	0
  2148  0004' 3400               	retlw	0
  2149  0005' 3400               	retlw	0
  2150  0006' 3400               	retlw	0
  2151  0007' 34FF               	retlw	255
  2152  0008' 342F               	retlw	47
  2153                           
  2154                           ;initializer for display_update@F7624
  2155  0009' 3400               	retlw	0
  2156  000A' 3421               	retlw	33
  2157  000B' 3400               	retlw	0
  2158  000C' 347F               	retlw	127
  2159  000D' 34B0               	retlw	176
  2160                           
  2161                           ;initializer for display_contrast@F7618
  2162  000E' 3400               	retlw	0
  2163  000F' 3481               	retlw	129
  2164  0010' 3400               	retlw	0
  2165                           
  2166                           ;initializer for display_stopscroll@F7644
  2167  0011' 3400               	retlw	0
  2168  0012' 342E               	retlw	46
  2169                           
  2170                           	psect	idataBANK3
  2171  0000'                    __pidataBANK3:	
  2172                           
  2173                           ;initializer for display_init@F7608
  2174  0000' 3400               	retlw	0
  2175  0001' 34AE               	retlw	174
  2176  0002' 34D5               	retlw	213
  2177  0003' 3480               	retlw	128
  2178  0004' 34A8               	retlw	168
  2179  0005' 343F               	retlw	63
  2180  0006' 34D3               	retlw	211
  2181  0007' 3400               	retlw	0
  2182  0008' 3440               	retlw	64
  2183  0009' 348D               	retlw	141
  2184  000A' 3414               	retlw	20
  2185  000B' 3420               	retlw	32
  2186  000C' 3400               	retlw	0
  2187  000D' 34A1               	retlw	161
  2188  000E' 34C8               	retlw	200
  2189  000F' 34DA               	retlw	218
  2190  0010' 3412               	retlw	18
  2191  0011' 3481               	retlw	129
  2192  0012' 34CF               	retlw	207
  2193  0013' 34D9               	retlw	217
  2194  0014' 34F1               	retlw	241
  2195  0015' 34DB               	retlw	219
  2196  0016' 3440               	retlw	64
  2197  0017' 34A4               	retlw	164
  2198  0018' 34A6               	retlw	166
  2199  0019' 34AF               	retlw	175
  2200                           
  2201                           	psect	idataBIGRAM
  2202  0000'                    __pidataBIGRAM:	
  2203                           
  2204                           ;initializer for _frameBuff
  2205  0000' 3440               	retlw	64
  2206  0001' 3400               	retlw	0
  2207  0002' 3400               	retlw	0
  2208  0003' 3400               	retlw	0
  2209  0004' 3400               	retlw	0
  2210  0005' 3400               	retlw	0
  2211  0006' 3400               	retlw	0
  2212  0007' 3400               	retlw	0
  2213  0008' 3400               	retlw	0
  2214  0009' 3400               	retlw	0
  2215  000A' 3400               	retlw	0
  2216  000B' 3400               	retlw	0
  2217  000C' 3400               	retlw	0
  2218  000D' 3400               	retlw	0
  2219  000E' 3400               	retlw	0
  2220  000F' 3400               	retlw	0
  2221  0010' 3400               	retlw	0
  2222  0011' 3400               	retlw	0
  2223  0012' 3400               	retlw	0
  2224  0013' 3400               	retlw	0
  2225  0014' 3400               	retlw	0
  2226  0015' 3400               	retlw	0
  2227  0016' 3400               	retlw	0
  2228  0017' 3400               	retlw	0
  2229  0018' 3400               	retlw	0
  2230  0019' 3400               	retlw	0
  2231  001A' 3400               	retlw	0
  2232  001B' 3400               	retlw	0
  2233  001C' 3400               	retlw	0
  2234  001D' 3400               	retlw	0
  2235  001E' 3400               	retlw	0
  2236  001F' 3400               	retlw	0
  2237  0020' 3400               	retlw	0
  2238  0021' 3400               	retlw	0
  2239  0022' 3400               	retlw	0
  2240  0023' 3400               	retlw	0
  2241  0024' 3400               	retlw	0
  2242  0025' 3400               	retlw	0
  2243  0026' 3400               	retlw	0
  2244  0027' 3400               	retlw	0
  2245  0028' 3400               	retlw	0
  2246  0029' 3400               	retlw	0
  2247  002A' 3400               	retlw	0
  2248  002B' 3400               	retlw	0
  2249  002C' 3400               	retlw	0
  2250  002D' 3400               	retlw	0
  2251  002E' 3400               	retlw	0
  2252  002F' 3400               	retlw	0
  2253  0030' 3400               	retlw	0
  2254  0031' 3400               	retlw	0
  2255  0032' 3400               	retlw	0
  2256  0033' 3400               	retlw	0
  2257  0034' 3400               	retlw	0
  2258  0035' 3400               	retlw	0
  2259  0036' 3400               	retlw	0
  2260  0037' 3400               	retlw	0
  2261  0038' 3400               	retlw	0
  2262  0039' 3400               	retlw	0
  2263  003A' 3400               	retlw	0
  2264  003B' 3400               	retlw	0
  2265  003C' 3400               	retlw	0
  2266  003D' 3400               	retlw	0
  2267  003E' 3400               	retlw	0
  2268  003F' 3400               	retlw	0
  2269  0040' 3400               	retlw	0
  2270  0041' 3400               	retlw	0
  2271  0042' 3400               	retlw	0
  2272  0043' 3400               	retlw	0
  2273  0044' 3400               	retlw	0
  2274  0045' 3400               	retlw	0
  2275  0046' 3400               	retlw	0
  2276  0047' 3400               	retlw	0
  2277  0048' 3400               	retlw	0
  2278  0049' 3400               	retlw	0
  2279  004A' 3400               	retlw	0
  2280  004B' 3400               	retlw	0
  2281  004C' 3400               	retlw	0
  2282  004D' 3400               	retlw	0
  2283  004E' 3400               	retlw	0
  2284  004F' 3400               	retlw	0
  2285  0050' 3400               	retlw	0
  2286  0051' 3400               	retlw	0
  2287  0052' 3400               	retlw	0
  2288  0053' 3400               	retlw	0
  2289  0054' 3400               	retlw	0
  2290  0055' 3400               	retlw	0
  2291  0056' 3400               	retlw	0
  2292  0057' 3400               	retlw	0
  2293  0058' 3400               	retlw	0
  2294  0059' 3400               	retlw	0
  2295  005A' 3400               	retlw	0
  2296  005B' 3400               	retlw	0
  2297  005C' 3400               	retlw	0
  2298  005D' 3400               	retlw	0
  2299  005E' 3400               	retlw	0
  2300  005F' 3400               	retlw	0
  2301  0060' 3400               	retlw	0
  2302  0061' 3400               	retlw	0
  2303  0062' 3400               	retlw	0
  2304  0063' 3400               	retlw	0
  2305  0064' 3400               	retlw	0
  2306  0065' 3400               	retlw	0
  2307  0066' 3400               	retlw	0
  2308  0067' 3400               	retlw	0
  2309  0068' 3400               	retlw	0
  2310  0069' 3400               	retlw	0
  2311  006A' 3400               	retlw	0
  2312  006B' 3400               	retlw	0
  2313  006C' 3400               	retlw	0
  2314  006D' 3400               	retlw	0
  2315  006E' 3400               	retlw	0
  2316  006F' 3400               	retlw	0
  2317  0070' 3400               	retlw	0
  2318  0071' 3400               	retlw	0
  2319  0072' 3400               	retlw	0
  2320  0073' 3400               	retlw	0
  2321  0074' 3400               	retlw	0
  2322  0075' 3400               	retlw	0
  2323  0076' 3400               	retlw	0
  2324  0077' 3400               	retlw	0
  2325  0078' 3400               	retlw	0
  2326  0079' 3400               	retlw	0
  2327  007A' 3400               	retlw	0
  2328  007B' 3400               	retlw	0
  2329  007C' 3400               	retlw	0
  2330  007D' 3400               	retlw	0
  2331  007E' 3400               	retlw	0
  2332  007F' 3400               	retlw	0
  2333  0080' 3400               	retlw	0
  2334  0081' 3440               	retlw	64
  2335  0082' 3400               	retlw	0
  2336  0083' 3400               	retlw	0
  2337  0084' 3400               	retlw	0
  2338  0085' 3400               	retlw	0
  2339  0086' 3400               	retlw	0
  2340  0087' 3400               	retlw	0
  2341  0088' 3400               	retlw	0
  2342  0089' 3400               	retlw	0
  2343  008A' 3400               	retlw	0
  2344  008B' 3400               	retlw	0
  2345  008C' 3400               	retlw	0
  2346  008D' 3400               	retlw	0
  2347  008E' 3400               	retlw	0
  2348  008F' 3400               	retlw	0
  2349  0090' 3400               	retlw	0
  2350  0091' 3400               	retlw	0
  2351  0092' 3400               	retlw	0
  2352  0093' 3400               	retlw	0
  2353  0094' 3400               	retlw	0
  2354  0095' 3400               	retlw	0
  2355  0096' 3400               	retlw	0
  2356  0097' 3400               	retlw	0
  2357  0098' 3400               	retlw	0
  2358  0099' 3400               	retlw	0
  2359  009A' 3400               	retlw	0
  2360  009B' 3400               	retlw	0
  2361  009C' 3400               	retlw	0
  2362  009D' 3400               	retlw	0
  2363  009E' 3400               	retlw	0
  2364  009F' 3400               	retlw	0
  2365  00A0' 3400               	retlw	0
  2366  00A1' 3400               	retlw	0
  2367  00A2' 3400               	retlw	0
  2368  00A3' 3400               	retlw	0
  2369  00A4' 3400               	retlw	0
  2370  00A5' 3400               	retlw	0
  2371  00A6' 3400               	retlw	0
  2372  00A7' 3400               	retlw	0
  2373  00A8' 3400               	retlw	0
  2374  00A9' 3400               	retlw	0
  2375  00AA' 3400               	retlw	0
  2376  00AB' 3400               	retlw	0
  2377  00AC' 3400               	retlw	0
  2378  00AD' 3400               	retlw	0
  2379  00AE' 3400               	retlw	0
  2380  00AF' 3400               	retlw	0
  2381  00B0' 3400               	retlw	0
  2382  00B1' 3400               	retlw	0
  2383  00B2' 3400               	retlw	0
  2384  00B3' 3400               	retlw	0
  2385  00B4' 3400               	retlw	0
  2386  00B5' 3400               	retlw	0
  2387  00B6' 3400               	retlw	0
  2388  00B7' 3400               	retlw	0
  2389  00B8' 3400               	retlw	0
  2390  00B9' 3400               	retlw	0
  2391  00BA' 3400               	retlw	0
  2392  00BB' 3400               	retlw	0
  2393  00BC' 3400               	retlw	0
  2394  00BD' 3400               	retlw	0
  2395  00BE' 3400               	retlw	0
  2396  00BF' 3400               	retlw	0
  2397  00C0' 3400               	retlw	0
  2398  00C1' 3400               	retlw	0
  2399  00C2' 3400               	retlw	0
  2400  00C3' 3400               	retlw	0
  2401  00C4' 3400               	retlw	0
  2402  00C5' 3400               	retlw	0
  2403  00C6' 3400               	retlw	0
  2404  00C7' 3400               	retlw	0
  2405  00C8' 3400               	retlw	0
  2406  00C9' 3400               	retlw	0
  2407  00CA' 3400               	retlw	0
  2408  00CB' 3400               	retlw	0
  2409  00CC' 3400               	retlw	0
  2410  00CD' 3400               	retlw	0
  2411  00CE' 3400               	retlw	0
  2412  00CF' 3400               	retlw	0
  2413  00D0' 3400               	retlw	0
  2414  00D1' 3400               	retlw	0
  2415  00D2' 3400               	retlw	0
  2416  00D3' 3400               	retlw	0
  2417  00D4' 3400               	retlw	0
  2418  00D5' 3400               	retlw	0
  2419  00D6' 3400               	retlw	0
  2420  00D7' 3400               	retlw	0
  2421  00D8' 3400               	retlw	0
  2422  00D9' 3400               	retlw	0
  2423  00DA' 3400               	retlw	0
  2424  00DB' 3400               	retlw	0
  2425  00DC' 3400               	retlw	0
  2426  00DD' 3400               	retlw	0
  2427  00DE' 3400               	retlw	0
  2428  00DF' 3400               	retlw	0
  2429  00E0' 3400               	retlw	0
  2430  00E1' 3400               	retlw	0
  2431  00E2' 3400               	retlw	0
  2432  00E3' 3400               	retlw	0
  2433  00E4' 3400               	retlw	0
  2434  00E5' 3400               	retlw	0
  2435  00E6' 3400               	retlw	0
  2436  00E7' 3400               	retlw	0
  2437  00E8' 3400               	retlw	0
  2438  00E9' 3400               	retlw	0
  2439  00EA' 3400               	retlw	0
  2440  00EB' 3400               	retlw	0
  2441  00EC' 3400               	retlw	0
  2442  00ED' 3400               	retlw	0
  2443  00EE' 3400               	retlw	0
  2444  00EF' 3400               	retlw	0
  2445  00F0' 3400               	retlw	0
  2446  00F1' 3400               	retlw	0
  2447  00F2' 3400               	retlw	0
  2448  00F3' 3400               	retlw	0
  2449  00F4' 3400               	retlw	0
  2450  00F5' 3400               	retlw	0
  2451  00F6' 3400               	retlw	0
  2452  00F7' 3400               	retlw	0
  2453  00F8' 3400               	retlw	0
  2454  00F9' 3400               	retlw	0
  2455  00FA' 3400               	retlw	0
  2456  00FB' 3400               	retlw	0
  2457  00FC' 3400               	retlw	0
  2458  00FD' 3400               	retlw	0
  2459  00FE' 3400               	retlw	0
  2460  00FF' 3400               	retlw	0
  2461  0100' 3400               	retlw	0
  2462  0101' 3400               	retlw	0
  2463  0102' 3440               	retlw	64
  2464  0103' 3400               	retlw	0
  2465  0104' 3400               	retlw	0
  2466  0105' 3400               	retlw	0
  2467  0106' 3400               	retlw	0
  2468  0107' 3400               	retlw	0
  2469  0108' 3400               	retlw	0
  2470  0109' 3400               	retlw	0
  2471  010A' 3400               	retlw	0
  2472  010B' 3400               	retlw	0
  2473  010C' 3400               	retlw	0
  2474  010D' 3400               	retlw	0
  2475  010E' 3400               	retlw	0
  2476  010F' 3400               	retlw	0
  2477  0110' 3400               	retlw	0
  2478  0111' 3400               	retlw	0
  2479  0112' 3400               	retlw	0
  2480  0113' 3400               	retlw	0
  2481  0114' 3400               	retlw	0
  2482  0115' 3400               	retlw	0
  2483  0116' 3400               	retlw	0
  2484  0117' 3400               	retlw	0
  2485  0118' 3400               	retlw	0
  2486  0119' 3400               	retlw	0
  2487  011A' 3400               	retlw	0
  2488  011B' 3400               	retlw	0
  2489  011C' 3400               	retlw	0
  2490  011D' 3400               	retlw	0
  2491  011E' 3400               	retlw	0
  2492  011F' 3400               	retlw	0
  2493  0120' 3400               	retlw	0
  2494  0121' 3400               	retlw	0
  2495  0122' 3400               	retlw	0
  2496  0123' 3400               	retlw	0
  2497  0124' 3400               	retlw	0
  2498  0125' 3400               	retlw	0
  2499  0126' 3400               	retlw	0
  2500  0127' 3400               	retlw	0
  2501  0128' 3400               	retlw	0
  2502  0129' 3400               	retlw	0
  2503  012A' 3400               	retlw	0
  2504  012B' 3400               	retlw	0
  2505  012C' 3400               	retlw	0
  2506  012D' 3400               	retlw	0
  2507  012E' 3400               	retlw	0
  2508  012F' 3400               	retlw	0
  2509  0130' 3400               	retlw	0
  2510  0131' 3400               	retlw	0
  2511  0132' 3400               	retlw	0
  2512  0133' 3400               	retlw	0
  2513  0134' 3400               	retlw	0
  2514  0135' 3400               	retlw	0
  2515  0136' 3400               	retlw	0
  2516  0137' 3400               	retlw	0
  2517  0138' 3400               	retlw	0
  2518  0139' 3400               	retlw	0
  2519  013A' 3400               	retlw	0
  2520  013B' 3400               	retlw	0
  2521  013C' 3400               	retlw	0
  2522  013D' 3400               	retlw	0
  2523  013E' 3400               	retlw	0
  2524  013F' 3400               	retlw	0
  2525  0140' 3400               	retlw	0
  2526  0141' 3400               	retlw	0
  2527  0142' 3400               	retlw	0
  2528  0143' 3400               	retlw	0
  2529  0144' 3400               	retlw	0
  2530  0145' 3400               	retlw	0
  2531  0146' 3400               	retlw	0
  2532  0147' 3400               	retlw	0
  2533  0148' 3400               	retlw	0
  2534  0149' 3400               	retlw	0
  2535  014A' 3400               	retlw	0
  2536  014B' 3400               	retlw	0
  2537  014C' 3400               	retlw	0
  2538  014D' 3400               	retlw	0
  2539  014E' 3400               	retlw	0
  2540  014F' 3400               	retlw	0
  2541  0150' 3400               	retlw	0
  2542  0151' 3400               	retlw	0
  2543  0152' 3400               	retlw	0
  2544  0153' 3400               	retlw	0
  2545  0154' 3400               	retlw	0
  2546  0155' 3400               	retlw	0
  2547  0156' 3400               	retlw	0
  2548  0157' 3400               	retlw	0
  2549  0158' 3400               	retlw	0
  2550  0159' 3400               	retlw	0
  2551  015A' 3400               	retlw	0
  2552  015B' 3400               	retlw	0
  2553  015C' 3400               	retlw	0
  2554  015D' 3400               	retlw	0
  2555  015E' 3400               	retlw	0
  2556  015F' 3400               	retlw	0
  2557  0160' 3400               	retlw	0
  2558  0161' 3400               	retlw	0
  2559  0162' 3400               	retlw	0
  2560  0163' 3400               	retlw	0
  2561  0164' 3400               	retlw	0
  2562  0165' 3400               	retlw	0
  2563  0166' 3400               	retlw	0
  2564  0167' 3400               	retlw	0
  2565  0168' 3400               	retlw	0
  2566  0169' 3400               	retlw	0
  2567  016A' 3400               	retlw	0
  2568  016B' 3400               	retlw	0
  2569  016C' 3400               	retlw	0
  2570  016D' 3400               	retlw	0
  2571  016E' 3400               	retlw	0
  2572  016F' 3400               	retlw	0
  2573  0170' 3400               	retlw	0
  2574  0171' 3400               	retlw	0
  2575  0172' 3400               	retlw	0
  2576  0173' 3400               	retlw	0
  2577  0174' 3400               	retlw	0
  2578  0175' 3400               	retlw	0
  2579  0176' 3400               	retlw	0
  2580  0177' 3400               	retlw	0
  2581  0178' 3400               	retlw	0
  2582  0179' 3400               	retlw	0
  2583  017A' 3400               	retlw	0
  2584  017B' 3400               	retlw	0
  2585  017C' 3400               	retlw	0
  2586  017D' 3400               	retlw	0
  2587  017E' 3400               	retlw	0
  2588  017F' 3400               	retlw	0
  2589  0180' 3400               	retlw	0
  2590  0181' 3400               	retlw	0
  2591  0182' 3400               	retlw	0
  2592  0183' 3440               	retlw	64
  2593  0184' 3400               	retlw	0
  2594  0185' 3400               	retlw	0
  2595  0186' 3400               	retlw	0
  2596  0187' 3400               	retlw	0
  2597  0188' 3400               	retlw	0
  2598  0189' 3400               	retlw	0
  2599  018A' 3400               	retlw	0
  2600  018B' 3400               	retlw	0
  2601  018C' 3400               	retlw	0
  2602  018D' 3400               	retlw	0
  2603  018E' 3400               	retlw	0
  2604  018F' 3400               	retlw	0
  2605  0190' 3400               	retlw	0
  2606  0191' 3400               	retlw	0
  2607  0192' 3400               	retlw	0
  2608  0193' 3400               	retlw	0
  2609  0194' 3400               	retlw	0
  2610  0195' 3400               	retlw	0
  2611  0196' 3400               	retlw	0
  2612  0197' 3400               	retlw	0
  2613  0198' 3400               	retlw	0
  2614  0199' 3400               	retlw	0
  2615  019A' 3400               	retlw	0
  2616  019B' 3400               	retlw	0
  2617  019C' 3400               	retlw	0
  2618  019D' 3400               	retlw	0
  2619  019E' 3400               	retlw	0
  2620  019F' 3400               	retlw	0
  2621  01A0' 3400               	retlw	0
  2622  01A1' 3400               	retlw	0
  2623  01A2' 3400               	retlw	0
  2624  01A3' 3400               	retlw	0
  2625  01A4' 3400               	retlw	0
  2626  01A5' 3400               	retlw	0
  2627  01A6' 3400               	retlw	0
  2628  01A7' 3400               	retlw	0
  2629  01A8' 3400               	retlw	0
  2630  01A9' 3400               	retlw	0
  2631  01AA' 3400               	retlw	0
  2632  01AB' 3400               	retlw	0
  2633  01AC' 3400               	retlw	0
  2634  01AD' 3400               	retlw	0
  2635  01AE' 3400               	retlw	0
  2636  01AF' 3400               	retlw	0
  2637  01B0' 3400               	retlw	0
  2638  01B1' 3400               	retlw	0
  2639  01B2' 3400               	retlw	0
  2640  01B3' 3400               	retlw	0
  2641  01B4' 3400               	retlw	0
  2642  01B5' 3400               	retlw	0
  2643  01B6' 3400               	retlw	0
  2644  01B7' 3400               	retlw	0
  2645  01B8' 3400               	retlw	0
  2646  01B9' 3400               	retlw	0
  2647  01BA' 3400               	retlw	0
  2648  01BB' 3400               	retlw	0
  2649  01BC' 3400               	retlw	0
  2650  01BD' 3400               	retlw	0
  2651  01BE' 3400               	retlw	0
  2652  01BF' 3400               	retlw	0
  2653  01C0' 3400               	retlw	0
  2654  01C1' 3400               	retlw	0
  2655  01C2' 3400               	retlw	0
  2656  01C3' 3400               	retlw	0
  2657  01C4' 3400               	retlw	0
  2658  01C5' 3400               	retlw	0
  2659  01C6' 3400               	retlw	0
  2660  01C7' 3400               	retlw	0
  2661  01C8' 3400               	retlw	0
  2662  01C9' 3400               	retlw	0
  2663  01CA' 3400               	retlw	0
  2664  01CB' 3400               	retlw	0
  2665  01CC' 3400               	retlw	0
  2666  01CD' 3400               	retlw	0
  2667  01CE' 3400               	retlw	0
  2668  01CF' 3400               	retlw	0
  2669  01D0' 3400               	retlw	0
  2670  01D1' 3400               	retlw	0
  2671  01D2' 3400               	retlw	0
  2672  01D3' 3400               	retlw	0
  2673  01D4' 3400               	retlw	0
  2674  01D5' 3400               	retlw	0
  2675  01D6' 3400               	retlw	0
  2676  01D7' 3400               	retlw	0
  2677  01D8' 3400               	retlw	0
  2678  01D9' 3400               	retlw	0
  2679  01DA' 3400               	retlw	0
  2680  01DB' 3400               	retlw	0
  2681  01DC' 3400               	retlw	0
  2682  01DD' 3400               	retlw	0
  2683  01DE' 3400               	retlw	0
  2684  01DF' 3400               	retlw	0
  2685  01E0' 3400               	retlw	0
  2686  01E1' 3400               	retlw	0
  2687  01E2' 3400               	retlw	0
  2688  01E3' 3400               	retlw	0
  2689  01E4' 3400               	retlw	0
  2690  01E5' 3400               	retlw	0
  2691  01E6' 3400               	retlw	0
  2692  01E7' 3400               	retlw	0
  2693  01E8' 3400               	retlw	0
  2694  01E9' 3400               	retlw	0
  2695  01EA' 3400               	retlw	0
  2696  01EB' 3400               	retlw	0
  2697  01EC' 3400               	retlw	0
  2698  01ED' 3400               	retlw	0
  2699  01EE' 3400               	retlw	0
  2700  01EF' 3400               	retlw	0
  2701  01F0' 3400               	retlw	0
  2702  01F1' 3400               	retlw	0
  2703  01F2' 3400               	retlw	0
  2704  01F3' 3400               	retlw	0
  2705  01F4' 3400               	retlw	0
  2706  01F5' 3400               	retlw	0
  2707  01F6' 3400               	retlw	0
  2708  01F7' 3400               	retlw	0
  2709  01F8' 3400               	retlw	0
  2710  01F9' 3400               	retlw	0
  2711  01FA' 3400               	retlw	0
  2712  01FB' 3400               	retlw	0
  2713  01FC' 3400               	retlw	0
  2714  01FD' 3400               	retlw	0
  2715  01FE' 3400               	retlw	0
  2716  01FF' 3400               	retlw	0
  2717  0200' 3400               	retlw	0
  2718  0201' 3400               	retlw	0
  2719  0202' 3400               	retlw	0
  2720  0203' 3400               	retlw	0
  2721  0204' 3440               	retlw	64
  2722  0205' 3400               	retlw	0
  2723  0206' 3400               	retlw	0
  2724  0207' 3400               	retlw	0
  2725  0208' 3400               	retlw	0
  2726  0209' 3400               	retlw	0
  2727  020A' 3400               	retlw	0
  2728  020B' 3400               	retlw	0
  2729  020C' 3400               	retlw	0
  2730  020D' 3400               	retlw	0
  2731  020E' 3400               	retlw	0
  2732  020F' 3400               	retlw	0
  2733  0210' 3400               	retlw	0
  2734  0211' 3400               	retlw	0
  2735  0212' 3400               	retlw	0
  2736  0213' 3400               	retlw	0
  2737  0214' 3400               	retlw	0
  2738  0215' 3400               	retlw	0
  2739  0216' 3400               	retlw	0
  2740  0217' 3400               	retlw	0
  2741  0218' 3400               	retlw	0
  2742  0219' 3400               	retlw	0
  2743  021A' 3400               	retlw	0
  2744  021B' 3400               	retlw	0
  2745  021C' 3400               	retlw	0
  2746  021D' 3400               	retlw	0
  2747  021E' 3400               	retlw	0
  2748  021F' 3400               	retlw	0
  2749  0220' 3400               	retlw	0
  2750  0221' 3400               	retlw	0
  2751  0222' 3400               	retlw	0
  2752  0223' 3400               	retlw	0
  2753  0224' 3400               	retlw	0
  2754  0225' 3400               	retlw	0
  2755  0226' 3400               	retlw	0
  2756  0227' 3400               	retlw	0
  2757  0228' 3400               	retlw	0
  2758  0229' 3400               	retlw	0
  2759  022A' 3400               	retlw	0
  2760  022B' 3400               	retlw	0
  2761  022C' 3400               	retlw	0
  2762  022D' 3400               	retlw	0
  2763  022E' 3400               	retlw	0
  2764  022F' 3400               	retlw	0
  2765  0230' 3400               	retlw	0
  2766  0231' 3400               	retlw	0
  2767  0232' 3400               	retlw	0
  2768  0233' 3400               	retlw	0
  2769  0234' 3400               	retlw	0
  2770  0235' 3400               	retlw	0
  2771  0236' 3400               	retlw	0
  2772  0237' 3400               	retlw	0
  2773  0238' 3400               	retlw	0
  2774  0239' 3400               	retlw	0
  2775  023A' 3400               	retlw	0
  2776  023B' 3400               	retlw	0
  2777  023C' 3400               	retlw	0
  2778  023D' 3400               	retlw	0
  2779  023E' 3400               	retlw	0
  2780  023F' 3400               	retlw	0
  2781  0240' 3400               	retlw	0
  2782  0241' 3400               	retlw	0
  2783  0242' 3400               	retlw	0
  2784  0243' 3400               	retlw	0
  2785  0244' 3400               	retlw	0
  2786  0245' 3400               	retlw	0
  2787  0246' 3400               	retlw	0
  2788  0247' 3400               	retlw	0
  2789  0248' 3400               	retlw	0
  2790  0249' 3400               	retlw	0
  2791  024A' 3400               	retlw	0
  2792  024B' 3400               	retlw	0
  2793  024C' 3400               	retlw	0
  2794  024D' 3400               	retlw	0
  2795  024E' 3400               	retlw	0
  2796  024F' 3400               	retlw	0
  2797  0250' 3400               	retlw	0
  2798  0251' 3400               	retlw	0
  2799  0252' 3400               	retlw	0
  2800  0253' 3400               	retlw	0
  2801  0254' 3400               	retlw	0
  2802  0255' 3400               	retlw	0
  2803  0256' 3400               	retlw	0
  2804  0257' 3400               	retlw	0
  2805  0258' 3400               	retlw	0
  2806  0259' 3400               	retlw	0
  2807  025A' 3400               	retlw	0
  2808  025B' 3400               	retlw	0
  2809  025C' 3400               	retlw	0
  2810  025D' 3400               	retlw	0
  2811  025E' 3400               	retlw	0
  2812  025F' 3400               	retlw	0
  2813  0260' 3400               	retlw	0
  2814  0261' 3400               	retlw	0
  2815  0262' 3400               	retlw	0
  2816  0263' 3400               	retlw	0
  2817  0264' 3400               	retlw	0
  2818  0265' 3400               	retlw	0
  2819  0266' 3400               	retlw	0
  2820  0267' 3400               	retlw	0
  2821  0268' 3400               	retlw	0
  2822  0269' 3400               	retlw	0
  2823  026A' 3400               	retlw	0
  2824  026B' 3400               	retlw	0
  2825  026C' 3400               	retlw	0
  2826  026D' 3400               	retlw	0
  2827  026E' 3400               	retlw	0
  2828  026F' 3400               	retlw	0
  2829  0270' 3400               	retlw	0
  2830  0271' 3400               	retlw	0
  2831  0272' 3400               	retlw	0
  2832  0273' 3400               	retlw	0
  2833  0274' 3400               	retlw	0
  2834  0275' 3400               	retlw	0
  2835  0276' 3400               	retlw	0
  2836  0277' 3400               	retlw	0
  2837  0278' 3400               	retlw	0
  2838  0279' 3400               	retlw	0
  2839  027A' 3400               	retlw	0
  2840  027B' 3400               	retlw	0
  2841  027C' 3400               	retlw	0
  2842  027D' 3400               	retlw	0
  2843  027E' 3400               	retlw	0
  2844  027F' 3400               	retlw	0
  2845  0280' 3400               	retlw	0
  2846  0281' 3400               	retlw	0
  2847  0282' 3400               	retlw	0
  2848  0283' 3400               	retlw	0
  2849  0284' 3400               	retlw	0
  2850  0285' 3440               	retlw	64
  2851  0286' 3400               	retlw	0
  2852  0287' 3400               	retlw	0
  2853  0288' 3400               	retlw	0
  2854  0289' 3400               	retlw	0
  2855  028A' 3400               	retlw	0
  2856  028B' 3400               	retlw	0
  2857  028C' 3400               	retlw	0
  2858  028D' 3400               	retlw	0
  2859  028E' 3400               	retlw	0
  2860  028F' 3400               	retlw	0
  2861  0290' 3400               	retlw	0
  2862  0291' 3400               	retlw	0
  2863  0292' 3400               	retlw	0
  2864  0293' 3400               	retlw	0
  2865  0294' 3400               	retlw	0
  2866  0295' 3400               	retlw	0
  2867  0296' 3400               	retlw	0
  2868  0297' 3400               	retlw	0
  2869  0298' 3400               	retlw	0
  2870  0299' 3400               	retlw	0
  2871  029A' 3400               	retlw	0
  2872  029B' 3400               	retlw	0
  2873  029C' 3400               	retlw	0
  2874  029D' 3400               	retlw	0
  2875  029E' 3400               	retlw	0
  2876  029F' 3400               	retlw	0
  2877  02A0' 3400               	retlw	0
  2878  02A1' 3400               	retlw	0
  2879  02A2' 3400               	retlw	0
  2880  02A3' 3400               	retlw	0
  2881  02A4' 3400               	retlw	0
  2882  02A5' 3400               	retlw	0
  2883  02A6' 3400               	retlw	0
  2884  02A7' 3400               	retlw	0
  2885  02A8' 3400               	retlw	0
  2886  02A9' 3400               	retlw	0
  2887  02AA' 3400               	retlw	0
  2888  02AB' 3400               	retlw	0
  2889  02AC' 3400               	retlw	0
  2890  02AD' 3400               	retlw	0
  2891  02AE' 3400               	retlw	0
  2892  02AF' 3400               	retlw	0
  2893  02B0' 3400               	retlw	0
  2894  02B1' 3400               	retlw	0
  2895  02B2' 3400               	retlw	0
  2896  02B3' 3400               	retlw	0
  2897  02B4' 3400               	retlw	0
  2898  02B5' 3400               	retlw	0
  2899  02B6' 3400               	retlw	0
  2900  02B7' 3400               	retlw	0
  2901  02B8' 3400               	retlw	0
  2902  02B9' 3400               	retlw	0
  2903  02BA' 3400               	retlw	0
  2904  02BB' 3400               	retlw	0
  2905  02BC' 3400               	retlw	0
  2906  02BD' 3400               	retlw	0
  2907  02BE' 3400               	retlw	0
  2908  02BF' 3400               	retlw	0
  2909  02C0' 3400               	retlw	0
  2910  02C1' 3400               	retlw	0
  2911  02C2' 3400               	retlw	0
  2912  02C3' 3400               	retlw	0
  2913  02C4' 3400               	retlw	0
  2914  02C5' 3400               	retlw	0
  2915  02C6' 3400               	retlw	0
  2916  02C7' 3400               	retlw	0
  2917  02C8' 3400               	retlw	0
  2918  02C9' 3400               	retlw	0
  2919  02CA' 3400               	retlw	0
  2920  02CB' 3400               	retlw	0
  2921  02CC' 3400               	retlw	0
  2922  02CD' 3400               	retlw	0
  2923  02CE' 3400               	retlw	0
  2924  02CF' 3400               	retlw	0
  2925  02D0' 3400               	retlw	0
  2926  02D1' 3400               	retlw	0
  2927  02D2' 3400               	retlw	0
  2928  02D3' 3400               	retlw	0
  2929  02D4' 3400               	retlw	0
  2930  02D5' 3400               	retlw	0
  2931  02D6' 3400               	retlw	0
  2932  02D7' 3400               	retlw	0
  2933  02D8' 3400               	retlw	0
  2934  02D9' 3400               	retlw	0
  2935  02DA' 3400               	retlw	0
  2936  02DB' 3400               	retlw	0
  2937  02DC' 3400               	retlw	0
  2938  02DD' 3400               	retlw	0
  2939  02DE' 3400               	retlw	0
  2940  02DF' 3400               	retlw	0
  2941  02E0' 3400               	retlw	0
  2942  02E1' 3400               	retlw	0
  2943  02E2' 3400               	retlw	0
  2944  02E3' 3400               	retlw	0
  2945  02E4' 3400               	retlw	0
  2946  02E5' 3400               	retlw	0
  2947  02E6' 3400               	retlw	0
  2948  02E7' 3400               	retlw	0
  2949  02E8' 3400               	retlw	0
  2950  02E9' 3400               	retlw	0
  2951  02EA' 3400               	retlw	0
  2952  02EB' 3400               	retlw	0
  2953  02EC' 3400               	retlw	0
  2954  02ED' 3400               	retlw	0
  2955  02EE' 3400               	retlw	0
  2956  02EF' 3400               	retlw	0
  2957  02F0' 3400               	retlw	0
  2958  02F1' 3400               	retlw	0
  2959  02F2' 3400               	retlw	0
  2960  02F3' 3400               	retlw	0
  2961  02F4' 3400               	retlw	0
  2962  02F5' 3400               	retlw	0
  2963  02F6' 3400               	retlw	0
  2964  02F7' 3400               	retlw	0
  2965  02F8' 3400               	retlw	0
  2966  02F9' 3400               	retlw	0
  2967  02FA' 3400               	retlw	0
  2968  02FB' 3400               	retlw	0
  2969  02FC' 3400               	retlw	0
  2970  02FD' 3400               	retlw	0
  2971  02FE' 3400               	retlw	0
  2972  02FF' 3400               	retlw	0
  2973  0300' 3400               	retlw	0
  2974  0301' 3400               	retlw	0
  2975  0302' 3400               	retlw	0
  2976  0303' 3400               	retlw	0
  2977  0304' 3400               	retlw	0
  2978  0305' 3400               	retlw	0
  2979  0306' 3440               	retlw	64
  2980  0307' 3400               	retlw	0
  2981  0308' 3400               	retlw	0
  2982  0309' 3400               	retlw	0
  2983  030A' 3400               	retlw	0
  2984  030B' 3400               	retlw	0
  2985  030C' 3400               	retlw	0
  2986  030D' 3400               	retlw	0
  2987  030E' 3400               	retlw	0
  2988  030F' 3400               	retlw	0
  2989  0310' 3400               	retlw	0
  2990  0311' 3400               	retlw	0
  2991  0312' 3400               	retlw	0
  2992  0313' 3400               	retlw	0
  2993  0314' 3400               	retlw	0
  2994  0315' 3400               	retlw	0
  2995  0316' 3400               	retlw	0
  2996  0317' 3400               	retlw	0
  2997  0318' 3400               	retlw	0
  2998  0319' 3400               	retlw	0
  2999  031A' 3400               	retlw	0
  3000  031B' 3400               	retlw	0
  3001  031C' 3400               	retlw	0
  3002  031D' 3400               	retlw	0
  3003  031E' 3400               	retlw	0
  3004  031F' 3400               	retlw	0
  3005  0320' 3400               	retlw	0
  3006  0321' 3400               	retlw	0
  3007  0322' 3400               	retlw	0
  3008  0323' 3400               	retlw	0
  3009  0324' 3400               	retlw	0
  3010  0325' 3400               	retlw	0
  3011  0326' 3400               	retlw	0
  3012  0327' 3400               	retlw	0
  3013  0328' 3400               	retlw	0
  3014  0329' 3400               	retlw	0
  3015  032A' 3400               	retlw	0
  3016  032B' 3400               	retlw	0
  3017  032C' 3400               	retlw	0
  3018  032D' 3400               	retlw	0
  3019  032E' 3400               	retlw	0
  3020  032F' 3400               	retlw	0
  3021  0330' 3400               	retlw	0
  3022  0331' 3400               	retlw	0
  3023  0332' 3400               	retlw	0
  3024  0333' 3400               	retlw	0
  3025  0334' 3400               	retlw	0
  3026  0335' 3400               	retlw	0
  3027  0336' 3400               	retlw	0
  3028  0337' 3400               	retlw	0
  3029  0338' 3400               	retlw	0
  3030  0339' 3400               	retlw	0
  3031  033A' 3400               	retlw	0
  3032  033B' 3400               	retlw	0
  3033  033C' 3400               	retlw	0
  3034  033D' 3400               	retlw	0
  3035  033E' 3400               	retlw	0
  3036  033F' 3400               	retlw	0
  3037  0340' 3400               	retlw	0
  3038  0341' 3400               	retlw	0
  3039  0342' 3400               	retlw	0
  3040  0343' 3400               	retlw	0
  3041  0344' 3400               	retlw	0
  3042  0345' 3400               	retlw	0
  3043  0346' 3400               	retlw	0
  3044  0347' 3400               	retlw	0
  3045  0348' 3400               	retlw	0
  3046  0349' 3400               	retlw	0
  3047  034A' 3400               	retlw	0
  3048  034B' 3400               	retlw	0
  3049  034C' 3400               	retlw	0
  3050  034D' 3400               	retlw	0
  3051  034E' 3400               	retlw	0
  3052  034F' 3400               	retlw	0
  3053  0350' 3400               	retlw	0
  3054  0351' 3400               	retlw	0
  3055  0352' 3400               	retlw	0
  3056  0353' 3400               	retlw	0
  3057  0354' 3400               	retlw	0
  3058  0355' 3400               	retlw	0
  3059  0356' 3400               	retlw	0
  3060  0357' 3400               	retlw	0
  3061  0358' 3400               	retlw	0
  3062  0359' 3400               	retlw	0
  3063  035A' 3400               	retlw	0
  3064  035B' 3400               	retlw	0
  3065  035C' 3400               	retlw	0
  3066  035D' 3400               	retlw	0
  3067  035E' 3400               	retlw	0
  3068  035F' 3400               	retlw	0
  3069  0360' 3400               	retlw	0
  3070  0361' 3400               	retlw	0
  3071  0362' 3400               	retlw	0
  3072  0363' 3400               	retlw	0
  3073  0364' 3400               	retlw	0
  3074  0365' 3400               	retlw	0
  3075  0366' 3400               	retlw	0
  3076  0367' 3400               	retlw	0
  3077  0368' 3400               	retlw	0
  3078  0369' 3400               	retlw	0
  3079  036A' 3400               	retlw	0
  3080  036B' 3400               	retlw	0
  3081  036C' 3400               	retlw	0
  3082  036D' 3400               	retlw	0
  3083  036E' 3400               	retlw	0
  3084  036F' 3400               	retlw	0
  3085  0370' 3400               	retlw	0
  3086  0371' 3400               	retlw	0
  3087  0372' 3400               	retlw	0
  3088  0373' 3400               	retlw	0
  3089  0374' 3400               	retlw	0
  3090  0375' 3400               	retlw	0
  3091  0376' 3400               	retlw	0
  3092  0377' 3400               	retlw	0
  3093  0378' 3400               	retlw	0
  3094  0379' 3400               	retlw	0
  3095  037A' 3400               	retlw	0
  3096  037B' 3400               	retlw	0
  3097  037C' 3400               	retlw	0
  3098  037D' 3400               	retlw	0
  3099  037E' 3400               	retlw	0
  3100  037F' 3400               	retlw	0
  3101  0380' 3400               	retlw	0
  3102  0381' 3400               	retlw	0
  3103  0382' 3400               	retlw	0
  3104  0383' 3400               	retlw	0
  3105  0384' 3400               	retlw	0
  3106  0385' 3400               	retlw	0
  3107  0386' 3400               	retlw	0
  3108  0387' 3440               	retlw	64
  3109  0388' 3400               	retlw	0
  3110  0389' 3400               	retlw	0
  3111  038A' 3400               	retlw	0
  3112  038B' 3400               	retlw	0
  3113  038C' 3400               	retlw	0
  3114  038D' 3400               	retlw	0
  3115  038E' 3400               	retlw	0
  3116  038F' 3400               	retlw	0
  3117  0390' 3400               	retlw	0
  3118  0391' 3400               	retlw	0
  3119  0392' 3400               	retlw	0
  3120  0393' 3400               	retlw	0
  3121  0394' 3400               	retlw	0
  3122  0395' 3400               	retlw	0
  3123  0396' 3400               	retlw	0
  3124  0397' 3400               	retlw	0
  3125  0398' 3400               	retlw	0
  3126  0399' 3400               	retlw	0
  3127  039A' 3400               	retlw	0
  3128  039B' 3400               	retlw	0
  3129  039C' 3400               	retlw	0
  3130  039D' 3400               	retlw	0
  3131  039E' 3400               	retlw	0
  3132  039F' 3400               	retlw	0
  3133  03A0' 3400               	retlw	0
  3134  03A1' 3400               	retlw	0
  3135  03A2' 3400               	retlw	0
  3136  03A3' 3400               	retlw	0
  3137  03A4' 3400               	retlw	0
  3138  03A5' 3400               	retlw	0
  3139  03A6' 3400               	retlw	0
  3140  03A7' 3400               	retlw	0
  3141  03A8' 3400               	retlw	0
  3142  03A9' 3400               	retlw	0
  3143  03AA' 3400               	retlw	0
  3144  03AB' 3400               	retlw	0
  3145  03AC' 3400               	retlw	0
  3146  03AD' 3400               	retlw	0
  3147  03AE' 3400               	retlw	0
  3148  03AF' 3400               	retlw	0
  3149  03B0' 3400               	retlw	0
  3150  03B1' 3400               	retlw	0
  3151  03B2' 3400               	retlw	0
  3152  03B3' 3400               	retlw	0
  3153  03B4' 3400               	retlw	0
  3154  03B5' 3400               	retlw	0
  3155  03B6' 3400               	retlw	0
  3156  03B7' 3400               	retlw	0
  3157  03B8' 3400               	retlw	0
  3158  03B9' 3400               	retlw	0
  3159  03BA' 3400               	retlw	0
  3160  03BB' 3400               	retlw	0
  3161  03BC' 3400               	retlw	0
  3162  03BD' 3400               	retlw	0
  3163  03BE' 3400               	retlw	0
  3164  03BF' 3400               	retlw	0
  3165  03C0' 3400               	retlw	0
  3166  03C1' 3400               	retlw	0
  3167  03C2' 3400               	retlw	0
  3168  03C3' 3400               	retlw	0
  3169  03C4' 3400               	retlw	0
  3170  03C5' 3400               	retlw	0
  3171  03C6' 3400               	retlw	0
  3172  03C7' 3400               	retlw	0
  3173  03C8' 3400               	retlw	0
  3174  03C9' 3400               	retlw	0
  3175  03CA' 3400               	retlw	0
  3176  03CB' 3400               	retlw	0
  3177  03CC' 3400               	retlw	0
  3178  03CD' 3400               	retlw	0
  3179  03CE' 3400               	retlw	0
  3180  03CF' 3400               	retlw	0
  3181  03D0' 3400               	retlw	0
  3182  03D1' 3400               	retlw	0
  3183  03D2' 3400               	retlw	0
  3184  03D3' 3400               	retlw	0
  3185  03D4' 3400               	retlw	0
  3186  03D5' 3400               	retlw	0
  3187  03D6' 3400               	retlw	0
  3188  03D7' 3400               	retlw	0
  3189  03D8' 3400               	retlw	0
  3190  03D9' 3400               	retlw	0
  3191  03DA' 3400               	retlw	0
  3192  03DB' 3400               	retlw	0
  3193  03DC' 3400               	retlw	0
  3194  03DD' 3400               	retlw	0
  3195  03DE' 3400               	retlw	0
  3196  03DF' 3400               	retlw	0
  3197  03E0' 3400               	retlw	0
  3198  03E1' 3400               	retlw	0
  3199  03E2' 3400               	retlw	0
  3200  03E3' 3400               	retlw	0
  3201  03E4' 3400               	retlw	0
  3202  03E5' 3400               	retlw	0
  3203  03E6' 3400               	retlw	0
  3204  03E7' 3400               	retlw	0
  3205  03E8' 3400               	retlw	0
  3206  03E9' 3400               	retlw	0
  3207  03EA' 3400               	retlw	0
  3208  03EB' 3400               	retlw	0
  3209  03EC' 3400               	retlw	0
  3210  03ED' 3400               	retlw	0
  3211  03EE' 3400               	retlw	0
  3212  03EF' 3400               	retlw	0
  3213  03F0' 3400               	retlw	0
  3214  03F1' 3400               	retlw	0
  3215  03F2' 3400               	retlw	0
  3216  03F3' 3400               	retlw	0
  3217  03F4' 3400               	retlw	0
  3218  03F5' 3400               	retlw	0
  3219  03F6' 3400               	retlw	0
  3220  03F7' 3400               	retlw	0
  3221  03F8' 3400               	retlw	0
  3222  03F9' 3400               	retlw	0
  3223  03FA' 3400               	retlw	0
  3224  03FB' 3400               	retlw	0
  3225  03FC' 3400               	retlw	0
  3226  03FD' 3400               	retlw	0
  3227  03FE' 3400               	retlw	0
  3228  03FF' 3400               	retlw	0
  3229  0400' 3400               	retlw	0
  3230  0401' 3400               	retlw	0
  3231  0402' 3400               	retlw	0
  3232  0403' 3400               	retlw	0
  3233  0404' 3400               	retlw	0
  3234  0405' 3400               	retlw	0
  3235  0406' 3400               	retlw	0
  3236  0407' 3400               	retlw	0
  3237                           
  3238                           	psect	stringtext1
  3239  0000'                    __pstringtext1:	
  3240  0000'                    _font:	
  3241  0000' 3400               	retlw	0
  3242  0001' 3400               	retlw	0
  3243  0002' 3400               	retlw	0
  3244  0003' 3400               	retlw	0
  3245  0004' 3400               	retlw	0
  3246  0005' 343E               	retlw	62
  3247  0006' 345B               	retlw	91
  3248  0007' 344F               	retlw	79
  3249  0008' 345B               	retlw	91
  3250  0009' 343E               	retlw	62
  3251  000A' 343E               	retlw	62
  3252  000B' 346B               	retlw	107
  3253  000C' 344F               	retlw	79
  3254  000D' 346B               	retlw	107
  3255  000E' 343E               	retlw	62
  3256  000F' 341C               	retlw	28
  3257  0010' 343E               	retlw	62
  3258  0011' 347C               	retlw	124
  3259  0012' 343E               	retlw	62
  3260  0013' 341C               	retlw	28
  3261  0014' 3418               	retlw	24
  3262  0015' 343C               	retlw	60
  3263  0016' 347E               	retlw	126
  3264  0017' 343C               	retlw	60
  3265  0018' 3418               	retlw	24
  3266  0019' 341C               	retlw	28
  3267  001A' 3457               	retlw	87
  3268  001B' 347D               	retlw	125
  3269  001C' 3457               	retlw	87
  3270  001D' 341C               	retlw	28
  3271  001E' 341C               	retlw	28
  3272  001F' 345E               	retlw	94
  3273  0020' 347F               	retlw	127
  3274  0021' 345E               	retlw	94
  3275  0022' 341C               	retlw	28
  3276  0023' 3400               	retlw	0
  3277  0024' 3418               	retlw	24
  3278  0025' 343C               	retlw	60
  3279  0026' 3418               	retlw	24
  3280  0027' 3400               	retlw	0
  3281  0028' 34FF               	retlw	255
  3282  0029' 34E7               	retlw	231
  3283  002A' 34C3               	retlw	195
  3284  002B' 34E7               	retlw	231
  3285  002C' 34FF               	retlw	255
  3286  002D' 3400               	retlw	0
  3287  002E' 3418               	retlw	24
  3288  002F' 3424               	retlw	36
  3289  0030' 3418               	retlw	24
  3290  0031' 3400               	retlw	0
  3291  0032' 34FF               	retlw	255
  3292  0033' 34E7               	retlw	231
  3293  0034' 34DB               	retlw	219
  3294  0035' 34E7               	retlw	231
  3295  0036' 34FF               	retlw	255
  3296  0037' 3430               	retlw	48
  3297  0038' 3448               	retlw	72
  3298  0039' 343A               	retlw	58
  3299  003A' 3406               	retlw	6
  3300  003B' 340E               	retlw	14
  3301  003C' 3426               	retlw	38
  3302  003D' 3429               	retlw	41
  3303  003E' 3479               	retlw	121
  3304  003F' 3429               	retlw	41
  3305  0040' 3426               	retlw	38
  3306  0041' 3440               	retlw	64
  3307  0042' 347F               	retlw	127
  3308  0043' 3405               	retlw	5
  3309  0044' 3405               	retlw	5
  3310  0045' 3407               	retlw	7
  3311  0046' 3440               	retlw	64
  3312  0047' 347F               	retlw	127
  3313  0048' 3405               	retlw	5
  3314  0049' 3425               	retlw	37
  3315  004A' 343F               	retlw	63
  3316  004B' 345A               	retlw	90
  3317  004C' 343C               	retlw	60
  3318  004D' 34E7               	retlw	231
  3319  004E' 343C               	retlw	60
  3320  004F' 345A               	retlw	90
  3321  0050' 347F               	retlw	127
  3322  0051' 343E               	retlw	62
  3323  0052' 341C               	retlw	28
  3324  0053' 341C               	retlw	28
  3325  0054' 3408               	retlw	8
  3326  0055' 3408               	retlw	8
  3327  0056' 341C               	retlw	28
  3328  0057' 341C               	retlw	28
  3329  0058' 343E               	retlw	62
  3330  0059' 347F               	retlw	127
  3331  005A' 3414               	retlw	20
  3332  005B' 3422               	retlw	34
  3333  005C' 347F               	retlw	127
  3334  005D' 3422               	retlw	34
  3335  005E' 3414               	retlw	20
  3336  005F' 345F               	retlw	95
  3337  0060' 345F               	retlw	95
  3338  0061' 3400               	retlw	0
  3339  0062' 345F               	retlw	95
  3340  0063' 345F               	retlw	95
  3341  0064' 3406               	retlw	6
  3342  0065' 3409               	retlw	9
  3343  0066' 347F               	retlw	127
  3344  0067' 3401               	retlw	1
  3345  0068' 347F               	retlw	127
  3346  0069' 3400               	retlw	0
  3347  006A' 3466               	retlw	102
  3348  006B' 3489               	retlw	137
  3349  006C' 3495               	retlw	149
  3350  006D' 346A               	retlw	106
  3351  006E' 3460               	retlw	96
  3352  006F' 3460               	retlw	96
  3353  0070' 3460               	retlw	96
  3354  0071' 3460               	retlw	96
  3355  0072' 3460               	retlw	96
  3356  0073' 3494               	retlw	148
  3357  0074' 34A2               	retlw	162
  3358  0075' 34FF               	retlw	255
  3359  0076' 34A2               	retlw	162
  3360  0077' 3494               	retlw	148
  3361  0078' 3408               	retlw	8
  3362  0079' 3404               	retlw	4
  3363  007A' 347E               	retlw	126
  3364  007B' 3404               	retlw	4
  3365  007C' 3408               	retlw	8
  3366  007D' 3410               	retlw	16
  3367  007E' 3420               	retlw	32
  3368  007F' 347E               	retlw	126
  3369  0080' 3420               	retlw	32
  3370  0081' 3410               	retlw	16
  3371  0082' 3408               	retlw	8
  3372  0083' 3408               	retlw	8
  3373  0084' 342A               	retlw	42
  3374  0085' 341C               	retlw	28
  3375  0086' 3408               	retlw	8
  3376  0087' 3408               	retlw	8
  3377  0088' 341C               	retlw	28
  3378  0089' 342A               	retlw	42
  3379  008A' 3408               	retlw	8
  3380  008B' 3408               	retlw	8
  3381  008C' 341E               	retlw	30
  3382  008D' 3410               	retlw	16
  3383  008E' 3410               	retlw	16
  3384  008F' 3410               	retlw	16
  3385  0090' 3410               	retlw	16
  3386  0091' 340C               	retlw	12
  3387  0092' 341E               	retlw	30
  3388  0093' 340C               	retlw	12
  3389  0094' 341E               	retlw	30
  3390  0095' 340C               	retlw	12
  3391  0096' 3430               	retlw	48
  3392  0097' 3438               	retlw	56
  3393  0098' 343E               	retlw	62
  3394  0099' 3438               	retlw	56
  3395  009A' 3430               	retlw	48
  3396  009B' 3406               	retlw	6
  3397  009C' 340E               	retlw	14
  3398  009D' 343E               	retlw	62
  3399  009E' 340E               	retlw	14
  3400  009F' 3406               	retlw	6
  3401  00A0' 3400               	retlw	0
  3402  00A1' 3400               	retlw	0
  3403  00A2' 3400               	retlw	0
  3404  00A3' 3400               	retlw	0
  3405  00A4' 3400               	retlw	0
  3406  00A5' 3400               	retlw	0
  3407  00A6' 3400               	retlw	0
  3408  00A7' 345F               	retlw	95
  3409  00A8' 3400               	retlw	0
  3410  00A9' 3400               	retlw	0
  3411  00AA' 3400               	retlw	0
  3412  00AB' 3407               	retlw	7
  3413  00AC' 3400               	retlw	0
  3414  00AD' 3407               	retlw	7
  3415  00AE' 3400               	retlw	0
  3416  00AF' 3414               	retlw	20
  3417  00B0' 347F               	retlw	127
  3418  00B1' 3414               	retlw	20
  3419  00B2' 347F               	retlw	127
  3420  00B3' 3414               	retlw	20
  3421  00B4' 3424               	retlw	36
  3422  00B5' 342A               	retlw	42
  3423  00B6' 347F               	retlw	127
  3424  00B7' 342A               	retlw	42
  3425  00B8' 3412               	retlw	18
  3426  00B9' 3423               	retlw	35
  3427  00BA' 3413               	retlw	19
  3428  00BB' 3408               	retlw	8
  3429  00BC' 3464               	retlw	100
  3430  00BD' 3462               	retlw	98
  3431  00BE' 3436               	retlw	54
  3432  00BF' 3449               	retlw	73
  3433  00C0' 3456               	retlw	86
  3434  00C1' 3420               	retlw	32
  3435  00C2' 3450               	retlw	80
  3436  00C3' 3400               	retlw	0
  3437  00C4' 3408               	retlw	8
  3438  00C5' 3407               	retlw	7
  3439  00C6' 3403               	retlw	3
  3440  00C7' 3400               	retlw	0
  3441  00C8' 3400               	retlw	0
  3442  00C9' 341C               	retlw	28
  3443  00CA' 3422               	retlw	34
  3444  00CB' 3441               	retlw	65
  3445  00CC' 3400               	retlw	0
  3446  00CD' 3400               	retlw	0
  3447  00CE' 3441               	retlw	65
  3448  00CF' 3422               	retlw	34
  3449  00D0' 341C               	retlw	28
  3450  00D1' 3400               	retlw	0
  3451  00D2' 342A               	retlw	42
  3452  00D3' 341C               	retlw	28
  3453  00D4' 347F               	retlw	127
  3454  00D5' 341C               	retlw	28
  3455  00D6' 342A               	retlw	42
  3456  00D7' 3408               	retlw	8
  3457  00D8' 3408               	retlw	8
  3458  00D9' 343E               	retlw	62
  3459  00DA' 3408               	retlw	8
  3460  00DB' 3408               	retlw	8
  3461  00DC' 3400               	retlw	0
  3462  00DD' 3480               	retlw	128
  3463  00DE' 3470               	retlw	112
  3464  00DF' 3430               	retlw	48
  3465  00E0' 3400               	retlw	0
  3466  00E1' 3408               	retlw	8
  3467  00E2' 3408               	retlw	8
  3468  00E3' 3408               	retlw	8
  3469  00E4' 3408               	retlw	8
  3470  00E5' 3408               	retlw	8
  3471  00E6' 3400               	retlw	0
  3472  00E7' 3400               	retlw	0
  3473  00E8' 3460               	retlw	96
  3474  00E9' 3460               	retlw	96
  3475  00EA' 3400               	retlw	0
  3476  00EB' 3420               	retlw	32
  3477  00EC' 3410               	retlw	16
  3478  00ED' 3408               	retlw	8
  3479  00EE' 3404               	retlw	4
  3480  00EF' 3402               	retlw	2
  3481  00F0' 343E               	retlw	62
  3482  00F1' 3451               	retlw	81
  3483  00F2' 3449               	retlw	73
  3484  00F3' 3445               	retlw	69
  3485  00F4' 343E               	retlw	62
  3486  00F5' 3400               	retlw	0
  3487  00F6' 3442               	retlw	66
  3488  00F7' 347F               	retlw	127
  3489  00F8' 3440               	retlw	64
  3490  00F9' 3400               	retlw	0
  3491  00FA' 3472               	retlw	114
  3492  00FB' 3449               	retlw	73
  3493  00FC' 3449               	retlw	73
  3494  00FD' 3449               	retlw	73
  3495  00FE' 3446               	retlw	70
  3496  00FF' 3421               	retlw	33
  3497  0100' 3441               	retlw	65
  3498  0101' 3449               	retlw	73
  3499  0102' 344D               	retlw	77
  3500  0103' 3433               	retlw	51
  3501  0104' 3418               	retlw	24
  3502  0105' 3414               	retlw	20
  3503  0106' 3412               	retlw	18
  3504  0107' 347F               	retlw	127
  3505  0108' 3410               	retlw	16
  3506  0109' 3427               	retlw	39
  3507  010A' 3445               	retlw	69
  3508  010B' 3445               	retlw	69
  3509  010C' 3445               	retlw	69
  3510  010D' 3439               	retlw	57
  3511  010E' 343C               	retlw	60
  3512  010F' 344A               	retlw	74
  3513  0110' 3449               	retlw	73
  3514  0111' 3449               	retlw	73
  3515  0112' 3431               	retlw	49
  3516  0113' 3441               	retlw	65
  3517  0114' 3421               	retlw	33
  3518  0115' 3411               	retlw	17
  3519  0116' 3409               	retlw	9
  3520  0117' 3407               	retlw	7
  3521  0118' 3436               	retlw	54
  3522  0119' 3449               	retlw	73
  3523  011A' 3449               	retlw	73
  3524  011B' 3449               	retlw	73
  3525  011C' 3436               	retlw	54
  3526  011D' 3446               	retlw	70
  3527  011E' 3449               	retlw	73
  3528  011F' 3449               	retlw	73
  3529  0120' 3429               	retlw	41
  3530  0121' 341E               	retlw	30
  3531  0122' 3400               	retlw	0
  3532  0123' 3400               	retlw	0
  3533  0124' 3414               	retlw	20
  3534  0125' 3400               	retlw	0
  3535  0126' 3400               	retlw	0
  3536  0127' 3400               	retlw	0
  3537  0128' 3440               	retlw	64
  3538  0129' 3434               	retlw	52
  3539  012A' 3400               	retlw	0
  3540  012B' 3400               	retlw	0
  3541  012C' 3400               	retlw	0
  3542  012D' 3408               	retlw	8
  3543  012E' 3414               	retlw	20
  3544  012F' 3422               	retlw	34
  3545  0130' 3441               	retlw	65
  3546  0131' 3414               	retlw	20
  3547  0132' 3414               	retlw	20
  3548  0133' 3414               	retlw	20
  3549  0134' 3414               	retlw	20
  3550  0135' 3414               	retlw	20
  3551  0136' 3400               	retlw	0
  3552  0137' 3441               	retlw	65
  3553  0138' 3422               	retlw	34
  3554  0139' 3414               	retlw	20
  3555  013A' 3408               	retlw	8
  3556  013B' 3402               	retlw	2
  3557  013C' 3401               	retlw	1
  3558  013D' 3459               	retlw	89
  3559  013E' 3409               	retlw	9
  3560  013F' 3406               	retlw	6
  3561  0140' 343E               	retlw	62
  3562  0141' 3441               	retlw	65
  3563  0142' 345D               	retlw	93
  3564  0143' 3459               	retlw	89
  3565  0144' 344E               	retlw	78
  3566  0145' 347C               	retlw	124
  3567  0146' 3412               	retlw	18
  3568  0147' 3411               	retlw	17
  3569  0148' 3412               	retlw	18
  3570  0149' 347C               	retlw	124
  3571  014A' 347F               	retlw	127
  3572  014B' 3449               	retlw	73
  3573  014C' 3449               	retlw	73
  3574  014D' 3449               	retlw	73
  3575  014E' 3436               	retlw	54
  3576  014F' 343E               	retlw	62
  3577  0150' 3441               	retlw	65
  3578  0151' 3441               	retlw	65
  3579  0152' 3441               	retlw	65
  3580  0153' 3422               	retlw	34
  3581  0154' 347F               	retlw	127
  3582  0155' 3441               	retlw	65
  3583  0156' 3441               	retlw	65
  3584  0157' 3441               	retlw	65
  3585  0158' 343E               	retlw	62
  3586  0159' 347F               	retlw	127
  3587  015A' 3449               	retlw	73
  3588  015B' 3449               	retlw	73
  3589  015C' 3449               	retlw	73
  3590  015D' 3441               	retlw	65
  3591  015E' 347F               	retlw	127
  3592  015F' 3409               	retlw	9
  3593  0160' 3409               	retlw	9
  3594  0161' 3409               	retlw	9
  3595  0162' 3401               	retlw	1
  3596  0163' 343E               	retlw	62
  3597  0164' 3441               	retlw	65
  3598  0165' 3441               	retlw	65
  3599  0166' 3451               	retlw	81
  3600  0167' 3473               	retlw	115
  3601  0168' 347F               	retlw	127
  3602  0169' 3408               	retlw	8
  3603  016A' 3408               	retlw	8
  3604  016B' 3408               	retlw	8
  3605  016C' 347F               	retlw	127
  3606  016D' 3400               	retlw	0
  3607  016E' 3441               	retlw	65
  3608  016F' 347F               	retlw	127
  3609  0170' 3441               	retlw	65
  3610  0171' 3400               	retlw	0
  3611  0172' 3420               	retlw	32
  3612  0173' 3440               	retlw	64
  3613  0174' 3441               	retlw	65
  3614  0175' 343F               	retlw	63
  3615  0176' 3401               	retlw	1
  3616  0177' 347F               	retlw	127
  3617  0178' 3408               	retlw	8
  3618  0179' 3414               	retlw	20
  3619  017A' 3422               	retlw	34
  3620  017B' 3441               	retlw	65
  3621  017C' 347F               	retlw	127
  3622  017D' 3440               	retlw	64
  3623  017E' 3440               	retlw	64
  3624  017F' 3440               	retlw	64
  3625  0180' 3440               	retlw	64
  3626  0181' 347F               	retlw	127
  3627  0182' 3402               	retlw	2
  3628  0183' 341C               	retlw	28
  3629  0184' 3402               	retlw	2
  3630  0185' 347F               	retlw	127
  3631  0186' 347F               	retlw	127
  3632  0187' 3404               	retlw	4
  3633  0188' 3408               	retlw	8
  3634  0189' 3410               	retlw	16
  3635  018A' 347F               	retlw	127
  3636  018B' 343E               	retlw	62
  3637  018C' 3441               	retlw	65
  3638  018D' 3441               	retlw	65
  3639  018E' 3441               	retlw	65
  3640  018F' 343E               	retlw	62
  3641  0190' 347F               	retlw	127
  3642  0191' 3409               	retlw	9
  3643  0192' 3409               	retlw	9
  3644  0193' 3409               	retlw	9
  3645  0194' 3406               	retlw	6
  3646  0195' 343E               	retlw	62
  3647  0196' 3441               	retlw	65
  3648  0197' 3451               	retlw	81
  3649  0198' 3421               	retlw	33
  3650  0199' 345E               	retlw	94
  3651  019A' 347F               	retlw	127
  3652  019B' 3409               	retlw	9
  3653  019C' 3419               	retlw	25
  3654  019D' 3429               	retlw	41
  3655  019E' 3446               	retlw	70
  3656  019F' 3426               	retlw	38
  3657  01A0' 3449               	retlw	73
  3658  01A1' 3449               	retlw	73
  3659  01A2' 3449               	retlw	73
  3660  01A3' 3432               	retlw	50
  3661  01A4' 3403               	retlw	3
  3662  01A5' 3401               	retlw	1
  3663  01A6' 347F               	retlw	127
  3664  01A7' 3401               	retlw	1
  3665  01A8' 3403               	retlw	3
  3666  01A9' 343F               	retlw	63
  3667  01AA' 3440               	retlw	64
  3668  01AB' 3440               	retlw	64
  3669  01AC' 3440               	retlw	64
  3670  01AD' 343F               	retlw	63
  3671  01AE' 341F               	retlw	31
  3672  01AF' 3420               	retlw	32
  3673  01B0' 3440               	retlw	64
  3674  01B1' 3420               	retlw	32
  3675  01B2' 341F               	retlw	31
  3676  01B3' 343F               	retlw	63
  3677  01B4' 3440               	retlw	64
  3678  01B5' 3438               	retlw	56
  3679  01B6' 3440               	retlw	64
  3680  01B7' 343F               	retlw	63
  3681  01B8' 3463               	retlw	99
  3682  01B9' 3414               	retlw	20
  3683  01BA' 3408               	retlw	8
  3684  01BB' 3414               	retlw	20
  3685  01BC' 3463               	retlw	99
  3686  01BD' 3403               	retlw	3
  3687  01BE' 3404               	retlw	4
  3688  01BF' 3478               	retlw	120
  3689  01C0' 3404               	retlw	4
  3690  01C1' 3403               	retlw	3
  3691  01C2' 3461               	retlw	97
  3692  01C3' 3459               	retlw	89
  3693  01C4' 3449               	retlw	73
  3694  01C5' 344D               	retlw	77
  3695  01C6' 3443               	retlw	67
  3696  01C7' 3400               	retlw	0
  3697  01C8' 347F               	retlw	127
  3698  01C9' 3441               	retlw	65
  3699  01CA' 3441               	retlw	65
  3700  01CB' 3441               	retlw	65
  3701  01CC' 3402               	retlw	2
  3702  01CD' 3404               	retlw	4
  3703  01CE' 3408               	retlw	8
  3704  01CF' 3410               	retlw	16
  3705  01D0' 3420               	retlw	32
  3706  01D1' 3400               	retlw	0
  3707  01D2' 3441               	retlw	65
  3708  01D3' 3441               	retlw	65
  3709  01D4' 3441               	retlw	65
  3710  01D5' 347F               	retlw	127
  3711  01D6' 3404               	retlw	4
  3712  01D7' 3402               	retlw	2
  3713  01D8' 3401               	retlw	1
  3714  01D9' 3402               	retlw	2
  3715  01DA' 3404               	retlw	4
  3716  01DB' 3440               	retlw	64
  3717  01DC' 3440               	retlw	64
  3718  01DD' 3440               	retlw	64
  3719  01DE' 3440               	retlw	64
  3720  01DF' 3440               	retlw	64
  3721  01E0' 3400               	retlw	0
  3722  01E1' 3403               	retlw	3
  3723  01E2' 3407               	retlw	7
  3724  01E3' 3408               	retlw	8
  3725  01E4' 3400               	retlw	0
  3726  01E5' 3420               	retlw	32
  3727  01E6' 3454               	retlw	84
  3728  01E7' 3454               	retlw	84
  3729  01E8' 3478               	retlw	120
  3730  01E9' 3440               	retlw	64
  3731  01EA' 347F               	retlw	127
  3732  01EB' 3428               	retlw	40
  3733  01EC' 3444               	retlw	68
  3734  01ED' 3444               	retlw	68
  3735  01EE' 3438               	retlw	56
  3736  01EF' 3438               	retlw	56
  3737  01F0' 3444               	retlw	68
  3738  01F1' 3444               	retlw	68
  3739  01F2' 3444               	retlw	68
  3740  01F3' 3428               	retlw	40
  3741  01F4' 3438               	retlw	56
  3742  01F5' 3444               	retlw	68
  3743  01F6' 3444               	retlw	68
  3744  01F7' 3428               	retlw	40
  3745  01F8' 347F               	retlw	127
  3746  01F9' 3438               	retlw	56
  3747  01FA' 3454               	retlw	84
  3748  01FB' 3454               	retlw	84
  3749  01FC' 3454               	retlw	84
  3750  01FD' 3418               	retlw	24
  3751  01FE' 3400               	retlw	0
  3752  01FF' 3408               	retlw	8
  3753  0200' 347E               	retlw	126
  3754  0201' 3409               	retlw	9
  3755  0202' 3402               	retlw	2
  3756  0203' 3418               	retlw	24
  3757  0204' 34A4               	retlw	164
  3758  0205' 34A4               	retlw	164
  3759  0206' 349C               	retlw	156
  3760  0207' 3478               	retlw	120
  3761  0208' 347F               	retlw	127
  3762  0209' 3408               	retlw	8
  3763  020A' 3404               	retlw	4
  3764  020B' 3404               	retlw	4
  3765  020C' 3478               	retlw	120
  3766  020D' 3400               	retlw	0
  3767  020E' 3444               	retlw	68
  3768  020F' 347D               	retlw	125
  3769  0210' 3440               	retlw	64
  3770  0211' 3400               	retlw	0
  3771  0212' 3420               	retlw	32
  3772  0213' 3440               	retlw	64
  3773  0214' 3440               	retlw	64
  3774  0215' 343D               	retlw	61
  3775  0216' 3400               	retlw	0
  3776  0217' 347F               	retlw	127
  3777  0218' 3410               	retlw	16
  3778  0219' 3428               	retlw	40
  3779  021A' 3444               	retlw	68
  3780  021B' 3400               	retlw	0
  3781  021C' 3400               	retlw	0
  3782  021D' 3441               	retlw	65
  3783  021E' 347F               	retlw	127
  3784  021F' 3440               	retlw	64
  3785  0220' 3400               	retlw	0
  3786  0221' 347C               	retlw	124
  3787  0222' 3404               	retlw	4
  3788  0223' 3478               	retlw	120
  3789  0224' 3404               	retlw	4
  3790  0225' 3478               	retlw	120
  3791  0226' 347C               	retlw	124
  3792  0227' 3408               	retlw	8
  3793  0228' 3404               	retlw	4
  3794  0229' 3404               	retlw	4
  3795  022A' 3478               	retlw	120
  3796  022B' 3438               	retlw	56
  3797  022C' 3444               	retlw	68
  3798  022D' 3444               	retlw	68
  3799  022E' 3444               	retlw	68
  3800  022F' 3438               	retlw	56
  3801  0230' 34FC               	retlw	252
  3802  0231' 3418               	retlw	24
  3803  0232' 3424               	retlw	36
  3804  0233' 3424               	retlw	36
  3805  0234' 3418               	retlw	24
  3806  0235' 3418               	retlw	24
  3807  0236' 3424               	retlw	36
  3808  0237' 3424               	retlw	36
  3809  0238' 3418               	retlw	24
  3810  0239' 34FC               	retlw	252
  3811  023A' 347C               	retlw	124
  3812  023B' 3408               	retlw	8
  3813  023C' 3404               	retlw	4
  3814  023D' 3404               	retlw	4
  3815  023E' 3408               	retlw	8
  3816  023F' 3448               	retlw	72
  3817  0240' 3454               	retlw	84
  3818  0241' 3454               	retlw	84
  3819  0242' 3454               	retlw	84
  3820  0243' 3424               	retlw	36
  3821  0244' 3404               	retlw	4
  3822  0245' 3404               	retlw	4
  3823  0246' 343F               	retlw	63
  3824  0247' 3444               	retlw	68
  3825  0248' 3424               	retlw	36
  3826  0249' 343C               	retlw	60
  3827  024A' 3440               	retlw	64
  3828  024B' 3440               	retlw	64
  3829  024C' 3420               	retlw	32
  3830  024D' 347C               	retlw	124
  3831  024E' 341C               	retlw	28
  3832  024F' 3420               	retlw	32
  3833  0250' 3440               	retlw	64
  3834  0251' 3420               	retlw	32
  3835  0252' 341C               	retlw	28
  3836  0253' 343C               	retlw	60
  3837  0254' 3440               	retlw	64
  3838  0255' 3430               	retlw	48
  3839  0256' 3440               	retlw	64
  3840  0257' 343C               	retlw	60
  3841  0258' 3444               	retlw	68
  3842  0259' 3428               	retlw	40
  3843  025A' 3410               	retlw	16
  3844  025B' 3428               	retlw	40
  3845  025C' 3444               	retlw	68
  3846  025D' 344C               	retlw	76
  3847  025E' 3490               	retlw	144
  3848  025F' 3490               	retlw	144
  3849  0260' 3490               	retlw	144
  3850  0261' 347C               	retlw	124
  3851  0262' 3444               	retlw	68
  3852  0263' 3464               	retlw	100
  3853  0264' 3454               	retlw	84
  3854  0265' 344C               	retlw	76
  3855  0266' 3444               	retlw	68
  3856  0267' 3400               	retlw	0
  3857  0268' 3408               	retlw	8
  3858  0269' 3436               	retlw	54
  3859  026A' 3441               	retlw	65
  3860  026B' 3400               	retlw	0
  3861  026C' 3400               	retlw	0
  3862  026D' 3400               	retlw	0
  3863  026E' 3477               	retlw	119
  3864  026F' 3400               	retlw	0
  3865  0270' 3400               	retlw	0
  3866  0271' 3400               	retlw	0
  3867  0272' 3441               	retlw	65
  3868  0273' 3436               	retlw	54
  3869  0274' 3408               	retlw	8
  3870  0275' 3400               	retlw	0
  3871  0276' 3402               	retlw	2
  3872  0277' 3401               	retlw	1
  3873  0278' 3402               	retlw	2
  3874  0279' 3404               	retlw	4
  3875  027A' 3402               	retlw	2
  3876  027B' 343C               	retlw	60
  3877  027C' 3426               	retlw	38
  3878  027D' 3423               	retlw	35
  3879  027E' 3426               	retlw	38
  3880  027F' 343C               	retlw	60
  3881  0280' 341E               	retlw	30
  3882  0281' 34A1               	retlw	161
  3883  0282' 34A1               	retlw	161
  3884  0283' 3461               	retlw	97
  3885  0284' 3412               	retlw	18
  3886  0285' 343A               	retlw	58
  3887  0286' 3440               	retlw	64
  3888  0287' 3440               	retlw	64
  3889  0288' 3420               	retlw	32
  3890  0289' 347A               	retlw	122
  3891  028A' 3438               	retlw	56
  3892  028B' 3454               	retlw	84
  3893  028C' 3454               	retlw	84
  3894  028D' 3455               	retlw	85
  3895  028E' 3459               	retlw	89
  3896  028F' 3421               	retlw	33
  3897  0290' 3455               	retlw	85
  3898  0291' 3455               	retlw	85
  3899  0292' 3479               	retlw	121
  3900  0293' 3441               	retlw	65
  3901  0294' 3422               	retlw	34
  3902  0295' 3454               	retlw	84
  3903  0296' 3454               	retlw	84
  3904  0297' 3478               	retlw	120
  3905  0298' 3442               	retlw	66
  3906  0299' 3421               	retlw	33
  3907  029A' 3455               	retlw	85
  3908  029B' 3454               	retlw	84
  3909  029C' 3478               	retlw	120
  3910  029D' 3440               	retlw	64
  3911  029E' 3420               	retlw	32
  3912  029F' 3454               	retlw	84
  3913  02A0' 3455               	retlw	85
  3914  02A1' 3479               	retlw	121
  3915  02A2' 3440               	retlw	64
  3916  02A3' 340C               	retlw	12
  3917  02A4' 341E               	retlw	30
  3918  02A5' 3452               	retlw	82
  3919  02A6' 3472               	retlw	114
  3920  02A7' 3412               	retlw	18
  3921  02A8' 3439               	retlw	57
  3922  02A9' 3455               	retlw	85
  3923  02AA' 3455               	retlw	85
  3924  02AB' 3455               	retlw	85
  3925  02AC' 3459               	retlw	89
  3926  02AD' 3439               	retlw	57
  3927  02AE' 3454               	retlw	84
  3928  02AF' 3454               	retlw	84
  3929  02B0' 3454               	retlw	84
  3930  02B1' 3459               	retlw	89
  3931  02B2' 3439               	retlw	57
  3932  02B3' 3455               	retlw	85
  3933  02B4' 3454               	retlw	84
  3934  02B5' 3454               	retlw	84
  3935  02B6' 3458               	retlw	88
  3936  02B7' 3400               	retlw	0
  3937  02B8' 3400               	retlw	0
  3938  02B9' 3445               	retlw	69
  3939  02BA' 347C               	retlw	124
  3940  02BB' 3441               	retlw	65
  3941  02BC' 3400               	retlw	0
  3942  02BD' 3402               	retlw	2
  3943  02BE' 3445               	retlw	69
  3944  02BF' 347D               	retlw	125
  3945  02C0' 3442               	retlw	66
  3946  02C1' 3400               	retlw	0
  3947  02C2' 3401               	retlw	1
  3948  02C3' 3445               	retlw	69
  3949  02C4' 347C               	retlw	124
  3950  02C5' 3440               	retlw	64
  3951  02C6' 347D               	retlw	125
  3952  02C7' 3412               	retlw	18
  3953  02C8' 3411               	retlw	17
  3954  02C9' 3412               	retlw	18
  3955  02CA' 347D               	retlw	125
  3956  02CB' 34F0               	retlw	240
  3957  02CC' 3428               	retlw	40
  3958  02CD' 3425               	retlw	37
  3959  02CE' 3428               	retlw	40
  3960  02CF' 34F0               	retlw	240
  3961  02D0' 347C               	retlw	124
  3962  02D1' 3454               	retlw	84
  3963  02D2' 3455               	retlw	85
  3964  02D3' 3445               	retlw	69
  3965  02D4' 3400               	retlw	0
  3966  02D5' 3420               	retlw	32
  3967  02D6' 3454               	retlw	84
  3968  02D7' 3454               	retlw	84
  3969  02D8' 347C               	retlw	124
  3970  02D9' 3454               	retlw	84
  3971  02DA' 347C               	retlw	124
  3972  02DB' 340A               	retlw	10
  3973  02DC' 3409               	retlw	9
  3974  02DD' 347F               	retlw	127
  3975  02DE' 3449               	retlw	73
  3976  02DF' 3432               	retlw	50
  3977  02E0' 3449               	retlw	73
  3978  02E1' 3449               	retlw	73
  3979  02E2' 3449               	retlw	73
  3980  02E3' 3432               	retlw	50
  3981  02E4' 343A               	retlw	58
  3982  02E5' 3444               	retlw	68
  3983  02E6' 3444               	retlw	68
  3984  02E7' 3444               	retlw	68
  3985  02E8' 343A               	retlw	58
  3986  02E9' 3432               	retlw	50
  3987  02EA' 344A               	retlw	74
  3988  02EB' 3448               	retlw	72
  3989  02EC' 3448               	retlw	72
  3990  02ED' 3430               	retlw	48
  3991  02EE' 343A               	retlw	58
  3992  02EF' 3441               	retlw	65
  3993  02F0' 3441               	retlw	65
  3994  02F1' 3421               	retlw	33
  3995  02F2' 347A               	retlw	122
  3996  02F3' 343A               	retlw	58
  3997  02F4' 3442               	retlw	66
  3998  02F5' 3440               	retlw	64
  3999  02F6' 3420               	retlw	32
  4000  02F7' 3478               	retlw	120
  4001  02F8' 3400               	retlw	0
  4002  02F9' 349D               	retlw	157
  4003  02FA' 34A0               	retlw	160
  4004  02FB' 34A0               	retlw	160
  4005  02FC' 347D               	retlw	125
  4006  02FD' 343D               	retlw	61
  4007  02FE' 3442               	retlw	66
  4008  02FF' 3442               	retlw	66
  4009  0300' 3442               	retlw	66
  4010  0301' 343D               	retlw	61
  4011  0302' 343D               	retlw	61
  4012  0303' 3440               	retlw	64
  4013  0304' 3440               	retlw	64
  4014  0305' 3440               	retlw	64
  4015  0306' 343D               	retlw	61
  4016  0307' 343C               	retlw	60
  4017  0308' 3424               	retlw	36
  4018  0309' 34FF               	retlw	255
  4019  030A' 3424               	retlw	36
  4020  030B' 3424               	retlw	36
  4021  030C' 3448               	retlw	72
  4022  030D' 347E               	retlw	126
  4023  030E' 3449               	retlw	73
  4024  030F' 3443               	retlw	67
  4025  0310' 3466               	retlw	102
  4026  0311' 342B               	retlw	43
  4027  0312' 342F               	retlw	47
  4028  0313' 34FC               	retlw	252
  4029  0314' 342F               	retlw	47
  4030  0315' 342B               	retlw	43
  4031  0316' 34FF               	retlw	255
  4032  0317' 3409               	retlw	9
  4033  0318' 3429               	retlw	41
  4034  0319' 34F6               	retlw	246
  4035  031A' 3420               	retlw	32
  4036  031B' 34C0               	retlw	192
  4037  031C' 3488               	retlw	136
  4038  031D' 347E               	retlw	126
  4039  031E' 3409               	retlw	9
  4040  031F' 3403               	retlw	3
  4041  0320' 3420               	retlw	32
  4042  0321' 3454               	retlw	84
  4043  0322' 3454               	retlw	84
  4044  0323' 3479               	retlw	121
  4045  0324' 3441               	retlw	65
  4046  0325' 3400               	retlw	0
  4047  0326' 3400               	retlw	0
  4048  0327' 3444               	retlw	68
  4049  0328' 347D               	retlw	125
  4050  0329' 3441               	retlw	65
  4051  032A' 3430               	retlw	48
  4052  032B' 3448               	retlw	72
  4053  032C' 3448               	retlw	72
  4054  032D' 344A               	retlw	74
  4055  032E' 3432               	retlw	50
  4056  032F' 3438               	retlw	56
  4057  0330' 3440               	retlw	64
  4058  0331' 3440               	retlw	64
  4059  0332' 3422               	retlw	34
  4060  0333' 347A               	retlw	122
  4061  0334' 3400               	retlw	0
  4062  0335' 347A               	retlw	122
  4063  0336' 340A               	retlw	10
  4064  0337' 340A               	retlw	10
  4065  0338' 3472               	retlw	114
  4066  0339' 347D               	retlw	125
  4067  033A' 340D               	retlw	13
  4068  033B' 3419               	retlw	25
  4069  033C' 3431               	retlw	49
  4070  033D' 347D               	retlw	125
  4071  033E' 3426               	retlw	38
  4072  033F' 3429               	retlw	41
  4073  0340' 3429               	retlw	41
  4074  0341' 342F               	retlw	47
  4075  0342' 3428               	retlw	40
  4076  0343' 3426               	retlw	38
  4077  0344' 3429               	retlw	41
  4078  0345' 3429               	retlw	41
  4079  0346' 3429               	retlw	41
  4080  0347' 3426               	retlw	38
  4081  0348' 3430               	retlw	48
  4082  0349' 3448               	retlw	72
  4083  034A' 344D               	retlw	77
  4084  034B' 3440               	retlw	64
  4085  034C' 3420               	retlw	32
  4086  034D' 3438               	retlw	56
  4087  034E' 3408               	retlw	8
  4088  034F' 3408               	retlw	8
  4089  0350' 3408               	retlw	8
  4090  0351' 3408               	retlw	8
  4091  0352' 3408               	retlw	8
  4092  0353' 3408               	retlw	8
  4093  0354' 3408               	retlw	8
  4094  0355' 3408               	retlw	8
  4095  0356' 3438               	retlw	56
  4096  0357' 342F               	retlw	47
  4097  0358' 3410               	retlw	16
  4098  0359' 34C8               	retlw	200
  4099  035A' 34AC               	retlw	172
  4100  035B' 34BA               	retlw	186
  4101  035C' 342F               	retlw	47
  4102  035D' 3410               	retlw	16
  4103  035E' 3428               	retlw	40
  4104  035F' 3434               	retlw	52
  4105  0360' 34FA               	retlw	250
  4106  0361' 3400               	retlw	0
  4107  0362' 3400               	retlw	0
  4108  0363' 347B               	retlw	123
  4109  0364' 3400               	retlw	0
  4110  0365' 3400               	retlw	0
  4111  0366' 3408               	retlw	8
  4112  0367' 3414               	retlw	20
  4113  0368' 342A               	retlw	42
  4114  0369' 3414               	retlw	20
  4115  036A' 3422               	retlw	34
  4116  036B' 3422               	retlw	34
  4117  036C' 3414               	retlw	20
  4118  036D' 342A               	retlw	42
  4119  036E' 3414               	retlw	20
  4120  036F' 3408               	retlw	8
  4121  0370' 34AA               	retlw	170
  4122  0371' 3400               	retlw	0
  4123  0372' 3455               	retlw	85
  4124  0373' 3400               	retlw	0
  4125  0374' 34AA               	retlw	170
  4126  0375' 34AA               	retlw	170
  4127  0376' 3455               	retlw	85
  4128  0377' 34AA               	retlw	170
  4129  0378' 3455               	retlw	85
  4130  0379' 34AA               	retlw	170
  4131  037A' 3400               	retlw	0
  4132  037B' 3400               	retlw	0
  4133  037C' 3400               	retlw	0
  4134  037D' 34FF               	retlw	255
  4135  037E' 3400               	retlw	0
  4136  037F' 3410               	retlw	16
  4137  0380' 3410               	retlw	16
  4138  0381' 3410               	retlw	16
  4139  0382' 34FF               	retlw	255
  4140  0383' 3400               	retlw	0
  4141  0384' 3414               	retlw	20
  4142  0385' 3414               	retlw	20
  4143  0386' 3414               	retlw	20
  4144  0387' 34FF               	retlw	255
  4145  0388' 3400               	retlw	0
  4146  0389' 3410               	retlw	16
  4147  038A' 3410               	retlw	16
  4148  038B' 34FF               	retlw	255
  4149  038C' 3400               	retlw	0
  4150  038D' 34FF               	retlw	255
  4151  038E' 3410               	retlw	16
  4152  038F' 3410               	retlw	16
  4153  0390' 34F0               	retlw	240
  4154  0391' 3410               	retlw	16
  4155  0392' 34F0               	retlw	240
  4156  0393' 3414               	retlw	20
  4157  0394' 3414               	retlw	20
  4158  0395' 3414               	retlw	20
  4159  0396' 34FC               	retlw	252
  4160  0397' 3400               	retlw	0
  4161  0398' 3414               	retlw	20
  4162  0399' 3414               	retlw	20
  4163  039A' 34F7               	retlw	247
  4164  039B' 3400               	retlw	0
  4165  039C' 34FF               	retlw	255
  4166  039D' 3400               	retlw	0
  4167  039E' 3400               	retlw	0
  4168  039F' 34FF               	retlw	255
  4169  03A0' 3400               	retlw	0
  4170  03A1' 34FF               	retlw	255
  4171  03A2' 3414               	retlw	20
  4172  03A3' 3414               	retlw	20
  4173  03A4' 34F4               	retlw	244
  4174  03A5' 3404               	retlw	4
  4175  03A6' 34FC               	retlw	252
  4176  03A7' 3414               	retlw	20
  4177  03A8' 3414               	retlw	20
  4178  03A9' 3417               	retlw	23
  4179  03AA' 3410               	retlw	16
  4180  03AB' 341F               	retlw	31
  4181  03AC' 3410               	retlw	16
  4182  03AD' 3410               	retlw	16
  4183  03AE' 341F               	retlw	31
  4184  03AF' 3410               	retlw	16
  4185  03B0' 341F               	retlw	31
  4186  03B1' 3414               	retlw	20
  4187  03B2' 3414               	retlw	20
  4188  03B3' 3414               	retlw	20
  4189  03B4' 341F               	retlw	31
  4190  03B5' 3400               	retlw	0
  4191  03B6' 3410               	retlw	16
  4192  03B7' 3410               	retlw	16
  4193  03B8' 3410               	retlw	16
  4194  03B9' 34F0               	retlw	240
  4195  03BA' 3400               	retlw	0
  4196  03BB' 3400               	retlw	0
  4197  03BC' 3400               	retlw	0
  4198  03BD' 3400               	retlw	0
  4199  03BE' 341F               	retlw	31
  4200  03BF' 3410               	retlw	16
  4201  03C0' 3410               	retlw	16
  4202  03C1' 3410               	retlw	16
  4203  03C2' 3410               	retlw	16
  4204  03C3' 341F               	retlw	31
  4205  03C4' 3410               	retlw	16
  4206  03C5' 3410               	retlw	16
  4207  03C6' 3410               	retlw	16
  4208  03C7' 3410               	retlw	16
  4209  03C8' 34F0               	retlw	240
  4210  03C9' 3410               	retlw	16
  4211  03CA' 3400               	retlw	0
  4212  03CB' 3400               	retlw	0
  4213  03CC' 3400               	retlw	0
  4214  03CD' 34FF               	retlw	255
  4215  03CE' 3410               	retlw	16
  4216  03CF' 3410               	retlw	16
  4217  03D0' 3410               	retlw	16
  4218  03D1' 3410               	retlw	16
  4219  03D2' 3410               	retlw	16
  4220  03D3' 3410               	retlw	16
  4221  03D4' 3410               	retlw	16
  4222  03D5' 3410               	retlw	16
  4223  03D6' 3410               	retlw	16
  4224  03D7' 34FF               	retlw	255
  4225  03D8' 3410               	retlw	16
  4226  03D9' 3400               	retlw	0
  4227  03DA' 3400               	retlw	0
  4228  03DB' 3400               	retlw	0
  4229  03DC' 34FF               	retlw	255
  4230  03DD' 3414               	retlw	20
  4231  03DE' 3400               	retlw	0
  4232  03DF' 3400               	retlw	0
  4233  03E0' 34FF               	retlw	255
  4234  03E1' 3400               	retlw	0
  4235  03E2' 34FF               	retlw	255
  4236  03E3' 3400               	retlw	0
  4237  03E4' 3400               	retlw	0
  4238  03E5' 341F               	retlw	31
  4239  03E6' 3410               	retlw	16
  4240  03E7' 3417               	retlw	23
  4241  03E8' 3400               	retlw	0
  4242  03E9' 3400               	retlw	0
  4243  03EA' 34FC               	retlw	252
  4244  03EB' 3404               	retlw	4
  4245  03EC' 34F4               	retlw	244
  4246  03ED' 3414               	retlw	20
  4247  03EE' 3414               	retlw	20
  4248  03EF' 3417               	retlw	23
  4249  03F0' 3410               	retlw	16
  4250  03F1' 3417               	retlw	23
  4251  03F2' 3414               	retlw	20
  4252  03F3' 3414               	retlw	20
  4253  03F4' 34F4               	retlw	244
  4254  03F5' 3404               	retlw	4
  4255  03F6' 34F4               	retlw	244
  4256  03F7' 3400               	retlw	0
  4257  03F8' 3400               	retlw	0
  4258  03F9' 34FF               	retlw	255
  4259  03FA' 3400               	retlw	0
  4260  03FB' 34F7               	retlw	247
  4261  03FC' 3414               	retlw	20
  4262  03FD' 3414               	retlw	20
  4263  03FE' 3414               	retlw	20
  4264  03FF' 3414               	retlw	20
  4265  0400' 3414               	retlw	20
  4266  0401' 3414               	retlw	20
  4267  0402' 3414               	retlw	20
  4268  0403' 34F7               	retlw	247
  4269  0404' 3400               	retlw	0
  4270  0405' 34F7               	retlw	247
  4271  0406' 3414               	retlw	20
  4272  0407' 3414               	retlw	20
  4273  0408' 3414               	retlw	20
  4274  0409' 3417               	retlw	23
  4275  040A' 3414               	retlw	20
  4276  040B' 3410               	retlw	16
  4277  040C' 3410               	retlw	16
  4278  040D' 341F               	retlw	31
  4279  040E' 3410               	retlw	16
  4280  040F' 341F               	retlw	31
  4281  0410' 3414               	retlw	20
  4282  0411' 3414               	retlw	20
  4283  0412' 3414               	retlw	20
  4284  0413' 34F4               	retlw	244
  4285  0414' 3414               	retlw	20
  4286  0415' 3410               	retlw	16
  4287  0416' 3410               	retlw	16
  4288  0417' 34F0               	retlw	240
  4289  0418' 3410               	retlw	16
  4290  0419' 34F0               	retlw	240
  4291  041A' 3400               	retlw	0
  4292  041B' 3400               	retlw	0
  4293  041C' 341F               	retlw	31
  4294  041D' 3410               	retlw	16
  4295  041E' 341F               	retlw	31
  4296  041F' 3400               	retlw	0
  4297  0420' 3400               	retlw	0
  4298  0421' 3400               	retlw	0
  4299  0422' 341F               	retlw	31
  4300  0423' 3414               	retlw	20
  4301  0424' 3400               	retlw	0
  4302  0425' 3400               	retlw	0
  4303  0426' 3400               	retlw	0
  4304  0427' 34FC               	retlw	252
  4305  0428' 3414               	retlw	20
  4306  0429' 3400               	retlw	0
  4307  042A' 3400               	retlw	0
  4308  042B' 34F0               	retlw	240
  4309  042C' 3410               	retlw	16
  4310  042D' 34F0               	retlw	240
  4311  042E' 3410               	retlw	16
  4312  042F' 3410               	retlw	16
  4313  0430' 34FF               	retlw	255
  4314  0431' 3410               	retlw	16
  4315  0432' 34FF               	retlw	255
  4316  0433' 3414               	retlw	20
  4317  0434' 3414               	retlw	20
  4318  0435' 3414               	retlw	20
  4319  0436' 34FF               	retlw	255
  4320  0437' 3414               	retlw	20
  4321  0438' 3410               	retlw	16
  4322  0439' 3410               	retlw	16
  4323  043A' 3410               	retlw	16
  4324  043B' 341F               	retlw	31
  4325  043C' 3400               	retlw	0
  4326  043D' 3400               	retlw	0
  4327  043E' 3400               	retlw	0
  4328  043F' 3400               	retlw	0
  4329  0440' 34F0               	retlw	240
  4330  0441' 3410               	retlw	16
  4331  0442' 34FF               	retlw	255
  4332  0443' 34FF               	retlw	255
  4333  0444' 34FF               	retlw	255
  4334  0445' 34FF               	retlw	255
  4335  0446' 34FF               	retlw	255
  4336  0447' 34F0               	retlw	240
  4337  0448' 34F0               	retlw	240
  4338  0449' 34F0               	retlw	240
  4339  044A' 34F0               	retlw	240
  4340  044B' 34F0               	retlw	240
  4341  044C' 34FF               	retlw	255
  4342  044D' 34FF               	retlw	255
  4343  044E' 34FF               	retlw	255
  4344  044F' 3400               	retlw	0
  4345  0450' 3400               	retlw	0
  4346  0451' 3400               	retlw	0
  4347  0452' 3400               	retlw	0
  4348  0453' 3400               	retlw	0
  4349  0454' 34FF               	retlw	255
  4350  0455' 34FF               	retlw	255
  4351  0456' 340F               	retlw	15
  4352  0457' 340F               	retlw	15
  4353  0458' 340F               	retlw	15
  4354  0459' 340F               	retlw	15
  4355  045A' 340F               	retlw	15
  4356  045B' 3438               	retlw	56
  4357  045C' 3444               	retlw	68
  4358  045D' 3444               	retlw	68
  4359  045E' 3438               	retlw	56
  4360  045F' 3444               	retlw	68
  4361  0460' 34FC               	retlw	252
  4362  0461' 344A               	retlw	74
  4363  0462' 344A               	retlw	74
  4364  0463' 344A               	retlw	74
  4365  0464' 3434               	retlw	52
  4366  0465' 347E               	retlw	126
  4367  0466' 3402               	retlw	2
  4368  0467' 3402               	retlw	2
  4369  0468' 3406               	retlw	6
  4370  0469' 3406               	retlw	6
  4371  046A' 3402               	retlw	2
  4372  046B' 347E               	retlw	126
  4373  046C' 3402               	retlw	2
  4374  046D' 347E               	retlw	126
  4375  046E' 3402               	retlw	2
  4376  046F' 3463               	retlw	99
  4377  0470' 3455               	retlw	85
  4378  0471' 3449               	retlw	73
  4379  0472' 3441               	retlw	65
  4380  0473' 3463               	retlw	99
  4381  0474' 3438               	retlw	56
  4382  0475' 3444               	retlw	68
  4383  0476' 3444               	retlw	68
  4384  0477' 343C               	retlw	60
  4385  0478' 3404               	retlw	4
  4386  0479' 3440               	retlw	64
  4387  047A' 347E               	retlw	126
  4388  047B' 3420               	retlw	32
  4389  047C' 341E               	retlw	30
  4390  047D' 3420               	retlw	32
  4391  047E' 3406               	retlw	6
  4392  047F' 3402               	retlw	2
  4393  0480' 347E               	retlw	126
  4394  0481' 3402               	retlw	2
  4395  0482' 3402               	retlw	2
  4396  0483' 3499               	retlw	153
  4397  0484' 34A5               	retlw	165
  4398  0485' 34E7               	retlw	231
  4399  0486' 34A5               	retlw	165
  4400  0487' 3499               	retlw	153
  4401  0488' 341C               	retlw	28
  4402  0489' 342A               	retlw	42
  4403  048A' 3449               	retlw	73
  4404  048B' 342A               	retlw	42
  4405  048C' 341C               	retlw	28
  4406  048D' 344C               	retlw	76
  4407  048E' 3472               	retlw	114
  4408  048F' 3401               	retlw	1
  4409  0490' 3472               	retlw	114
  4410  0491' 344C               	retlw	76
  4411  0492' 3430               	retlw	48
  4412  0493' 344A               	retlw	74
  4413  0494' 344D               	retlw	77
  4414  0495' 344D               	retlw	77
  4415  0496' 3430               	retlw	48
  4416  0497' 3430               	retlw	48
  4417  0498' 3448               	retlw	72
  4418  0499' 3478               	retlw	120
  4419  049A' 3448               	retlw	72
  4420  049B' 3430               	retlw	48
  4421  049C' 34BC               	retlw	188
  4422  049D' 3462               	retlw	98
  4423  049E' 345A               	retlw	90
  4424  049F' 3446               	retlw	70
  4425  04A0' 343D               	retlw	61
  4426  04A1' 343E               	retlw	62
  4427  04A2' 3449               	retlw	73
  4428  04A3' 3449               	retlw	73
  4429  04A4' 3449               	retlw	73
  4430  04A5' 3400               	retlw	0
  4431  04A6' 347E               	retlw	126
  4432  04A7' 3401               	retlw	1
  4433  04A8' 3401               	retlw	1
  4434  04A9' 3401               	retlw	1
  4435  04AA' 347E               	retlw	126
  4436  04AB' 342A               	retlw	42
  4437  04AC' 342A               	retlw	42
  4438  04AD' 342A               	retlw	42
  4439  04AE' 342A               	retlw	42
  4440  04AF' 342A               	retlw	42
  4441  04B0' 3444               	retlw	68
  4442  04B1' 3444               	retlw	68
  4443  04B2' 345F               	retlw	95
  4444  04B3' 3444               	retlw	68
  4445  04B4' 3444               	retlw	68
  4446  04B5' 3440               	retlw	64
  4447  04B6' 3451               	retlw	81
  4448  04B7' 344A               	retlw	74
  4449  04B8' 3444               	retlw	68
  4450  04B9' 3440               	retlw	64
  4451  04BA' 3440               	retlw	64
  4452  04BB' 3444               	retlw	68
  4453  04BC' 344A               	retlw	74
  4454  04BD' 3451               	retlw	81
  4455  04BE' 3440               	retlw	64
  4456  04BF' 3400               	retlw	0
  4457  04C0' 3400               	retlw	0
  4458  04C1' 34FF               	retlw	255
  4459  04C2' 3401               	retlw	1
  4460  04C3' 3403               	retlw	3
  4461  04C4' 34E0               	retlw	224
  4462  04C5' 3480               	retlw	128
  4463  04C6' 34FF               	retlw	255
  4464  04C7' 3400               	retlw	0
  4465  04C8' 3400               	retlw	0
  4466  04C9' 3408               	retlw	8
  4467  04CA' 3408               	retlw	8
  4468  04CB' 346B               	retlw	107
  4469  04CC' 346B               	retlw	107
  4470  04CD' 3408               	retlw	8
  4471  04CE' 3436               	retlw	54
  4472  04CF' 3412               	retlw	18
  4473  04D0' 3436               	retlw	54
  4474  04D1' 3424               	retlw	36
  4475  04D2' 3436               	retlw	54
  4476  04D3' 3406               	retlw	6
  4477  04D4' 340F               	retlw	15
  4478  04D5' 3409               	retlw	9
  4479  04D6' 340F               	retlw	15
  4480  04D7' 3406               	retlw	6
  4481  04D8' 3400               	retlw	0
  4482  04D9' 3400               	retlw	0
  4483  04DA' 3418               	retlw	24
  4484  04DB' 3418               	retlw	24
  4485  04DC' 3400               	retlw	0
  4486  04DD' 3400               	retlw	0
  4487  04DE' 3400               	retlw	0
  4488  04DF' 3410               	retlw	16
  4489  04E0' 3410               	retlw	16
  4490  04E1' 3400               	retlw	0
  4491  04E2' 3430               	retlw	48
  4492  04E3' 3440               	retlw	64
  4493  04E4' 34FF               	retlw	255
  4494  04E5' 3401               	retlw	1
  4495  04E6' 3401               	retlw	1
  4496  04E7' 3400               	retlw	0
  4497  04E8' 341F               	retlw	31
  4498  04E9' 3401               	retlw	1
  4499  04EA' 3401               	retlw	1
  4500  04EB' 341E               	retlw	30
  4501  04EC' 3400               	retlw	0
  4502  04ED' 3419               	retlw	25
  4503  04EE' 341D               	retlw	29
  4504  04EF' 3417               	retlw	23
  4505  04F0' 3412               	retlw	18
  4506  04F1' 3400               	retlw	0
  4507  04F2' 343C               	retlw	60
  4508  04F3' 343C               	retlw	60
  4509  04F4' 343C               	retlw	60
  4510  04F5' 343C               	retlw	60
  4511  04F6' 3400               	retlw	0
  4512  04F7' 3400               	retlw	0
  4513  04F8' 3400               	retlw	0
  4514  04F9' 3400               	retlw	0
  4515  04FA' 3400               	retlw	0
  4516  04FB'                    __end_of_font:	
  4517                           
  4518                           	psect	stringtext2
  4519  0000'                    __pstringtext2:	
  4520  0000'                    _ssd1306_init_cmd:	
  4521  0000' 3400               	retlw	0
  4522  0001' 34AE               	retlw	174
  4523  0002' 3400               	retlw	0
  4524  0003' 34A8               	retlw	168
  4525  0004' 343F               	retlw	63
  4526  0005' 3400               	retlw	0
  4527  0006' 34D3               	retlw	211
  4528  0007' 3400               	retlw	0
  4529  0008' 3400               	retlw	0
  4530  0009' 3440               	retlw	64
  4531  000A' 3400               	retlw	0
  4532  000B' 34A0               	retlw	160
  4533  000C' 3400               	retlw	0
  4534  000D' 34C0               	retlw	192
  4535  000E' 3400               	retlw	0
  4536  000F' 34DA               	retlw	218
  4537  0010' 3412               	retlw	18
  4538  0011' 3400               	retlw	0
  4539  0012' 3481               	retlw	129
  4540  0013' 34FF               	retlw	255
  4541  0014' 3400               	retlw	0
  4542  0015' 34A4               	retlw	164
  4543  0016' 3400               	retlw	0
  4544  0017' 34A6               	retlw	166
  4545  0018' 3400               	retlw	0
  4546  0019' 34D5               	retlw	213
  4547  001A' 3480               	retlw	128
  4548  001B' 3400               	retlw	0
  4549  001C' 3420               	retlw	32
  4550  001D' 3410               	retlw	16
  4551  001E' 3400               	retlw	0
  4552  001F' 3422               	retlw	34
  4553  0020' 3400               	retlw	0
  4554  0021' 3407               	retlw	7
  4555  0022' 3400               	retlw	0
  4556  0023' 3421               	retlw	33
  4557  0024' 3400               	retlw	0
  4558  0025' 347F               	retlw	127
  4559  0026' 3400               	retlw	0
  4560  0027' 348D               	retlw	141
  4561  0028' 3414               	retlw	20
  4562  0029' 3400               	retlw	0
  4563  002A' 34AF               	retlw	175
  4564  002B'                    __end_of_ssd1306_init_cmd:	
  4565                           
  4566                           	psect	stringtext3
  4567  0000'                    __pstringtext3:	
  4568  0000'                    _DotB1:	
  4569  0000' 3440               	retlw	64
  4570  0001' 34FF               	retlw	255
  4571  0002' 3407               	retlw	7
  4572  0003' 34FF               	retlw	255
  4573  0004' 3403               	retlw	3
  4574  0005' 3405               	retlw	5
  4575  0006' 3409               	retlw	9
  4576  0007' 3411               	retlw	17
  4577  0008' 3421               	retlw	33
  4578  0009'                    __end_of_DotB1:	
  4579                           
  4580                           	psect	stringtext4
  4581  0000'                    __pstringtext4:	
  4582  0000'                    _ssd1306_cmd_setColAddr:	
  4583  0000' 3400               	retlw	0
  4584  0001' 3421               	retlw	33
  4585  0002' 3400               	retlw	0
  4586  0003' 347F               	retlw	127
  4587  0004'                    __end_of_ssd1306_cmd_setColAddr:	
  4588  0011                     _PIR1bits	set	17
  4589  000B                     _INTCONbits	set	11
  4590  0091                     _PIE1bits	set	145
  4591  0097                     _WDTCON	set	151
  4592  008E                     _TRISC	set	142
  4593  008C                     _TRISA	set	140
  4594  010E                     _LATC	set	270
  4595  010C                     _LATA	set	268
  4596  018C                     _ANSELA	set	396
  4597  018E                     _ANSELC	set	398
  4598  0211                     _SSP1BUF	set	529
  4599  0216                     _SSP1CON2bits	set	534
  4600  0215                     _SSP1CON1bits	set	533
  4601  0212                     _SSP1ADD	set	530
  4602  0217                     _SSP1CON3	set	535
  4603  0215                     _SSP1CON1	set	533
  4604  0214                     _SSP1STAT	set	532
  4605  020E                     _WPUC	set	526
  4606  020C                     _WPUA	set	524
  4607  028E                     _ODCONC	set	654
  4608  028C                     _ODCONA	set	652
  4609  0916                     _PMD5	set	2326
  4610  0915                     _PMD4	set	2325
  4611  0914                     _PMD3	set	2324
  4612  0913                     _PMD2	set	2323
  4613  0912                     _PMD1	set	2322
  4614  0911                     _PMD0	set	2321
  4615  091E                     _OSCTUNE	set	2334
  4616  091F                     _OSCFRQ	set	2335
  4617  091D                     _OSCEN	set	2333
  4618  091B                     _OSCCON3	set	2331
  4619  0919                     _OSCCON1	set	2329
  4620  48E0                     _PLLR	set	18656
  4621  0E21                     _SSP1DATPPSbits	set	3617
  4622  0E20                     _SSP1CLKPPSbits	set	3616
  4623  0EA5                     _RC5PPSbits	set	3749
  4624  0EA4                     _RC4PPSbits	set	3748
  4625  0004'                    STR_1:	
  4626  0004' 3474               	retlw	116	;'t'
  4627  0005' 3465               	retlw	101	;'e'
  4628  0006' 3473               	retlw	115	;'s'
  4629  0007' 3474               	retlw	116	;'t'
  4630  0008' 3420               	retlw	32	;' '
  4631  0009' 346C               	retlw	108	;'l'
  4632  000A' 3469               	retlw	105	;'i'
  4633  000B' 346E               	retlw	110	;'n'
  4634  000C' 3465               	retlw	101	;'e'
  4635  000D' 3420               	retlw	32	;' '
  4636  000E' 3431               	retlw	49	;'1'
  4637  000F' 3420               	retlw	32	;' '
  4638  0010' 342E               	retlw	46	;'.'
  4639  0011' 342E               	retlw	46	;'.'
  4640  0012' 342E               	retlw	46	;'.'
  4641  0013' 3400               	retlw	0
  4642                           
  4643                           	psect	stringtext5
  4644  0000'                    __pstringtext5:	
  4645  0000'                    STR_2:	
  4646  0000' 3432               	retlw	50	;'2'
  4647  0001' 346E               	retlw	110	;'n'
  4648  0002' 3464               	retlw	100	;'d'
  4649  0003' 3420               	retlw	32	;' '
  4650  0004' 346C               	retlw	108	;'l'
  4651  0005' 3469               	retlw	105	;'i'
  4652  0006' 346E               	retlw	110	;'n'
  4653  0007' 3465               	retlw	101	;'e'
  4654  0008' 3420               	retlw	32	;' '
  4655  0009' 342E               	retlw	46	;'.'
  4656  000A' 342E               	retlw	46	;'.'
  4657  000B' 342E               	retlw	46	;'.'
  4658  000C' 3400               	retlw	0
  4659                           
  4660                           	psect	stringtext6
  4661  0000'                    __pstringtext6:	
  4662  0000'                    STR_3:	
  4663  0000' 3473               	retlw	115	;'s'
  4664  0001' 3463               	retlw	99	;'c'
  4665  0002' 3472               	retlw	114	;'r'
  4666  0003' 346F               	retlw	111	;'o'
  4667  0004' 346C               	retlw	108	;'l'
  4668  0005' 346C               	retlw	108	;'l'
  4669  0006' 3400               	retlw	0
  4670                           
  4671                           	psect	stringtext7
  4672  0000'                    __pstringtext7:	
  4673                           
  4674                           ; #config settings
  4675  0000                     
  4676                           	psect	cinit
  4677  0000'                    start_initialization:	
  4678  0000'                    __initialization:		;BIGRAM
  4679                           
  4680                           ; Initialize objects allocated to BIGRAM
  4681  0000' 3000'              	movlw	low __pidataBIGRAM
  4682  0001' 0084               	movwf	4
  4683  0002' 3000'              	movlw	(high __pidataBIGRAM)| (0+128)
  4684  0003' 0085               	movwf	5
  4685  0004' 30E8               	movlw	low (0+9192)
  4686  0005' 0086               	movwf	6
  4687  0006' 3023               	movlw	high (0+9192)
  4688  0007' 0087               	movwf	7
  4689  0008' 3004               	movlw	4
  4690  0009' 00FF               	movwf	btemp+1
  4691  000A' 3008               	movlw	8
  4692  000B' 3180' 2000' 3180'  	fcall	init_ram
  4693                           
  4694                           ; Initialize objects allocated to BANK2
  4695  000E' 3000'              	movlw	low __pidataBANK2
  4696  000F' 0084               	movwf	4
  4697  0010' 3000'              	movlw	(high __pidataBANK2)| (0+128)
  4698  0011' 0085               	movwf	5
  4699  0012' 3000'              	movlw	low __pdataBANK2
  4700  0013' 0086               	movwf	6
  4701  0014' 3000'              	movlw	high __pdataBANK2
  4702  0015' 0087               	movwf	7
  4703  0016' 3000               	movlw	0
  4704  0017' 00FF               	movwf	btemp+1
  4705  0018' 3013               	movlw	19
  4706  0019' 3180' 2000' 3180'  	fcall	init_ram
  4707                           
  4708                           ; Initialize objects allocated to BANK3
  4709  001C' 3000'              	movlw	low __pidataBANK3
  4710  001D' 0084               	movwf	4
  4711  001E' 3000'              	movlw	(high __pidataBANK3)| (0+128)
  4712  001F' 0085               	movwf	5
  4713  0020' 3000'              	movlw	low __pdataBANK3
  4714  0021' 0086               	movwf	6
  4715  0022' 3000'              	movlw	high __pdataBANK3
  4716  0023' 0087               	movwf	7
  4717  0024' 3000               	movlw	0
  4718  0025' 00FF               	movwf	btemp+1
  4719  0026' 301A               	movlw	26
  4720  0027' 3180' 2000' 3180'  	fcall	init_ram
  4721                           
  4722                           ; Clear objects allocated to COMMON
  4723  002A' 0180'              	clrf	__pbssCOMMON& (0+127)
  4724  002B' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
  4725  002C' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
  4726  002D' 0180'              	clrf	(__pbssCOMMON+3)& (0+127)
  4727  002E' 0180'              	clrf	(__pbssCOMMON+4)& (0+127)
  4728  002F' 0180'              	clrf	(__pbssCOMMON+5)& (0+127)
  4729  0030' 0180'              	clrf	(__pbssCOMMON+6)& (0+127)
  4730                           
  4731                           ; Clear objects allocated to BANK0
  4732  0031' 0180'              	clrf	__pbssBANK0& (0+127)
  4733  0032' 0180'              	clrf	(__pbssBANK0+1)& (0+127)
  4734                           
  4735                           ; Clear objects allocated to BANK1
  4736  0033' 3000'              	movlw	low __pbssBANK1
  4737  0034' 0084               	movwf	4
  4738  0035' 3000'              	movlw	high __pbssBANK1
  4739  0036' 0085               	movwf	5
  4740  0037' 300D               	movlw	13
  4741  0038' 00FE               	movwf	btemp
  4742  0039' 3000               	movlw	0
  4743  003A' 00FF               	movwf	btemp+1
  4744  003B' 3180' 2000' 3180'  	fcall	clear_ram0
  4745                           
  4746                           ; Clear objects allocated to BANK2
  4747  003E' 3000'              	movlw	low __pbssBANK2
  4748  003F' 0084               	movwf	4
  4749  0040' 3000'              	movlw	high __pbssBANK2
  4750  0041' 0085               	movwf	5
  4751  0042' 3023               	movlw	35
  4752  0043' 00FE               	movwf	btemp
  4753  0044' 3000               	movlw	0
  4754  0045' 00FF               	movwf	btemp+1
  4755  0046' 3180' 2000'        	fcall	clear_ram0
  4756  0048'                    end_of_initialization:	
  4757                           ;End of C runtime variable initialization code
  4758                           
  4759  0048'                    __end_of__initialization:	
  4760  0048' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4761  0049' 0020               	movlb	0
  4762  004A' 3180' 2800'        	ljmp	_main	;jump to C main() function
  4763                           
  4764                           	psect	bssCOMMON
  4765  0000'                    __pbssCOMMON:	
  4766  0000'                    _HEIGHT:	
  4767  0000'                    	ds	2
  4768  0002'                    _rotation:	
  4769  0002'                    	ds	1
  4770  0003'                    _p_i2c1_current:	
  4771  0003'                    	ds	1
  4772  0004'                    _p_i2c1_trb_current:	
  4773  0004'                    	ds	1
  4774  0005'                    I2C1_ISR@i2c_address:	
  4775  0005'                    	ds	2
  4776                           
  4777                           	psect	bssBANK0
  4778  0000'                    __pbssBANK0:	
  4779  0000'                    _WIDTH:	
  4780  0000'                    	ds	2
  4781                           
  4782                           	psect	bssBANK1
  4783  0000'                    __pbssBANK1:	
  4784  0000'                    _i2c1_object:	
  4785  0000'                    	ds	5
  4786  0005'                    __width:	
  4787  0005'                    	ds	2
  4788  0007'                    _textsize:	
  4789  0007'                    	ds	1
  4790  0008'                    I2C1_ISR@i2c_10bit_address_restart:	
  4791  0008'                    	ds	1
  4792  0009'                    I2C1_ISR@i2c_bytes_left:	
  4793  0009'                    	ds	1
  4794  000A'                    I2C1_ISR@pi2c_buf_ptr:	
  4795  000A'                    	ds	1
  4796  000B'                    _i2c1_trb_count:	
  4797  000B'                    	ds	1
  4798  000C'                    _i2c1_state:	
  4799  000C'                    	ds	1
  4800                           
  4801                           	psect	bssBANK2
  4802  0000'                    __pbssBANK2:	
  4803  0000'                    _ssd1306_cmd:	
  4804  0000'                    	ds	10
  4805  000A'                    _textbgcolor:	
  4806  000A'                    	ds	2
  4807  000C'                    _textcolor:	
  4808  000C'                    	ds	2
  4809  000E'                    _cursor_y:	
  4810  000E'                    	ds	2
  4811  0010'                    _cursor_x:	
  4812  0010'                    	ds	2
  4813  0012'                    __height:	
  4814  0012'                    	ds	2
  4815  0014'                    display_invert@F7621:	
  4816  0014'                    	ds	2
  4817  0016'                    _wrap:	
  4818  0016'                    	ds	1
  4819  0017'                    _dummy_cmd:	
  4820  0017'                    	ds	1
  4821  0018'                    I2C1_MasterRead@trBlock:	
  4822  0018'                    	ds	4
  4823  001C'                    I2C1_MasterWrite@trBlock:	
  4824  001C'                    	ds	4
  4825  0020'                    _i2c1_tr_queue:	
  4826  0020'                    	ds	3
  4827                           
  4828                           	psect	dataBANK2
  4829  0000'                    __pdataBANK2:	
  4830  0000'                    display_scroll@F7650:	
  4831  0000'                    	ds	9
  4832  0009'                    display_update@F7624:	
  4833  0009'                    	ds	5
  4834  000E'                    display_contrast@F7618:	
  4835  000E'                    	ds	3
  4836  0011'                    display_stopscroll@F7644:	
  4837  0011'                    	ds	2
  4838                           
  4839                           	psect	dataBANK3
  4840  0000'                    __pdataBANK3:	
  4841  0000'                    display_init@F7608:	
  4842  0000'                    	ds	26
  4843                           
  4844                           	psect	inittext
  4845  0000'                    init_ram:	
  4846  0000' 00FE               	movwf	126
  4847  0001'                    initloop:	
  4848  0001' 0012               	moviw fsr0++
  4849  0002' 001E               	movwi fsr1++
  4850  0003' 3001               	movlw	1
  4851  0004' 02FE               	subwf	126,f
  4852  0005' 3000               	movlw	0
  4853  0006' 3BFF               	subwfb	127,f
  4854  0007' 087F               	movf	127,w
  4855  0008' 047E               	iorwf	126,w
  4856  0009' 1903               	btfsc	3,2
  4857  000A' 3400               	retlw	0
  4858  000B' 2800'              	goto	initloop
  4859                           
  4860                           	psect	clrtext
  4861  0000'                    clear_ram0:	
  4862                           ;	Called with FSR0 containing the base address, and
  4863                           ;	btemp/btemp+1 has the size to clear
  4864                           
  4865  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  4866  0001'                    clrloop0:	
  4867  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  4868  0002' 3101               	addfsr 0,1
  4869  0003' 3001               	movlw	1
  4870  0004' 02FE               	subwf	126,f
  4871  0005' 3000               	movlw	0
  4872  0006' 3BFF               	subwfb	127,f
  4873  0007' 087F               	movf	127,w
  4874  0008' 047E               	iorwf	126,w
  4875  0009' 1903               	btfsc	3,2
  4876  000A' 3400               	retlw	0	;all done for this memory range, return
  4877  000B' 2800'              	goto	clrloop0	;have we reached the end yet?
  4878                           
  4879                           	psect	cstackBANK2
  4880  0000'                    __pcstackBANK2:	
  4881  0000'                    _main$672:	
  4882                           
  4883                           ; 2 bytes @ 0x0
  4884  0000'                    	ds	2
  4885  0002'                    _main$674:	
  4886                           
  4887                           ; 2 bytes @ 0x2
  4888  0002'                    	ds	2
  4889  0004'                    main@color:	
  4890                           
  4891                           ; 1 bytes @ 0x4
  4892  0004'                    	ds	1
  4893  0005'                    _main$1408:	
  4894                           
  4895                           ; 2 bytes @ 0x5
  4896  0005'                    	ds	2
  4897  0007'                    _main$1409:	
  4898                           
  4899                           ; 2 bytes @ 0x7
  4900  0007'                    	ds	2
  4901  0009'                    _main$1410:	
  4902                           
  4903                           ; 2 bytes @ 0x9
  4904  0009'                    	ds	2
  4905  000B'                    _main$1411:	
  4906                           
  4907                           ; 2 bytes @ 0xB
  4908  000B'                    	ds	2
  4909  000D'                    _main$1412:	
  4910                           
  4911                           ; 2 bytes @ 0xD
  4912  000D'                    	ds	2
  4913  000F'                    _main$1413:	
  4914                           
  4915                           ; 2 bytes @ 0xF
  4916  000F'                    	ds	2
  4917  0011'                    main@j:	
  4918                           
  4919                           ; 2 bytes @ 0x11
  4920  0011'                    	ds	2
  4921  0013'                    main@i:	
  4922                           
  4923                           ; 2 bytes @ 0x13
  4924  0013'                    	ds	2
  4925                           
  4926                           	psect	cstackBANK1
  4927  0000'                    __pcstackBANK1:	
  4928  0000'                    gfx_drawLine@dy:	
  4929                           
  4930                           ; 2 bytes @ 0x0
  4931  0000'                    	ds	2
  4932  0002'                    gfx_drawLine@ystep:	
  4933                           
  4934                           ; 2 bytes @ 0x2
  4935  0002'                    	ds	2
  4936  0004'                    gfx_drawLine@err:	
  4937                           
  4938                           ; 2 bytes @ 0x4
  4939  0004'                    	ds	2
  4940  0006'                    gfx_drawLine@steep:	
  4941                           
  4942                           ; 2 bytes @ 0x6
  4943  0006'                    	ds	2
  4944  0008'                    gfx_drawLine@dx:	
  4945                           
  4946                           ; 2 bytes @ 0x8
  4947  0008'                    	ds	2
  4948  000A'                    gfx_drawLine@t:	
  4949                           
  4950                           ; 2 bytes @ 0xA
  4951  000A'                    	ds	2
  4952  000C'                    ?_gfx_drawRect:	
  4953  000C'                    ?_gfx_fillRect:	
  4954                           ; 1 bytes @ 0xC
  4955                           
  4956  000C'                    ?_gfx_drawTriangle:	
  4957                           ; 1 bytes @ 0xC
  4958                           
  4959  000C'                    gfx_drawRect@x:	
  4960                           ; 1 bytes @ 0xC
  4961                           
  4962  000C'                    gfx_fillRect@x:	
  4963                           ; 2 bytes @ 0xC
  4964                           
  4965  000C'                    gfx_drawTriangle@x0:	
  4966                           ; 2 bytes @ 0xC
  4967                           
  4968                           
  4969                           ; 2 bytes @ 0xC
  4970  000C'                    	ds	2
  4971  000E'                    gfx_drawRect@y:	
  4972  000E'                    gfx_fillRect@y:	
  4973                           ; 2 bytes @ 0xE
  4974                           
  4975  000E'                    gfx_drawTriangle@y0:	
  4976                           ; 2 bytes @ 0xE
  4977                           
  4978                           
  4979                           ; 2 bytes @ 0xE
  4980  000E'                    	ds	2
  4981  0010'                    gfx_drawRect@w:	
  4982  0010'                    gfx_fillRect@w:	
  4983                           ; 2 bytes @ 0x10
  4984                           
  4985  0010'                    gfx_drawTriangle@x1:	
  4986                           ; 2 bytes @ 0x10
  4987                           
  4988                           
  4989                           ; 2 bytes @ 0x10
  4990  0010'                    	ds	2
  4991  0012'                    gfx_drawRect@h:	
  4992  0012'                    gfx_fillRect@h:	
  4993                           ; 2 bytes @ 0x12
  4994                           
  4995  0012'                    gfx_drawTriangle@y1:	
  4996                           ; 2 bytes @ 0x12
  4997                           
  4998                           
  4999                           ; 2 bytes @ 0x12
  5000  0012'                    	ds	2
  5001  0014'                    gfx_drawRect@color:	
  5002  0014'                    gfx_fillRect@color:	
  5003                           ; 2 bytes @ 0x14
  5004                           
  5005  0014'                    gfx_drawTriangle@x2:	
  5006                           ; 2 bytes @ 0x14
  5007                           
  5008                           
  5009                           ; 2 bytes @ 0x14
  5010  0014'                    	ds	2
  5011  0016'                    ?_gfx_drawChar:	
  5012  0016'                    gfx_drawTriangle@y2:	
  5013                           ; 1 bytes @ 0x16
  5014                           
  5015  0016'                    gfx_drawChar@x:	
  5016                           ; 2 bytes @ 0x16
  5017                           
  5018                           
  5019                           ; 2 bytes @ 0x16
  5020  0016'                    	ds	2
  5021  0018'                    gfx_drawTriangle@color:	
  5022  0018'                    gfx_drawChar@y:	
  5023                           ; 2 bytes @ 0x18
  5024                           
  5025                           
  5026                           ; 2 bytes @ 0x18
  5027  0018'                    	ds	2
  5028  001A'                    gfx_drawChar@c:	
  5029                           
  5030                           ; 1 bytes @ 0x1A
  5031  001A'                    	ds	1
  5032  001B'                    gfx_drawChar@color:	
  5033                           
  5034                           ; 2 bytes @ 0x1B
  5035  001B'                    	ds	2
  5036  001D'                    gfx_drawChar@bg:	
  5037                           
  5038                           ; 2 bytes @ 0x1D
  5039  001D'                    	ds	2
  5040  001F'                    gfx_drawChar@size:	
  5041                           
  5042                           ; 1 bytes @ 0x1F
  5043  001F'                    	ds	1
  5044  0020'                    ??_gfx_drawChar:	
  5045                           
  5046                           ; 1 bytes @ 0x20
  5047  0020'                    	ds	7
  5048  0027'                    gfx_drawChar@line:	
  5049                           
  5050                           ; 1 bytes @ 0x27
  5051  0027'                    	ds	1
  5052  0028'                    _gfx_drawChar$1414:	
  5053                           
  5054                           ; 2 bytes @ 0x28
  5055  0028'                    	ds	2
  5056  002A'                    _gfx_drawChar$1415:	
  5057                           
  5058                           ; 2 bytes @ 0x2A
  5059  002A'                    	ds	2
  5060  002C'                    gfx_drawChar@j:	
  5061                           
  5062                           ; 1 bytes @ 0x2C
  5063  002C'                    	ds	1
  5064  002D'                    gfx_drawChar@i:	
  5065                           
  5066                           ; 1 bytes @ 0x2D
  5067  002D'                    	ds	1
  5068  002E'                    ??_gfx_write:	
  5069                           
  5070                           ; 1 bytes @ 0x2E
  5071  002E'                    	ds	7
  5072  0035'                    ?_gfx_print:	
  5073  0035'                    gfx_print@s:	
  5074                           ; 1 bytes @ 0x35
  5075                           
  5076                           
  5077                           ; 2 bytes @ 0x35
  5078  0035'                    	ds	2
  5079  0037'                    gfx_print@len:	
  5080                           
  5081                           ; 2 bytes @ 0x37
  5082  0037'                    	ds	2
  5083  0039'                    gfx_print@i:	
  5084                           
  5085                           ; 2 bytes @ 0x39
  5086  0039'                    	ds	2
  5087  003B'                    ?_gfx_println:	
  5088  003B'                    gfx_println@s:	
  5089                           ; 1 bytes @ 0x3B
  5090                           
  5091                           
  5092                           ; 2 bytes @ 0x3B
  5093  003B'                    	ds	2
  5094  003D'                    ??_main:	
  5095                           
  5096                           ; 1 bytes @ 0x3D
  5097  003D'                    	ds	6
  5098                           
  5099                           	psect	cstackCOMMON
  5100  0000'                    __pcstackCOMMON:	
  5101  0000'                    ?_PMD_Initialize:	
  5102  0000'                    ?_OSCILLATOR_Initialize:	
  5103                           ; 1 bytes @ 0x0
  5104                           
  5105  0000'                    ?_WDT_Initialize:	
  5106                           ; 1 bytes @ 0x0
  5107                           
  5108  0000'                    ?_I2C1_Initialize:	
  5109                           ; 1 bytes @ 0x0
  5110                           
  5111  0000'                    ?_I2C1_BusCollisionISR:	
  5112                           ; 1 bytes @ 0x0
  5113                           
  5114  0000'                    ??_I2C1_BusCollisionISR:	
  5115                           ; 1 bytes @ 0x0
  5116                           
  5117  0000'                    ?_I2C1_ISR:	
  5118                           ; 1 bytes @ 0x0
  5119                           
  5120  0000'                    ?_I2C1_Stop:	
  5121                           ; 1 bytes @ 0x0
  5122                           
  5123  0000'                    ??_I2C1_Stop:	
  5124                           ; 1 bytes @ 0x0
  5125                           
  5126  0000'                    ?_I2C1_FunctionComplete:	
  5127                           ; 1 bytes @ 0x0
  5128                           
  5129  0000'                    ??_I2C1_FunctionComplete:	
  5130                           ; 1 bytes @ 0x0
  5131                           
  5132  0000'                    ?_display_init:	
  5133                           ; 1 bytes @ 0x0
  5134                           
  5135  0000'                    ?_display_clear:	
  5136                           ; 1 bytes @ 0x0
  5137                           
  5138  0000'                    ?_display_update:	
  5139                           ; 1 bytes @ 0x0
  5140                           
  5141  0000'                    ?_gfx_setTextSize:	
  5142                           ; 1 bytes @ 0x0
  5143                           
  5144  0000'                    ?_gfx_write:	
  5145                           ; 1 bytes @ 0x0
  5146                           
  5147  0000'                    ?_display_stopscroll:	
  5148                           ; 1 bytes @ 0x0
  5149                           
  5150  0000'                    ?_gfx_setRotation:	
  5151                           ; 1 bytes @ 0x0
  5152                           
  5153  0000'                    ?_display_invert:	
  5154                           ; 1 bytes @ 0x0
  5155                           
  5156  0000'                    ?_display_contrast:	
  5157                           ; 1 bytes @ 0x0
  5158                           
  5159  0000'                    ?_PIN_MANAGER_Initialize:	
  5160                           ; 1 bytes @ 0x0
  5161                           
  5162  0000'                    ?_SYSTEM_Initialize:	
  5163                           ; 1 bytes @ 0x0
  5164                           
  5165  0000'                    ?_INTERRUPT_InterruptManager:	
  5166                           ; 1 bytes @ 0x0
  5167                           
  5168  0000'                    ?_main:	
  5169                           ; 1 bytes @ 0x0
  5170                           
  5171                           
  5172                           ; 1 bytes @ 0x0
  5173  0000'                    	ds	1
  5174  0001'                    I2C1_Stop@completion_code:	
  5175                           
  5176                           ; 1 bytes @ 0x1
  5177  0001'                    	ds	1
  5178  0002'                    ??_I2C1_ISR:	
  5179                           
  5180                           ; 1 bytes @ 0x2
  5181  0002'                    	ds	4
  5182  0006'                    ??_INTERRUPT_InterruptManager:	
  5183                           
  5184                           ; 1 bytes @ 0x6
  5185  0006'                    	ds	1
  5186                           
  5187                           	psect	cstackBANK0
  5188  0000'                    __pcstackBANK0:	
  5189  0000'                    ??_PMD_Initialize:	
  5190  0000'                    ??_OSCILLATOR_Initialize:	
  5191                           ; 1 bytes @ 0x0
  5192                           
  5193  0000'                    ??_WDT_Initialize:	
  5194                           ; 1 bytes @ 0x0
  5195                           
  5196  0000'                    ??_I2C1_Initialize:	
  5197                           ; 1 bytes @ 0x0
  5198                           
  5199  0000'                    ??_gfx_setTextSize:	
  5200                           ; 1 bytes @ 0x0
  5201                           
  5202  0000'                    ?_gfx_setTextColor:	
  5203                           ; 1 bytes @ 0x0
  5204                           
  5205  0000'                    ?_gfx_setCursor:	
  5206                           ; 1 bytes @ 0x0
  5207                           
  5208  0000'                    ?_display_scroll:	
  5209                           ; 1 bytes @ 0x0
  5210                           
  5211  0000'                    ??_display_stopscroll:	
  5212                           ; 1 bytes @ 0x0
  5213                           
  5214  0000'                    ??_gfx_setRotation:	
  5215                           ; 1 bytes @ 0x0
  5216                           
  5217  0000'                    ??_display_invert:	
  5218                           ; 1 bytes @ 0x0
  5219                           
  5220  0000'                    ??_display_contrast:	
  5221                           ; 1 bytes @ 0x0
  5222                           
  5223  0000'                    ?_gfx_init:	
  5224                           ; 1 bytes @ 0x0
  5225                           
  5226  0000'                    ?_oled_sendCmd:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229  0000'                    ??_oled_sendCmd:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232  0000'                    ??_PIN_MANAGER_Initialize:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235  0000'                    ?_gfx_rotation_adjust:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238  0000'                    ?_gfx_height:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241  0000'                    ?_gfx_width:	
  5242                           ; 2 bytes @ 0x0
  5243                           
  5244  0000'                    ?_my_abs:	
  5245                           ; 2 bytes @ 0x0
  5246                           
  5247  0000'                    ?_my_strlen:	
  5248                           ; 2 bytes @ 0x0
  5249                           
  5250  0000'                    ?___wmul:	
  5251                           ; 2 bytes @ 0x0
  5252                           
  5253  0000'                    display_scroll@end:	
  5254                           ; 2 bytes @ 0x0
  5255                           
  5256  0000'                    gfx_rotation_adjust@py:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259  0000'                    _oled_sendCmd$0:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262  0000'                    gfx_init@width:	
  5263                           ; 2 bytes @ 0x0
  5264                           
  5265  0000'                    gfx_setCursor@x:	
  5266                           ; 2 bytes @ 0x0
  5267                           
  5268  0000'                    gfx_setTextColor@color:	
  5269                           ; 2 bytes @ 0x0
  5270                           
  5271  0000'                    my_abs@a:	
  5272                           ; 2 bytes @ 0x0
  5273                           
  5274  0000'                    my_strlen@s:	
  5275                           ; 2 bytes @ 0x0
  5276                           
  5277  0000'                    ___wmul@multiplier:	
  5278                           ; 2 bytes @ 0x0
  5279                           
  5280                           
  5281                           ; 2 bytes @ 0x0
  5282  0000'                    	ds	1
  5283  0001'                    ??_SYSTEM_Initialize:	
  5284  0001'                    ??_gfx_rotation_adjust:	
  5285                           ; 1 bytes @ 0x1
  5286                           
  5287  0001'                    display_invert@invert:	
  5288                           ; 1 bytes @ 0x1
  5289                           
  5290  0001'                    display_scroll@dir:	
  5291                           ; 1 bytes @ 0x1
  5292                           
  5293  0001'                    gfx_setRotation@x:	
  5294                           ; 1 bytes @ 0x1
  5295                           
  5296  0001'                    display_stopscroll@cmdbuf:	
  5297                           ; 1 bytes @ 0x1
  5298                           
  5299  0001'                    display_contrast@cmdbuf:	
  5300                           ; 2 bytes @ 0x1
  5301                           
  5302                           
  5303                           ; 3 bytes @ 0x1
  5304  0001'                    	ds	1
  5305  0002'                    ??_gfx_height:	
  5306  0002'                    ??_gfx_width:	
  5307                           ; 1 bytes @ 0x2
  5308                           
  5309  0002'                    ??_gfx_setTextColor:	
  5310                           ; 1 bytes @ 0x2
  5311                           
  5312  0002'                    ??_my_abs:	
  5313                           ; 1 bytes @ 0x2
  5314                           
  5315  0002'                    ??_my_strlen:	
  5316                           ; 1 bytes @ 0x2
  5317                           
  5318  0002'                    ?___awdiv:	
  5319                           ; 1 bytes @ 0x2
  5320                           
  5321  0002'                    _oled_sendCmd$1:	
  5322                           ; 2 bytes @ 0x2
  5323                           
  5324  0002'                    display_scroll@speed:	
  5325                           ; 1 bytes @ 0x2
  5326                           
  5327  0002'                    display_invert@cmdbuf:	
  5328                           ; 1 bytes @ 0x2
  5329                           
  5330  0002'                    gfx_init@height:	
  5331                           ; 2 bytes @ 0x2
  5332                           
  5333  0002'                    gfx_setCursor@y:	
  5334                           ; 2 bytes @ 0x2
  5335                           
  5336  0002'                    _gfx_setTextSize$814:	
  5337                           ; 2 bytes @ 0x2
  5338                           
  5339  0002'                    ___wmul@multiplicand:	
  5340                           ; 2 bytes @ 0x2
  5341                           
  5342  0002'                    ___awdiv@divisor:	
  5343                           ; 2 bytes @ 0x2
  5344                           
  5345                           
  5346                           ; 2 bytes @ 0x2
  5347  0002'                    	ds	1
  5348  0003'                    ??_display_scroll:	
  5349                           
  5350                           ; 1 bytes @ 0x3
  5351  0003'                    	ds	1
  5352  0004'                    ??_display_init:	
  5353  0004'                    ??_gfx_setCursor:	
  5354                           ; 1 bytes @ 0x4
  5355                           
  5356  0004'                    ??_gfx_init:	
  5357                           ; 1 bytes @ 0x4
  5358                           
  5359  0004'                    ??___wmul:	
  5360                           ; 1 bytes @ 0x4
  5361                           
  5362  0004'                    display_contrast@contrast:	
  5363                           ; 1 bytes @ 0x4
  5364                           
  5365  0004'                    gfx_setTextSize@size:	
  5366                           ; 1 bytes @ 0x4
  5367                           
  5368  0004'                    _display_invert$761:	
  5369                           ; 1 bytes @ 0x4
  5370                           
  5371  0004'                    my_strlen@cp:	
  5372                           ; 2 bytes @ 0x4
  5373                           
  5374  0004'                    ___wmul@product:	
  5375                           ; 2 bytes @ 0x4
  5376                           
  5377  0004'                    ___awdiv@dividend:	
  5378                           ; 2 bytes @ 0x4
  5379                           
  5380  0004'                    display_scroll@cmdbuf:	
  5381                           ; 2 bytes @ 0x4
  5382                           
  5383                           
  5384                           ; 9 bytes @ 0x4
  5385  0004'                    	ds	1
  5386  0005'                    display_init@cmdbuf:	
  5387                           
  5388                           ; 26 bytes @ 0x5
  5389  0005'                    	ds	1
  5390  0006'                    ??_display_clear:	
  5391  0006'                    ??_display_update:	
  5392                           ; 1 bytes @ 0x6
  5393                           
  5394  0006'                    ?_display_setPixel:	
  5395                           ; 1 bytes @ 0x6
  5396                           
  5397  0006'                    ?_display_line:	
  5398                           ; 1 bytes @ 0x6
  5399                           
  5400  0006'                    ??___awdiv:	
  5401                           ; 1 bytes @ 0x6
  5402                           
  5403  0006'                    display_setPixel@x:	
  5404                           ; 1 bytes @ 0x6
  5405                           
  5406  0006'                    display_line@x1:	
  5407                           ; 2 bytes @ 0x6
  5408                           
  5409                           
  5410                           ; 2 bytes @ 0x6
  5411  0006'                    	ds	1
  5412  0007'                    ___awdiv@counter:	
  5413  0007'                    gfx_rotation_adjust@y0:	
  5414                           ; 1 bytes @ 0x7
  5415                           
  5416                           
  5417                           ; 2 bytes @ 0x7
  5418  0007'                    	ds	1
  5419  0008'                    ___awdiv@sign:	
  5420  0008'                    display_setPixel@y:	
  5421                           ; 1 bytes @ 0x8
  5422                           
  5423  0008'                    display_line@y1:	
  5424                           ; 2 bytes @ 0x8
  5425                           
  5426                           
  5427                           ; 2 bytes @ 0x8
  5428  0008'                    	ds	1
  5429  0009'                    gfx_rotation_adjust@px:	
  5430  0009'                    ___awdiv@quotient:	
  5431                           ; 1 bytes @ 0x9
  5432                           
  5433                           
  5434                           ; 2 bytes @ 0x9
  5435  0009'                    	ds	1
  5436  000A'                    display_setPixel@color:	
  5437  000A'                    display_line@x2:	
  5438                           ; 2 bytes @ 0xA
  5439                           
  5440                           
  5441                           ; 2 bytes @ 0xA
  5442  000A'                    	ds	2
  5443  000C'                    ??_display_setPixel:	
  5444  000C'                    display_line@y2:	
  5445                           ; 1 bytes @ 0xC
  5446                           
  5447  000C'                    display_update@cmdbuf:	
  5448                           ; 2 bytes @ 0xC
  5449                           
  5450                           
  5451                           ; 5 bytes @ 0xC
  5452  000C'                    	ds	1
  5453  000D'                    display_scroll@start:	
  5454                           
  5455                           ; 1 bytes @ 0xD
  5456  000D'                    	ds	1
  5457  000E'                    display_clear@x:	
  5458  000E'                    display_line@color:	
  5459                           ; 1 bytes @ 0xE
  5460                           
  5461                           
  5462                           ; 2 bytes @ 0xE
  5463  000E'                    	ds	1
  5464  000F'                    display_clear@page:	
  5465                           
  5466                           ; 1 bytes @ 0xF
  5467  000F'                    	ds	1
  5468  0010'                    ??_display_line:	
  5469                           
  5470                           ; 1 bytes @ 0x10
  5471  0010'                    	ds	1
  5472  0011'                    display_update@page:	
  5473                           
  5474                           ; 1 bytes @ 0x11
  5475  0011'                    	ds	5
  5476  0016'                    ?_gfx_drawPixel:	
  5477  0016'                    gfx_drawPixel@x:	
  5478                           ; 1 bytes @ 0x16
  5479                           
  5480                           
  5481                           ; 2 bytes @ 0x16
  5482  0016'                    	ds	2
  5483  0018'                    display_line@pend_779:	
  5484  0018'                    gfx_drawPixel@y:	
  5485                           ; 2 bytes @ 0x18
  5486                           
  5487                           
  5488                           ; 2 bytes @ 0x18
  5489  0018'                    	ds	2
  5490  001A'                    display_line@pstart_778:	
  5491  001A'                    gfx_drawPixel@color:	
  5492                           ; 2 bytes @ 0x1A
  5493                           
  5494                           
  5495                           ; 2 bytes @ 0x1A
  5496  001A'                    	ds	2
  5497  001C'                    ??_gfx_drawPixel:	
  5498  001C'                    display_line@ubit:	
  5499                           ; 1 bytes @ 0x1C
  5500                           
  5501                           
  5502                           ; 1 bytes @ 0x1C
  5503  001C'                    	ds	1
  5504  001D'                    ?_gfx_drawCircle:	
  5505  001D'                    display_line@pstart:	
  5506                           ; 1 bytes @ 0x1D
  5507                           
  5508  001D'                    gfx_drawCircle@x0:	
  5509                           ; 2 bytes @ 0x1D
  5510                           
  5511                           
  5512                           ; 2 bytes @ 0x1D
  5513  001D'                    	ds	2
  5514  001F'                    display_line@pend:	
  5515  001F'                    gfx_drawCircle@y0:	
  5516                           ; 2 bytes @ 0x1F
  5517                           
  5518                           
  5519                           ; 2 bytes @ 0x1F
  5520  001F'                    	ds	2
  5521  0021'                    display_line@lbit:	
  5522  0021'                    gfx_drawCircle@r:	
  5523                           ; 1 bytes @ 0x21
  5524                           
  5525                           
  5526                           ; 2 bytes @ 0x21
  5527  0021'                    	ds	1
  5528  0022'                    display_line@pixmask:	
  5529                           
  5530                           ; 1 bytes @ 0x22
  5531  0022'                    	ds	1
  5532  0023'                    display_line@mask:	
  5533  0023'                    gfx_drawCircle@color:	
  5534                           ; 1 bytes @ 0x23
  5535                           
  5536                           
  5537                           ; 2 bytes @ 0x23
  5538  0023'                    	ds	1
  5539  0024'                    display_line@ptr_781:	
  5540                           
  5541                           ; 2 bytes @ 0x24
  5542  0024'                    	ds	1
  5543  0025'                    ??_gfx_drawCircle:	
  5544                           
  5545                           ; 1 bytes @ 0x25
  5546  0025'                    	ds	1
  5547  0026'                    display_line@ptr:	
  5548                           
  5549                           ; 2 bytes @ 0x26
  5550  0026'                    	ds	2
  5551  0028'                    ?_gfx_hvLine:	
  5552  0028'                    gfx_hvLine@x1:	
  5553                           ; 1 bytes @ 0x28
  5554                           
  5555                           
  5556                           ; 2 bytes @ 0x28
  5557  0028'                    	ds	1
  5558  0029'                    gfx_drawCircle@ddF_x:	
  5559                           
  5560                           ; 2 bytes @ 0x29
  5561  0029'                    	ds	1
  5562  002A'                    gfx_hvLine@y1:	
  5563                           
  5564                           ; 2 bytes @ 0x2A
  5565  002A'                    	ds	1
  5566  002B'                    gfx_drawCircle@ddF_y:	
  5567                           
  5568                           ; 2 bytes @ 0x2B
  5569  002B'                    	ds	1
  5570  002C'                    gfx_hvLine@x2:	
  5571                           
  5572                           ; 2 bytes @ 0x2C
  5573  002C'                    	ds	1
  5574  002D'                    gfx_drawCircle@f:	
  5575                           
  5576                           ; 2 bytes @ 0x2D
  5577  002D'                    	ds	1
  5578  002E'                    gfx_hvLine@y2:	
  5579                           
  5580                           ; 2 bytes @ 0x2E
  5581  002E'                    	ds	1
  5582  002F'                    gfx_drawCircle@x:	
  5583                           
  5584                           ; 2 bytes @ 0x2F
  5585  002F'                    	ds	1
  5586  0030'                    gfx_hvLine@color:	
  5587                           
  5588                           ; 2 bytes @ 0x30
  5589  0030'                    	ds	1
  5590  0031'                    gfx_drawCircle@y:	
  5591                           
  5592                           ; 2 bytes @ 0x31
  5593  0031'                    	ds	1
  5594  0032'                    ??_gfx_hvLine:	
  5595                           
  5596                           ; 1 bytes @ 0x32
  5597  0032'                    	ds	1
  5598  0033'                    gfx_hvLine@t:	
  5599                           
  5600                           ; 2 bytes @ 0x33
  5601  0033'                    	ds	2
  5602  0035'                    ?_gfx_drawLine:	
  5603  0035'                    gfx_drawLine@x0:	
  5604                           ; 1 bytes @ 0x35
  5605                           
  5606                           
  5607                           ; 2 bytes @ 0x35
  5608  0035'                    	ds	2
  5609  0037'                    gfx_drawLine@y0:	
  5610                           
  5611                           ; 2 bytes @ 0x37
  5612  0037'                    	ds	2
  5613  0039'                    gfx_drawLine@x1:	
  5614                           
  5615                           ; 2 bytes @ 0x39
  5616  0039'                    	ds	2
  5617  003B'                    gfx_drawLine@y1:	
  5618                           
  5619                           ; 2 bytes @ 0x3B
  5620  003B'                    	ds	2
  5621  003D'                    gfx_drawLine@color:	
  5622                           
  5623                           ; 2 bytes @ 0x3D
  5624  003D'                    	ds	2
  5625  003F'                    ??_gfx_drawLine:	
  5626                           
  5627                           ; 1 bytes @ 0x3F
  5628  003F'                    	ds	9
  5629  0048'                    ??_gfx_drawRect:	
  5630  0048'                    ??_gfx_fillRect:	
  5631                           ; 1 bytes @ 0x48
  5632                           
  5633  0048'                    ??_gfx_drawTriangle:	
  5634                           ; 1 bytes @ 0x48
  5635                           
  5636                           
  5637                           ; 1 bytes @ 0x48
  5638  0048'                    	ds	3
  5639  004B'                    gfx_fillRect@i:	
  5640                           
  5641                           ; 2 bytes @ 0x4B
  5642  004B'                    	ds	2
  5643  004D'                    gfx_write@ch:	
  5644                           
  5645                           ; 1 bytes @ 0x4D
  5646  004D'                    	ds	1
  5647  004E'                    ??_gfx_println:	
  5648  004E'                    ??_gfx_print:	
  5649                           ; 1 bytes @ 0x4E
  5650                           
  5651                           
  5652                           	psect	maintext
  5653  0000'                    __pmaintext:	
  5654                           ; 1 bytes @ 0x4E
  5655 ;;
  5656 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  5657 ;;
  5658 ;; *************** function _main *****************
  5659 ;; Defined at:
  5660 ;;		line 55 in file "main.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  i               2   19[BANK2 ] int 
  5665 ;;  j               2   17[BANK2 ] int 
  5666 ;;  color           1    4[BANK2 ] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : B1F/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5677 ;;      Locals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5678 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5679 ;;      Totals:         0       0       6      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5680 ;;Total ram usage:       27 bytes
  5681 ;; Hardware stack levels required when called:   12
  5682 ;; This function calls:
  5683 ;;		_SYSTEM_Initialize
  5684 ;;		___awdiv
  5685 ;;		_display_clear
  5686 ;;		_display_contrast
  5687 ;;		_display_init
  5688 ;;		_display_invert
  5689 ;;		_display_scroll
  5690 ;;		_display_stopscroll
  5691 ;;		_display_update
  5692 ;;		_gfx_drawCircle
  5693 ;;		_gfx_drawLine
  5694 ;;		_gfx_drawPixel
  5695 ;;		_gfx_drawRect
  5696 ;;		_gfx_drawTriangle
  5697 ;;		_gfx_fillRect
  5698 ;;		_gfx_height
  5699 ;;		_gfx_println
  5700 ;;		_gfx_setCursor
  5701 ;;		_gfx_setRotation
  5702 ;;		_gfx_setTextColor
  5703 ;;		_gfx_setTextSize
  5704 ;;		_gfx_width
  5705 ;;		_gfx_write
  5706 ;; This function is called by:
  5707 ;;		Startup code after reset
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           
  5712                           ;psect for function _main
  5713  0000'                    _main:	
  5714                           
  5715                           ;main.c: 58: SYSTEM_Initialize();
  5716                           
  5717                           ;incstack = 0
  5718                           ; Regs used in _main: [allreg]
  5719  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  5720                           
  5721                           ;main.c: 63: (INTCONbits.GIE = 1);
  5722  0003' 178B               	bsf	11,7	;volatile
  5723                           
  5724                           ;main.c: 66: (INTCONbits.PEIE = 1);
  5725  0004' 170B               	bsf	11,6	;volatile
  5726                           
  5727                           ;main.c: 72: display_init();
  5728  0005' 3180' 2000' 3180'  	fcall	_display_init
  5729  0008'                    l4150:	
  5730                           ;main.c: 73: for(;;){
  5731                           
  5732                           
  5733                           ;main.c: 76: display_clear();
  5734  0008' 3180' 2000' 3180'  	fcall	_display_clear
  5735                           
  5736                           ;main.c: 77: display_update();
  5737  000B' 3180' 2000' 3180'  	fcall	_display_update
  5738                           
  5739                           ;main.c: 81: gfx_drawPixel(40, 40, 1);
  5740  000E' 3028               	movlw	40
  5741  000F' 0020               	movlb	0	; select bank0
  5742  0010' 0096'              	movwf	gfx_drawPixel@x
  5743  0011' 3000               	movlw	0
  5744  0012' 0097'              	movwf	gfx_drawPixel@x+1
  5745  0013' 3028               	movlw	40
  5746  0014' 0098'              	movwf	gfx_drawPixel@y
  5747  0015' 3000               	movlw	0
  5748  0016' 0099'              	movwf	gfx_drawPixel@y+1
  5749  0017' 3001               	movlw	1
  5750  0018' 009A'              	movwf	gfx_drawPixel@color
  5751  0019' 3000               	movlw	0
  5752  001A' 009B'              	movwf	gfx_drawPixel@color+1
  5753  001B' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
  5754                           
  5755                           ;main.c: 82: display_update();
  5756  001E' 3180' 2000' 3180'  	fcall	_display_update
  5757                           
  5758                           ;main.c: 84: _delay((unsigned long)(((1000))*(16000000/4000.0)));
  5759  0021' 3015               	movlw	21
  5760  0022' 0021               	movlb	1	; select bank1
  5761  0023' 0081'              	movwf	(??_main^(0+128)+1)
  5762  0024' 304B               	movlw	75
  5763  0025' 0080'              	movwf	??_main^(0+128)
  5764  0026' 30BE               	movlw	190
  5765  0027'                    u4387:	
  5766  0027' 0B89               	decfsz	9,f
  5767  0028' 2800'              	goto	u4387
  5768  0029' 0B80'              	decfsz	??_main^(0+128),f
  5769  002A' 2800'              	goto	u4387
  5770  002B' 0B81'              	decfsz	(??_main^(0+128)+1),f
  5771  002C' 2800'              	goto	u4387
  5772  002D' 0000               	nop
  5773                           
  5774                           ;main.c: 85: display_clear();
  5775  002E' 3180' 2000' 3180'  	fcall	_display_clear
  5776                           
  5777                           ;main.c: 86: display_update();
  5778  0031' 3180' 2000' 3180'  	fcall	_display_update
  5779                           
  5780                           ;main.c: 90: int16_t i = 0;
  5781  0034' 0022               	movlb	2	; select bank2
  5782  0035' 0180'              	clrf	main@i^(0+256)
  5783  0036' 0180'              	clrf	(main@i+1)^(0+256)
  5784                           
  5785                           ;main.c: 91: for( i = 0 ; i < gfx_width(); i+=4) {
  5786  0037' 0180'              	clrf	main@i^(0+256)
  5787  0038' 0180'              	clrf	(main@i+1)^(0+256)
  5788  0039'                    l4174:	
  5789  0039' 3180' 2000' 3180'  	fcall	_gfx_width
  5790  003C' 0022               	movlb	2	; select bank2
  5791  003D' 0800'              	movf	(main@i+1)^(0+256),w
  5792  003E' 3A80               	xorlw	128
  5793  003F' 0021               	movlb	1	; select bank1
  5794  0040' 0080'              	movwf	??_main^(0+128)
  5795  0041' 0020               	movlb	0	; select bank0
  5796  0042' 0801'              	movf	?_gfx_width+1,w
  5797  0043' 3A80               	xorlw	128
  5798  0044' 0021               	movlb	1	; select bank1
  5799  0045' 0200'              	subwf	??_main^(0+128),w
  5800  0046' 1D03               	skipz
  5801  0047' 2800'              	goto	u4185
  5802  0048' 0020               	movlb	0	; select bank0
  5803  0049' 0800'              	movf	?_gfx_width,w
  5804  004A' 0022               	movlb	2	; select bank2
  5805  004B' 0200'              	subwf	main@i^(0+256),w
  5806  004C'                    u4185:	
  5807  004C' 1803               	btfsc	3,0
  5808  004D' 2800'              	goto	l4176
  5809                           
  5810                           ;main.c: 92: gfx_drawLine(0, 0, i, gfx_height()-1, 1);
  5811  004E' 3000               	movlw	0
  5812  004F' 0020               	movlb	0	; select bank0
  5813  0050' 00B5'              	movwf	gfx_drawLine@x0
  5814  0051' 00B6'              	movwf	gfx_drawLine@x0+1
  5815  0052' 3000               	movlw	0
  5816  0053' 00B7'              	movwf	gfx_drawLine@y0
  5817  0054' 00B8'              	movwf	gfx_drawLine@y0+1
  5818  0055' 0022               	movlb	2	; select bank2
  5819  0056' 0800'              	movf	(main@i+1)^(0+256),w
  5820  0057' 0020               	movlb	0	; select bank0
  5821  0058' 00BA'              	movwf	gfx_drawLine@x1+1
  5822  0059' 0022               	movlb	2	; select bank2
  5823  005A' 0800'              	movf	main@i^(0+256),w
  5824  005B' 0020               	movlb	0	; select bank0
  5825  005C' 00B9'              	movwf	gfx_drawLine@x1
  5826  005D' 3180' 2000' 3180'  	fcall	_gfx_height
  5827  0060' 0020               	movlb	0	; select bank0
  5828  0061' 0800'              	movf	?_gfx_height,w
  5829  0062' 3EFF               	addlw	255
  5830  0063' 00BB'              	movwf	gfx_drawLine@y1
  5831  0064' 30FF               	movlw	255
  5832  0065' 3D01'              	addwfc	?_gfx_height+1,w
  5833  0066' 00BC'              	movwf	gfx_drawLine@y1+1
  5834  0067' 3001               	movlw	1
  5835  0068' 00BD'              	movwf	gfx_drawLine@color
  5836  0069' 3000               	movlw	0
  5837  006A' 00BE'              	movwf	gfx_drawLine@color+1
  5838  006B' 3180' 2000' 3180'  	fcall	_gfx_drawLine
  5839                           
  5840                           ;main.c: 93: display_update();
  5841  006E' 3180' 2000' 3180'  	fcall	_display_update
  5842  0071' 3004               	movlw	4
  5843  0072' 0022               	movlb	2	; select bank2
  5844  0073' 0780'              	addwf	main@i^(0+256),f
  5845  0074' 3000               	movlw	0
  5846  0075' 3D80'              	addwfc	(main@i+1)^(0+256),f
  5847  0076' 2800'              	goto	l4174
  5848  0077'                    l4176:	
  5849                           
  5850                           ;main.c: 94: }
  5851                           ;main.c: 95: for( i = 0 ; i < gfx_height() ; i += 4 ){
  5852  0077' 0022               	movlb	2	; select bank2
  5853  0078' 0180'              	clrf	main@i^(0+256)
  5854  0079' 0180'              	clrf	(main@i+1)^(0+256)
  5855  007A'                    l4184:	
  5856  007A' 3180' 2000' 3180'  	fcall	_gfx_height
  5857  007D' 0022               	movlb	2	; select bank2
  5858  007E' 0800'              	movf	(main@i+1)^(0+256),w
  5859  007F' 3A80               	xorlw	128
  5860  0080' 0021               	movlb	1	; select bank1
  5861  0081' 0080'              	movwf	??_main^(0+128)
  5862  0082' 0020               	movlb	0	; select bank0
  5863  0083' 0801'              	movf	?_gfx_height+1,w
  5864  0084' 3A80               	xorlw	128
  5865  0085' 0021               	movlb	1	; select bank1
  5866  0086' 0200'              	subwf	??_main^(0+128),w
  5867  0087' 1D03               	skipz
  5868  0088' 2800'              	goto	u4195
  5869  0089' 0020               	movlb	0	; select bank0
  5870  008A' 0800'              	movf	?_gfx_height,w
  5871  008B' 0022               	movlb	2	; select bank2
  5872  008C' 0200'              	subwf	main@i^(0+256),w
  5873  008D'                    u4195:	
  5874  008D' 1803               	btfsc	3,0
  5875  008E' 2800'              	goto	l4186
  5876                           
  5877                           ;main.c: 96: gfx_drawLine(0, 0, gfx_width()-1, i, 1);
  5878  008F' 3000               	movlw	0
  5879  0090' 0020               	movlb	0	; select bank0
  5880  0091' 00B5'              	movwf	gfx_drawLine@x0
  5881  0092' 00B6'              	movwf	gfx_drawLine@x0+1
  5882  0093' 3000               	movlw	0
  5883  0094' 00B7'              	movwf	gfx_drawLine@y0
  5884  0095' 00B8'              	movwf	gfx_drawLine@y0+1
  5885  0096' 3180' 2000' 3180'  	fcall	_gfx_width
  5886  0099' 0020               	movlb	0	; select bank0
  5887  009A' 0800'              	movf	?_gfx_width,w
  5888  009B' 3EFF               	addlw	255
  5889  009C' 00B9'              	movwf	gfx_drawLine@x1
  5890  009D' 30FF               	movlw	255
  5891  009E' 3D01'              	addwfc	?_gfx_width+1,w
  5892  009F' 00BA'              	movwf	gfx_drawLine@x1+1
  5893  00A0' 0022               	movlb	2	; select bank2
  5894  00A1' 0800'              	movf	(main@i+1)^(0+256),w
  5895  00A2' 0020               	movlb	0	; select bank0
  5896  00A3' 00BC'              	movwf	gfx_drawLine@y1+1
  5897  00A4' 0022               	movlb	2	; select bank2
  5898  00A5' 0800'              	movf	main@i^(0+256),w
  5899  00A6' 0020               	movlb	0	; select bank0
  5900  00A7' 00BB'              	movwf	gfx_drawLine@y1
  5901  00A8' 3001               	movlw	1
  5902  00A9' 00BD'              	movwf	gfx_drawLine@color
  5903  00AA' 3000               	movlw	0
  5904  00AB' 00BE'              	movwf	gfx_drawLine@color+1
  5905  00AC' 3180' 2000' 3180'  	fcall	_gfx_drawLine
  5906                           
  5907                           ;main.c: 97: display_update();
  5908  00AF' 3180' 2000' 3180'  	fcall	_display_update
  5909  00B2' 3004               	movlw	4
  5910  00B3' 0022               	movlb	2	; select bank2
  5911  00B4' 0780'              	addwf	main@i^(0+256),f
  5912  00B5' 3000               	movlw	0
  5913  00B6' 3D80'              	addwfc	(main@i+1)^(0+256),f
  5914  00B7' 2800'              	goto	l4184
  5915  00B8'                    l4186:	
  5916                           
  5917                           ;main.c: 98: }
  5918                           ;main.c: 100: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  5919  00B8' 303D               	movlw	61
  5920  00B9' 0021               	movlb	1	; select bank1
  5921  00BA' 0081'              	movwf	(??_main^(0+128)+1)
  5922  00BB' 30E1               	movlw	225
  5923  00BC' 0080'              	movwf	??_main^(0+128)
  5924  00BD' 303F               	movlw	63
  5925  00BE'                    u4397:	
  5926  00BE' 0B89               	decfsz	9,f
  5927  00BF' 2800'              	goto	u4397
  5928  00C0' 0B80'              	decfsz	??_main^(0+128),f
  5929  00C1' 2800'              	goto	u4397
  5930  00C2' 0B81'              	decfsz	(??_main^(0+128)+1),f
  5931  00C3' 2800'              	goto	u4397
  5932  00C4' 3200               	nop2
  5933                           
  5934                           ;main.c: 101: display_clear();
  5935  00C5' 3180' 2000' 3180'  	fcall	_display_clear
  5936                           
  5937                           ;main.c: 102: display_update();
  5938  00C8' 3180' 2000' 3180'  	fcall	_display_update
  5939                           
  5940                           ;main.c: 105: gfx_setTextSize(1);
  5941  00CB' 3001               	movlw	1
  5942  00CC' 3180' 2000' 3180'  	fcall	_gfx_setTextSize
  5943                           
  5944                           ;main.c: 106: gfx_setTextColor(1);
  5945  00CF' 3001               	movlw	1
  5946  00D0' 0020               	movlb	0	; select bank0
  5947  00D1' 0080'              	movwf	gfx_setTextColor@color
  5948  00D2' 3000               	movlw	0
  5949  00D3' 0081'              	movwf	gfx_setTextColor@color+1
  5950  00D4' 3180' 2000' 3180'  	fcall	_gfx_setTextColor
  5951                           
  5952                           ;main.c: 107: gfx_setCursor(0,0);
  5953  00D7' 3000               	movlw	0
  5954  00D8' 0020               	movlb	0	; select bank0
  5955  00D9' 0080'              	movwf	gfx_setCursor@x
  5956  00DA' 0081'              	movwf	gfx_setCursor@x+1
  5957  00DB' 3000               	movlw	0
  5958  00DC' 0082'              	movwf	gfx_setCursor@y
  5959  00DD' 0083'              	movwf	gfx_setCursor@y+1
  5960  00DE' 3180' 2000' 3180'  	fcall	_gfx_setCursor
  5961                           
  5962                           ;main.c: 110: for( i = 0 ; i < 168 ; i++){
  5963  00E1' 0022               	movlb	2	; select bank2
  5964  00E2' 0180'              	clrf	main@i^(0+256)
  5965  00E3' 0180'              	clrf	(main@i+1)^(0+256)
  5966  00E4' 0800'              	movf	(main@i+1)^(0+256),w
  5967  00E5' 3A80               	xorlw	128
  5968  00E6' 0021               	movlb	1	; select bank1
  5969  00E7' 0080'              	movwf	??_main^(0+128)
  5970  00E8' 3080               	movlw	128
  5971  00E9' 0200'              	subwf	??_main^(0+128),w
  5972  00EA' 1D03               	skipz
  5973  00EB' 2800'              	goto	u4205
  5974  00EC' 30A8               	movlw	168
  5975  00ED' 0022               	movlb	2	; select bank2
  5976  00EE' 0200'              	subwf	main@i^(0+256),w
  5977  00EF'                    u4205:	
  5978  00EF' 1803               	btfsc	3,0
  5979  00F0' 2800'              	goto	l4214
  5980  00F1'                    l4204:	
  5981                           
  5982                           ;main.c: 111: if( i == '\n' )
  5983  00F1' 300A               	movlw	10
  5984  00F2' 0022               	movlb	2	; select bank2
  5985  00F3' 0600'              	xorwf	main@i^(0+256),w
  5986  00F4' 0400'              	iorwf	(main@i+1)^(0+256),w
  5987  00F5' 1903               	btfsc	3,2
  5988  00F6' 2800'              	goto	l4210
  5989                           
  5990                           ;main.c: 113: gfx_write(i);
  5991                           
  5992                           ;main.c: 112: continue;
  5993  00F7' 0800'              	movf	main@i^(0+256),w
  5994  00F8' 3180' 2000' 3180'  	fcall	_gfx_write
  5995  00FB'                    l4210:	
  5996  00FB' 3001               	movlw	1
  5997  00FC' 0022               	movlb	2	; select bank2
  5998  00FD' 0780'              	addwf	main@i^(0+256),f
  5999  00FE' 3000               	movlw	0
  6000  00FF' 3D80'              	addwfc	(main@i+1)^(0+256),f
  6001  0100' 0800'              	movf	(main@i+1)^(0+256),w
  6002  0101' 3A80               	xorlw	128
  6003  0102' 0021               	movlb	1	; select bank1
  6004  0103' 0080'              	movwf	??_main^(0+128)
  6005  0104' 3080               	movlw	128
  6006  0105' 0200'              	subwf	??_main^(0+128),w
  6007  0106' 1D03               	skipz
  6008  0107' 2800'              	goto	u4225
  6009  0108' 30A8               	movlw	168
  6010  0109' 0022               	movlb	2	; select bank2
  6011  010A' 0200'              	subwf	main@i^(0+256),w
  6012  010B'                    u4225:	
  6013  010B' 1C03               	skipc
  6014  010C' 2800'              	goto	l4204
  6015  010D'                    l4214:	
  6016                           
  6017                           ;main.c: 114: }
  6018                           ;main.c: 115: display_update();
  6019  010D' 3180' 2000' 3180'  	fcall	_display_update
  6020                           
  6021                           ;main.c: 117: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  6022  0110' 303D               	movlw	61
  6023  0111' 0021               	movlb	1	; select bank1
  6024  0112' 0081'              	movwf	(??_main^(0+128)+1)
  6025  0113' 30E1               	movlw	225
  6026  0114' 0080'              	movwf	??_main^(0+128)
  6027  0115' 303F               	movlw	63
  6028  0116'                    u4407:	
  6029  0116' 0B89               	decfsz	9,f
  6030  0117' 2800'              	goto	u4407
  6031  0118' 0B80'              	decfsz	??_main^(0+128),f
  6032  0119' 2800'              	goto	u4407
  6033  011A' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6034  011B' 2800'              	goto	u4407
  6035  011C' 3200               	nop2
  6036                           
  6037                           ;main.c: 118: display_clear();
  6038  011D' 3180' 2000' 3180'  	fcall	_display_clear
  6039                           
  6040                           ;main.c: 119: display_update();
  6041  0120' 3180' 2000' 3180'  	fcall	_display_update
  6042                           
  6043                           ;main.c: 122: gfx_setCursor( 0, 0 );
  6044  0123' 3000               	movlw	0
  6045  0124' 0020               	movlb	0	; select bank0
  6046  0125' 0080'              	movwf	gfx_setCursor@x
  6047  0126' 0081'              	movwf	gfx_setCursor@x+1
  6048  0127' 3000               	movlw	0
  6049  0128' 0082'              	movwf	gfx_setCursor@y
  6050  0129' 0083'              	movwf	gfx_setCursor@y+1
  6051  012A' 3180' 2000' 3180'  	fcall	_gfx_setCursor
  6052                           
  6053                           ;main.c: 125: gfx_setTextSize(2);
  6054  012D' 3002               	movlw	2
  6055  012E' 3180' 2000' 3180'  	fcall	_gfx_setTextSize
  6056                           
  6057                           ;main.c: 126: gfx_write( '8' );
  6058  0131' 3038               	movlw	56
  6059  0132' 3180' 2000' 3180'  	fcall	_gfx_write
  6060                           
  6061                           ;main.c: 127: gfx_setTextSize(3);
  6062  0135' 3003               	movlw	3
  6063  0136' 3180' 2000' 3180'  	fcall	_gfx_setTextSize
  6064                           
  6065                           ;main.c: 128: gfx_write( '8' );
  6066  0139' 3038               	movlw	56
  6067  013A' 3180' 2000' 3180'  	fcall	_gfx_write
  6068                           
  6069                           ;main.c: 129: gfx_setTextSize(4);
  6070  013D' 3004               	movlw	4
  6071  013E' 3180' 2000' 3180'  	fcall	_gfx_setTextSize
  6072                           
  6073                           ;main.c: 130: gfx_write( '8' );
  6074  0141' 3038               	movlw	56
  6075  0142' 3180' 2000' 3180'  	fcall	_gfx_write
  6076                           
  6077                           ;main.c: 131: display_update();
  6078  0145' 3180' 2000' 3180'  	fcall	_display_update
  6079                           
  6080                           ;main.c: 133: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  6081  0148' 303D               	movlw	61
  6082  0149' 0021               	movlb	1	; select bank1
  6083  014A' 0081'              	movwf	(??_main^(0+128)+1)
  6084  014B' 30E1               	movlw	225
  6085  014C' 0080'              	movwf	??_main^(0+128)
  6086  014D' 303F               	movlw	63
  6087  014E'                    u4417:	
  6088  014E' 0B89               	decfsz	9,f
  6089  014F' 2800'              	goto	u4417
  6090  0150' 0B80'              	decfsz	??_main^(0+128),f
  6091  0151' 2800'              	goto	u4417
  6092  0152' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6093  0153' 2800'              	goto	u4417
  6094  0154' 3200               	nop2
  6095                           
  6096                           ;main.c: 134: display_clear();
  6097  0155' 3180' 2000' 3180'  	fcall	_display_clear
  6098                           
  6099                           ;main.c: 135: display_update();
  6100  0158' 3180' 2000' 3180'  	fcall	_display_update
  6101                           
  6102                           ;main.c: 138: gfx_setTextSize(1);
  6103  015B' 3001               	movlw	1
  6104  015C' 3180' 2000' 3180'  	fcall	_gfx_setTextSize
  6105                           
  6106                           ;main.c: 139: gfx_setTextColor(1);
  6107  015F' 3001               	movlw	1
  6108  0160' 0020               	movlb	0	; select bank0
  6109  0161' 0080'              	movwf	gfx_setTextColor@color
  6110  0162' 3000               	movlw	0
  6111  0163' 0081'              	movwf	gfx_setTextColor@color+1
  6112  0164' 3180' 2000' 3180'  	fcall	_gfx_setTextColor
  6113                           
  6114                           ;main.c: 140: gfx_setCursor(0,0);
  6115  0167' 3000               	movlw	0
  6116  0168' 0020               	movlb	0	; select bank0
  6117  0169' 0080'              	movwf	gfx_setCursor@x
  6118  016A' 0081'              	movwf	gfx_setCursor@x+1
  6119  016B' 3000               	movlw	0
  6120  016C' 0082'              	movwf	gfx_setCursor@y
  6121  016D' 0083'              	movwf	gfx_setCursor@y+1
  6122  016E' 3180' 2000' 3180'  	fcall	_gfx_setCursor
  6123                           
  6124                           ;main.c: 141: gfx_println("test line 1 ...");
  6125  0171' 3000'              	movlw	low (STR_1| (0+32768))
  6126  0172' 0021               	movlb	1	; select bank1
  6127  0173' 0080'              	movwf	gfx_println@s^(0+128)
  6128  0174' 3000'              	movlw	high (STR_1| (0+32768))
  6129  0175' 0081'              	movwf	(gfx_println@s^(0+128)+1)
  6130  0176' 3180' 2000' 3180'  	fcall	_gfx_println
  6131                           
  6132                           ;main.c: 142: gfx_println("2nd line ...");
  6133  0179' 3000'              	movlw	low (STR_2| (0+32768))
  6134  017A' 0021               	movlb	1	; select bank1
  6135  017B' 0080'              	movwf	gfx_println@s^(0+128)
  6136  017C' 3000'              	movlw	high (STR_2| (0+32768))
  6137  017D' 0081'              	movwf	(gfx_println@s^(0+128)+1)
  6138  017E' 3180' 2000' 3180'  	fcall	_gfx_println
  6139                           
  6140                           ;main.c: 143: display_update();
  6141  0181' 3180' 2000' 3180'  	fcall	_display_update
  6142                           
  6143                           ;main.c: 145: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  6144  0184' 303D               	movlw	61
  6145  0185' 0021               	movlb	1	; select bank1
  6146  0186' 0081'              	movwf	(??_main^(0+128)+1)
  6147  0187' 30E1               	movlw	225
  6148  0188' 0080'              	movwf	??_main^(0+128)
  6149  0189' 303F               	movlw	63
  6150  018A'                    u4427:	
  6151  018A' 0B89               	decfsz	9,f
  6152  018B' 2800'              	goto	u4427
  6153  018C' 0B80'              	decfsz	??_main^(0+128),f
  6154  018D' 2800'              	goto	u4427
  6155  018E' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6156  018F' 2800'              	goto	u4427
  6157  0190' 3200               	nop2
  6158                           
  6159                           ;main.c: 146: display_clear();
  6160  0191' 3180' 2000' 3180'  	fcall	_display_clear
  6161                           
  6162                           ;main.c: 147: display_update();
  6163  0194' 3180' 2000' 3180'  	fcall	_display_update
  6164                           
  6165                           ;main.c: 151: gfx_setTextSize(1);
  6166  0197' 3001               	movlw	1
  6167  0198' 3180' 2000' 3180'  	fcall	_gfx_setTextSize
  6168                           
  6169                           ;main.c: 152: gfx_setTextColor(1);
  6170  019B' 3001               	movlw	1
  6171  019C' 0020               	movlb	0	; select bank0
  6172  019D' 0080'              	movwf	gfx_setTextColor@color
  6173  019E' 3000               	movlw	0
  6174  019F' 0081'              	movwf	gfx_setTextColor@color+1
  6175  01A0' 3180' 2000' 3180'  	fcall	_gfx_setTextColor
  6176                           
  6177                           ;main.c: 153: gfx_setCursor(0,0);
  6178  01A3' 3000               	movlw	0
  6179  01A4' 0020               	movlb	0	; select bank0
  6180  01A5' 0080'              	movwf	gfx_setCursor@x
  6181  01A6' 0081'              	movwf	gfx_setCursor@x+1
  6182  01A7' 3000               	movlw	0
  6183  01A8' 0082'              	movwf	gfx_setCursor@y
  6184  01A9' 0083'              	movwf	gfx_setCursor@y+1
  6185  01AA' 3180' 2000' 3180'  	fcall	_gfx_setCursor
  6186                           
  6187                           ;main.c: 155: for( i = 1 ; i < 16 ; i++ ){
  6188  01AD' 3001               	movlw	1
  6189  01AE' 0022               	movlb	2	; select bank2
  6190  01AF' 0080'              	movwf	main@i^(0+256)
  6191  01B0' 3000               	movlw	0
  6192  01B1' 0081'              	movwf	(main@i^(0+256)+1)
  6193  01B2' 0800'              	movf	(main@i+1)^(0+256),w
  6194  01B3' 3A80               	xorlw	128
  6195  01B4' 0021               	movlb	1	; select bank1
  6196  01B5' 0080'              	movwf	??_main^(0+128)
  6197  01B6' 3080               	movlw	128
  6198  01B7' 0200'              	subwf	??_main^(0+128),w
  6199  01B8' 1D03               	skipz
  6200  01B9' 2800'              	goto	u4235
  6201  01BA' 3010               	movlw	16
  6202  01BB' 0022               	movlb	2	; select bank2
  6203  01BC' 0200'              	subwf	main@i^(0+256),w
  6204  01BD'                    u4235:	
  6205  01BD' 1803               	btfsc	3,0
  6206  01BE' 2800'              	goto	l4280
  6207  01BF'                    l4274:	
  6208                           
  6209                           ;main.c: 156: gfx_println("scroll");
  6210  01BF' 3000'              	movlw	low (STR_3| (0+32768))
  6211  01C0' 0021               	movlb	1	; select bank1
  6212  01C1' 0080'              	movwf	gfx_println@s^(0+128)
  6213  01C2' 3000'              	movlw	high (STR_3| (0+32768))
  6214  01C3' 0081'              	movwf	(gfx_println@s^(0+128)+1)
  6215  01C4' 3180' 2000' 3180'  	fcall	_gfx_println
  6216  01C7' 3001               	movlw	1
  6217  01C8' 0022               	movlb	2	; select bank2
  6218  01C9' 0780'              	addwf	main@i^(0+256),f
  6219  01CA' 3000               	movlw	0
  6220  01CB' 3D80'              	addwfc	(main@i+1)^(0+256),f
  6221  01CC' 0800'              	movf	(main@i+1)^(0+256),w
  6222  01CD' 3A80               	xorlw	128
  6223  01CE' 0021               	movlb	1	; select bank1
  6224  01CF' 0080'              	movwf	??_main^(0+128)
  6225  01D0' 3080               	movlw	128
  6226  01D1' 0200'              	subwf	??_main^(0+128),w
  6227  01D2' 1D03               	skipz
  6228  01D3' 2800'              	goto	u4245
  6229  01D4' 3010               	movlw	16
  6230  01D5' 0022               	movlb	2	; select bank2
  6231  01D6' 0200'              	subwf	main@i^(0+256),w
  6232  01D7'                    u4245:	
  6233  01D7' 1C03               	skipc
  6234  01D8' 2800'              	goto	l4274
  6235  01D9'                    l4280:	
  6236                           
  6237                           ;main.c: 158: }
  6238                           ;main.c: 159: display_update();
  6239  01D9' 3180' 2000' 3180'  	fcall	_display_update
  6240                           
  6241                           ;main.c: 163: display_scroll(SCROLL_PAGE_0,SCROLL_PAGE_7,SCROLL_RIGHT,SCROLL_SPEED_7);
  6242  01DC' 3007               	movlw	7
  6243  01DD' 0021               	movlb	1	; select bank1
  6244  01DE' 0080'              	movwf	??_main^(0+128)
  6245  01DF' 0800'              	movf	??_main^(0+128),w
  6246  01E0' 0020               	movlb	0	; select bank0
  6247  01E1' 0080'              	movwf	display_scroll@end
  6248  01E2' 3026               	movlw	38
  6249  01E3' 0021               	movlb	1	; select bank1
  6250  01E4' 0080'              	movwf	(??_main+1)^(0+128)
  6251  01E5' 0800'              	movf	(??_main+1)^(0+128),w
  6252  01E6' 0020               	movlb	0	; select bank0
  6253  01E7' 0081'              	movwf	display_scroll@dir
  6254  01E8' 3007               	movlw	7
  6255  01E9' 0021               	movlb	1	; select bank1
  6256  01EA' 0080'              	movwf	(??_main+2)^(0+128)
  6257  01EB' 0800'              	movf	(??_main+2)^(0+128),w
  6258  01EC' 0020               	movlb	0	; select bank0
  6259  01ED' 0082'              	movwf	display_scroll@speed
  6260  01EE' 3000               	movlw	0
  6261  01EF' 3180' 2000' 3180'  	fcall	_display_scroll
  6262                           
  6263                           ;main.c: 164: _delay((unsigned long)(((2000))*(16000000/4000.0)));
  6264  01F2' 3029               	movlw	41
  6265  01F3' 0021               	movlb	1	; select bank1
  6266  01F4' 0081'              	movwf	(??_main^(0+128)+1)
  6267  01F5' 3096               	movlw	150
  6268  01F6' 0080'              	movwf	??_main^(0+128)
  6269  01F7' 307F               	movlw	127
  6270  01F8'                    u4437:	
  6271  01F8' 0B89               	decfsz	9,f
  6272  01F9' 2800'              	goto	u4437
  6273  01FA' 0B80'              	decfsz	??_main^(0+128),f
  6274  01FB' 2800'              	goto	u4437
  6275  01FC' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6276  01FD' 2800'              	goto	u4437
  6277                           
  6278                           ;main.c: 165: display_stopscroll();
  6279  01FE' 3180' 2000' 3180'  	fcall	_display_stopscroll
  6280                           
  6281                           ;main.c: 166: display_scroll(SCROLL_PAGE_2,SCROLL_PAGE_4,SCROLL_LEFT,SCROLL_SPEED_3);
  6282  0201' 3004               	movlw	4
  6283  0202' 0021               	movlb	1	; select bank1
  6284  0203' 0080'              	movwf	??_main^(0+128)
  6285  0204' 0800'              	movf	??_main^(0+128),w
  6286  0205' 0020               	movlb	0	; select bank0
  6287  0206' 0080'              	movwf	display_scroll@end
  6288  0207' 302A               	movlw	42
  6289  0208' 0021               	movlb	1	; select bank1
  6290  0209' 0080'              	movwf	(??_main+1)^(0+128)
  6291  020A' 0800'              	movf	(??_main+1)^(0+128),w
  6292  020B' 0020               	movlb	0	; select bank0
  6293  020C' 0081'              	movwf	display_scroll@dir
  6294  020D' 3006               	movlw	6
  6295  020E' 0021               	movlb	1	; select bank1
  6296  020F' 0080'              	movwf	(??_main+2)^(0+128)
  6297  0210' 0800'              	movf	(??_main+2)^(0+128),w
  6298  0211' 0020               	movlb	0	; select bank0
  6299  0212' 0082'              	movwf	display_scroll@speed
  6300  0213' 3002               	movlw	2
  6301  0214' 3180' 2000' 3180'  	fcall	_display_scroll
  6302                           
  6303                           ;main.c: 167: _delay((unsigned long)(((2000))*(16000000/4000.0)));
  6304  0217' 3029               	movlw	41
  6305  0218' 0021               	movlb	1	; select bank1
  6306  0219' 0081'              	movwf	(??_main^(0+128)+1)
  6307  021A' 3096               	movlw	150
  6308  021B' 0080'              	movwf	??_main^(0+128)
  6309  021C' 307F               	movlw	127
  6310  021D'                    u4447:	
  6311  021D' 0B89               	decfsz	9,f
  6312  021E' 2800'              	goto	u4447
  6313  021F' 0B80'              	decfsz	??_main^(0+128),f
  6314  0220' 2800'              	goto	u4447
  6315  0221' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6316  0222' 2800'              	goto	u4447
  6317                           
  6318                           ;main.c: 168: display_stopscroll();
  6319  0223' 3180' 2000' 3180'  	fcall	_display_stopscroll
  6320                           
  6321                           ;main.c: 172: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  6322  0226' 303D               	movlw	61
  6323  0227' 0021               	movlb	1	; select bank1
  6324  0228' 0081'              	movwf	(??_main^(0+128)+1)
  6325  0229' 30E1               	movlw	225
  6326  022A' 0080'              	movwf	??_main^(0+128)
  6327  022B' 303F               	movlw	63
  6328  022C'                    u4457:	
  6329  022C' 0B89               	decfsz	9,f
  6330  022D' 2800'              	goto	u4457
  6331  022E' 0B80'              	decfsz	??_main^(0+128),f
  6332  022F' 2800'              	goto	u4457
  6333  0230' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6334  0231' 2800'              	goto	u4457
  6335  0232' 3200               	nop2
  6336                           
  6337                           ;main.c: 173: display_clear();
  6338  0233' 3180' 2000' 3180'  	fcall	_display_clear
  6339                           
  6340                           ;main.c: 174: display_update();
  6341  0236' 3180' 2000' 3180'  	fcall	_display_update
  6342                           
  6343                           ;main.c: 178: for( i = 0 ; i < gfx_height()/2 ; i += 2 ){
  6344  0239' 0022               	movlb	2	; select bank2
  6345  023A' 0180'              	clrf	main@i^(0+256)
  6346  023B' 0180'              	clrf	(main@i+1)^(0+256)
  6347  023C'                    l4304:	
  6348  023C' 3002               	movlw	2
  6349  023D' 0020               	movlb	0	; select bank0
  6350  023E' 0082'              	movwf	___awdiv@divisor
  6351  023F' 3000               	movlw	0
  6352  0240' 0083'              	movwf	___awdiv@divisor+1
  6353  0241' 3180' 2000' 3180'  	fcall	_gfx_height
  6354  0244' 0020               	movlb	0	; select bank0
  6355  0245' 0801'              	movf	?_gfx_height+1,w
  6356  0246' 0085'              	movwf	___awdiv@dividend+1
  6357  0247' 0800'              	movf	?_gfx_height,w
  6358  0248' 0084'              	movwf	___awdiv@dividend
  6359  0249' 3180' 2000' 3180'  	fcall	___awdiv
  6360  024C' 0022               	movlb	2	; select bank2
  6361  024D' 0800'              	movf	(main@i+1)^(0+256),w
  6362  024E' 3A80               	xorlw	128
  6363  024F' 0021               	movlb	1	; select bank1
  6364  0250' 0080'              	movwf	??_main^(0+128)
  6365  0251' 0020               	movlb	0	; select bank0
  6366  0252' 0803'              	movf	?___awdiv+1,w
  6367  0253' 3A80               	xorlw	128
  6368  0254' 0021               	movlb	1	; select bank1
  6369  0255' 0200'              	subwf	??_main^(0+128),w
  6370  0256' 1D03               	skipz
  6371  0257' 2800'              	goto	u4255
  6372  0258' 0020               	movlb	0	; select bank0
  6373  0259' 0802'              	movf	?___awdiv,w
  6374  025A' 0022               	movlb	2	; select bank2
  6375  025B' 0200'              	subwf	main@i^(0+256),w
  6376  025C'                    u4255:	
  6377  025C' 1803               	btfsc	3,0
  6378  025D' 2800'              	goto	l4306
  6379                           
  6380                           ;main.c: 179: gfx_drawRect(i, i, gfx_width()-2*i, gfx_height()-2*i, 1);
  6381  025E' 0022               	movlb	2	; select bank2
  6382  025F' 0800'              	movf	(main@i+1)^(0+256),w
  6383  0260' 0021               	movlb	1	; select bank1
  6384  0261' 0080'              	movwf	(gfx_drawRect@x+1)^(0+128)
  6385  0262' 0022               	movlb	2	; select bank2
  6386  0263' 0800'              	movf	main@i^(0+256),w
  6387  0264' 0021               	movlb	1	; select bank1
  6388  0265' 0080'              	movwf	gfx_drawRect@x^(0+128)
  6389  0266' 0022               	movlb	2	; select bank2
  6390  0267' 0800'              	movf	(main@i+1)^(0+256),w
  6391  0268' 0021               	movlb	1	; select bank1
  6392  0269' 0080'              	movwf	(gfx_drawRect@y+1)^(0+128)
  6393  026A' 0022               	movlb	2	; select bank2
  6394  026B' 0800'              	movf	main@i^(0+256),w
  6395  026C' 0021               	movlb	1	; select bank1
  6396  026D' 0080'              	movwf	gfx_drawRect@y^(0+128)
  6397  026E' 0022               	movlb	2	; select bank2
  6398  026F' 0800'              	movf	(main@i+1)^(0+256),w
  6399  0270' 0021               	movlb	1	; select bank1
  6400  0271' 0081'              	movwf	(??_main^(0+128)+1)
  6401  0272' 0022               	movlb	2	; select bank2
  6402  0273' 0800'              	movf	main@i^(0+256),w
  6403  0274' 0021               	movlb	1	; select bank1
  6404  0275' 0080'              	movwf	??_main^(0+128)
  6405  0276' 3580'              	lslf	??_main^(0+128),f
  6406  0277' 0D81'              	rlf	(??_main^(0+128)+1),f
  6407  0278' 0980'              	comf	??_main^(0+128),f
  6408  0279' 0981'              	comf	(??_main^(0+128)+1),f
  6409  027A' 0A80'              	incf	??_main^(0+128),f
  6410  027B' 1903               	skipnz
  6411  027C' 0A81'              	incf	(??_main^(0+128)+1),f
  6412  027D' 3180' 2000' 3180'  	fcall	_gfx_width
  6413  0280' 0021               	movlb	1	; select bank1
  6414  0281' 0800'              	movf	??_main^(0+128),w
  6415  0282' 0020               	movlb	0	; select bank0
  6416  0283' 0700'              	addwf	?_gfx_width,w
  6417  0284' 0021               	movlb	1	; select bank1
  6418  0285' 0080'              	movwf	gfx_drawRect@w^(0+128)
  6419  0286' 0800'              	movf	(??_main+1)^(0+128),w
  6420  0287' 0020               	movlb	0	; select bank0
  6421  0288' 3D01'              	addwfc	?_gfx_width+1,w
  6422  0289' 0021               	movlb	1	; select bank1
  6423  028A' 0080'              	movwf	(gfx_drawRect@w+1)^(0+128)
  6424  028B' 0022               	movlb	2	; select bank2
  6425  028C' 0800'              	movf	(main@i+1)^(0+256),w
  6426  028D' 0021               	movlb	1	; select bank1
  6427  028E' 0081'              	movwf	((??_main+2)^(0+128)+1)
  6428  028F' 0022               	movlb	2	; select bank2
  6429  0290' 0800'              	movf	main@i^(0+256),w
  6430  0291' 0021               	movlb	1	; select bank1
  6431  0292' 0080'              	movwf	(??_main+2)^(0+128)
  6432  0293' 3580'              	lslf	(??_main+2)^(0+128),f
  6433  0294' 0D81'              	rlf	((??_main+2)^(0+128)+1),f
  6434  0295' 0980'              	comf	(??_main+2)^(0+128),f
  6435  0296' 0981'              	comf	((??_main+2)^(0+128)+1),f
  6436  0297' 0A80'              	incf	(??_main+2)^(0+128),f
  6437  0298' 1903               	skipnz
  6438  0299' 0A81'              	incf	((??_main+2)^(0+128)+1),f
  6439  029A' 3180' 2000' 3180'  	fcall	_gfx_height
  6440  029D' 0021               	movlb	1	; select bank1
  6441  029E' 0800'              	movf	(??_main+2)^(0+128),w
  6442  029F' 0020               	movlb	0	; select bank0
  6443  02A0' 0700'              	addwf	?_gfx_height,w
  6444  02A1' 0021               	movlb	1	; select bank1
  6445  02A2' 0080'              	movwf	gfx_drawRect@h^(0+128)
  6446  02A3' 0800'              	movf	(??_main+3)^(0+128),w
  6447  02A4' 0020               	movlb	0	; select bank0
  6448  02A5' 3D01'              	addwfc	?_gfx_height+1,w
  6449  02A6' 0021               	movlb	1	; select bank1
  6450  02A7' 0080'              	movwf	(gfx_drawRect@h+1)^(0+128)
  6451  02A8' 3001               	movlw	1
  6452  02A9' 0080'              	movwf	gfx_drawRect@color^(0+128)
  6453  02AA' 3000               	movlw	0
  6454  02AB' 0081'              	movwf	(gfx_drawRect@color^(0+128)+1)
  6455  02AC' 3180' 2000' 3180'  	fcall	_gfx_drawRect
  6456                           
  6457                           ;main.c: 180: display_update();
  6458  02AF' 3180' 2000' 3180'  	fcall	_display_update
  6459  02B2' 3002               	movlw	2
  6460  02B3' 0022               	movlb	2	; select bank2
  6461  02B4' 0780'              	addwf	main@i^(0+256),f
  6462  02B5' 3000               	movlw	0
  6463  02B6' 3D80'              	addwfc	(main@i+1)^(0+256),f
  6464  02B7' 2800'              	goto	l4304
  6465  02B8'                    l4306:	
  6466                           
  6467                           ;main.c: 181: }
  6468                           ;main.c: 183: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  6469  02B8' 303D               	movlw	61
  6470  02B9' 0021               	movlb	1	; select bank1
  6471  02BA' 0081'              	movwf	(??_main^(0+128)+1)
  6472  02BB' 30E1               	movlw	225
  6473  02BC' 0080'              	movwf	??_main^(0+128)
  6474  02BD' 303F               	movlw	63
  6475  02BE'                    u4467:	
  6476  02BE' 0B89               	decfsz	9,f
  6477  02BF' 2800'              	goto	u4467
  6478  02C0' 0B80'              	decfsz	??_main^(0+128),f
  6479  02C1' 2800'              	goto	u4467
  6480  02C2' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6481  02C3' 2800'              	goto	u4467
  6482  02C4' 3200               	nop2
  6483                           
  6484                           ;main.c: 184: display_clear();
  6485  02C5' 3180' 2000' 3180'  	fcall	_display_clear
  6486                           
  6487                           ;main.c: 185: display_update();
  6488  02C8' 3180' 2000' 3180'  	fcall	_display_update
  6489                           
  6490                           ;main.c: 188: uint8_t color = 1;
  6491  02CB' 0022               	movlb	2	; select bank2
  6492  02CC' 0180'              	clrf	main@color^(0+256)
  6493  02CD' 0A80'              	incf	main@color^(0+256),f
  6494                           
  6495                           ;main.c: 189: for( i = 0 ; i < gfx_height()/2 ; i += 3 ){
  6496  02CE' 0180'              	clrf	main@i^(0+256)
  6497  02CF' 0180'              	clrf	(main@i+1)^(0+256)
  6498  02D0'                    l4324:	
  6499  02D0' 3002               	movlw	2
  6500  02D1' 0020               	movlb	0	; select bank0
  6501  02D2' 0082'              	movwf	___awdiv@divisor
  6502  02D3' 3000               	movlw	0
  6503  02D4' 0083'              	movwf	___awdiv@divisor+1
  6504  02D5' 3180' 2000' 3180'  	fcall	_gfx_height
  6505  02D8' 0020               	movlb	0	; select bank0
  6506  02D9' 0801'              	movf	?_gfx_height+1,w
  6507  02DA' 0085'              	movwf	___awdiv@dividend+1
  6508  02DB' 0800'              	movf	?_gfx_height,w
  6509  02DC' 0084'              	movwf	___awdiv@dividend
  6510  02DD' 3180' 2000' 3180'  	fcall	___awdiv
  6511  02E0' 0022               	movlb	2	; select bank2
  6512  02E1' 0800'              	movf	(main@i+1)^(0+256),w
  6513  02E2' 3A80               	xorlw	128
  6514  02E3' 0021               	movlb	1	; select bank1
  6515  02E4' 0080'              	movwf	??_main^(0+128)
  6516  02E5' 0020               	movlb	0	; select bank0
  6517  02E6' 0803'              	movf	?___awdiv+1,w
  6518  02E7' 3A80               	xorlw	128
  6519  02E8' 0021               	movlb	1	; select bank1
  6520  02E9' 0200'              	subwf	??_main^(0+128),w
  6521  02EA' 1D03               	skipz
  6522  02EB' 2800'              	goto	u4265
  6523  02EC' 0020               	movlb	0	; select bank0
  6524  02ED' 0802'              	movf	?___awdiv,w
  6525  02EE' 0022               	movlb	2	; select bank2
  6526  02EF' 0200'              	subwf	main@i^(0+256),w
  6527  02F0'                    u4265:	
  6528  02F0' 1803               	btfsc	3,0
  6529  02F1' 2800'              	goto	l4326
  6530                           
  6531                           ;main.c: 191: gfx_fillRect(i, i, gfx_width()-i*2, gfx_height()-i*2, color%2);
  6532  02F2' 0022               	movlb	2	; select bank2
  6533  02F3' 0800'              	movf	(main@i+1)^(0+256),w
  6534  02F4' 0021               	movlb	1	; select bank1
  6535  02F5' 0080'              	movwf	(gfx_fillRect@x+1)^(0+128)
  6536  02F6' 0022               	movlb	2	; select bank2
  6537  02F7' 0800'              	movf	main@i^(0+256),w
  6538  02F8' 0021               	movlb	1	; select bank1
  6539  02F9' 0080'              	movwf	gfx_fillRect@x^(0+128)
  6540  02FA' 0022               	movlb	2	; select bank2
  6541  02FB' 0800'              	movf	(main@i+1)^(0+256),w
  6542  02FC' 0021               	movlb	1	; select bank1
  6543  02FD' 0080'              	movwf	(gfx_fillRect@y+1)^(0+128)
  6544  02FE' 0022               	movlb	2	; select bank2
  6545  02FF' 0800'              	movf	main@i^(0+256),w
  6546  0300' 0021               	movlb	1	; select bank1
  6547  0301' 0080'              	movwf	gfx_fillRect@y^(0+128)
  6548  0302' 0022               	movlb	2	; select bank2
  6549  0303' 0800'              	movf	(main@i+1)^(0+256),w
  6550  0304' 0021               	movlb	1	; select bank1
  6551  0305' 0081'              	movwf	(??_main^(0+128)+1)
  6552  0306' 0022               	movlb	2	; select bank2
  6553  0307' 0800'              	movf	main@i^(0+256),w
  6554  0308' 0021               	movlb	1	; select bank1
  6555  0309' 0080'              	movwf	??_main^(0+128)
  6556  030A' 3580'              	lslf	??_main^(0+128),f
  6557  030B' 0D81'              	rlf	(??_main^(0+128)+1),f
  6558  030C' 0980'              	comf	??_main^(0+128),f
  6559  030D' 0981'              	comf	(??_main^(0+128)+1),f
  6560  030E' 0A80'              	incf	??_main^(0+128),f
  6561  030F' 1903               	skipnz
  6562  0310' 0A81'              	incf	(??_main^(0+128)+1),f
  6563  0311' 3180' 2000' 3180'  	fcall	_gfx_width
  6564  0314' 0021               	movlb	1	; select bank1
  6565  0315' 0800'              	movf	??_main^(0+128),w
  6566  0316' 0020               	movlb	0	; select bank0
  6567  0317' 0700'              	addwf	?_gfx_width,w
  6568  0318' 0021               	movlb	1	; select bank1
  6569  0319' 0080'              	movwf	gfx_fillRect@w^(0+128)
  6570  031A' 0800'              	movf	(??_main+1)^(0+128),w
  6571  031B' 0020               	movlb	0	; select bank0
  6572  031C' 3D01'              	addwfc	?_gfx_width+1,w
  6573  031D' 0021               	movlb	1	; select bank1
  6574  031E' 0080'              	movwf	(gfx_fillRect@w+1)^(0+128)
  6575  031F' 0022               	movlb	2	; select bank2
  6576  0320' 0800'              	movf	(main@i+1)^(0+256),w
  6577  0321' 0021               	movlb	1	; select bank1
  6578  0322' 0081'              	movwf	((??_main+2)^(0+128)+1)
  6579  0323' 0022               	movlb	2	; select bank2
  6580  0324' 0800'              	movf	main@i^(0+256),w
  6581  0325' 0021               	movlb	1	; select bank1
  6582  0326' 0080'              	movwf	(??_main+2)^(0+128)
  6583  0327' 3580'              	lslf	(??_main+2)^(0+128),f
  6584  0328' 0D81'              	rlf	((??_main+2)^(0+128)+1),f
  6585  0329' 0980'              	comf	(??_main+2)^(0+128),f
  6586  032A' 0981'              	comf	((??_main+2)^(0+128)+1),f
  6587  032B' 0A80'              	incf	(??_main+2)^(0+128),f
  6588  032C' 1903               	skipnz
  6589  032D' 0A81'              	incf	((??_main+2)^(0+128)+1),f
  6590  032E' 3180' 2000' 3180'  	fcall	_gfx_height
  6591  0331' 0021               	movlb	1	; select bank1
  6592  0332' 0800'              	movf	(??_main+2)^(0+128),w
  6593  0333' 0020               	movlb	0	; select bank0
  6594  0334' 0700'              	addwf	?_gfx_height,w
  6595  0335' 0021               	movlb	1	; select bank1
  6596  0336' 0080'              	movwf	gfx_fillRect@h^(0+128)
  6597  0337' 0800'              	movf	(??_main+3)^(0+128),w
  6598  0338' 0020               	movlb	0	; select bank0
  6599  0339' 3D01'              	addwfc	?_gfx_height+1,w
  6600  033A' 0021               	movlb	1	; select bank1
  6601  033B' 0080'              	movwf	(gfx_fillRect@h+1)^(0+128)
  6602  033C' 0022               	movlb	2	; select bank2
  6603  033D' 0800'              	movf	main@color^(0+256),w
  6604  033E' 3901               	andlw	1
  6605  033F' 0021               	movlb	1	; select bank1
  6606  0340' 0080'              	movwf	(??_main+4)^(0+128)
  6607  0341' 0181'              	clrf	((??_main+4)^(0+128)+1)
  6608  0342' 0800'              	movf	(??_main+4)^(0+128),w
  6609  0343' 0080'              	movwf	gfx_fillRect@color^(0+128)
  6610  0344' 0800'              	movf	(??_main+5)^(0+128),w
  6611  0345' 0080'              	movwf	(gfx_fillRect@color+1)^(0+128)
  6612  0346' 3180' 2000' 3180'  	fcall	_gfx_fillRect
  6613                           
  6614                           ;main.c: 192: display_update();
  6615  0349' 3180' 2000' 3180'  	fcall	_display_update
  6616                           
  6617                           ;main.c: 193: color++;
  6618  034C' 3001               	movlw	1
  6619  034D' 0021               	movlb	1	; select bank1
  6620  034E' 0080'              	movwf	??_main^(0+128)
  6621  034F' 0800'              	movf	??_main^(0+128),w
  6622  0350' 0022               	movlb	2	; select bank2
  6623  0351' 0780'              	addwf	main@color^(0+256),f
  6624  0352' 3003               	movlw	3
  6625  0353' 0780'              	addwf	main@i^(0+256),f
  6626  0354' 3000               	movlw	0
  6627  0355' 3D80'              	addwfc	(main@i+1)^(0+256),f
  6628  0356' 2800'              	goto	l4324
  6629  0357'                    l4326:	
  6630                           
  6631                           ;main.c: 194: }
  6632                           ;main.c: 196: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  6633  0357' 303D               	movlw	61
  6634  0358' 0021               	movlb	1	; select bank1
  6635  0359' 0081'              	movwf	(??_main^(0+128)+1)
  6636  035A' 30E1               	movlw	225
  6637  035B' 0080'              	movwf	??_main^(0+128)
  6638  035C' 303F               	movlw	63
  6639  035D'                    u4477:	
  6640  035D' 0B89               	decfsz	9,f
  6641  035E' 2800'              	goto	u4477
  6642  035F' 0B80'              	decfsz	??_main^(0+128),f
  6643  0360' 2800'              	goto	u4477
  6644  0361' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6645  0362' 2800'              	goto	u4477
  6646  0363' 3200               	nop2
  6647                           
  6648                           ;main.c: 197: display_clear();
  6649  0364' 3180' 2000' 3180'  	fcall	_display_clear
  6650                           
  6651                           ;main.c: 198: display_update();
  6652  0367' 3180' 2000' 3180'  	fcall	_display_update
  6653                           
  6654                           ;main.c: 201: for( i = 0 ; i < gfx_height() ; i += 2 ){
  6655  036A' 0022               	movlb	2	; select bank2
  6656  036B' 0180'              	clrf	main@i^(0+256)
  6657  036C' 0180'              	clrf	(main@i+1)^(0+256)
  6658  036D'                    l4340:	
  6659  036D' 3180' 2000' 3180'  	fcall	_gfx_height
  6660  0370' 0022               	movlb	2	; select bank2
  6661  0371' 0800'              	movf	(main@i+1)^(0+256),w
  6662  0372' 3A80               	xorlw	128
  6663  0373' 0021               	movlb	1	; select bank1
  6664  0374' 0080'              	movwf	??_main^(0+128)
  6665  0375' 0020               	movlb	0	; select bank0
  6666  0376' 0801'              	movf	?_gfx_height+1,w
  6667  0377' 3A80               	xorlw	128
  6668  0378' 0021               	movlb	1	; select bank1
  6669  0379' 0200'              	subwf	??_main^(0+128),w
  6670  037A' 1D03               	skipz
  6671  037B' 2800'              	goto	u4275
  6672  037C' 0020               	movlb	0	; select bank0
  6673  037D' 0800'              	movf	?_gfx_height,w
  6674  037E' 0022               	movlb	2	; select bank2
  6675  037F' 0200'              	subwf	main@i^(0+256),w
  6676  0380'                    u4275:	
  6677  0380' 1803               	btfsc	3,0
  6678  0381' 2800'              	goto	l4342
  6679                           
  6680                           ;main.c: 202: gfx_drawCircle( gfx_width()/2, gfx_height()/2, i, 1 );
  6681  0382' 3002               	movlw	2
  6682  0383' 0020               	movlb	0	; select bank0
  6683  0384' 0082'              	movwf	___awdiv@divisor
  6684  0385' 3000               	movlw	0
  6685  0386' 0083'              	movwf	___awdiv@divisor+1
  6686  0387' 3180' 2000' 3180'  	fcall	_gfx_width
  6687  038A' 0020               	movlb	0	; select bank0
  6688  038B' 0801'              	movf	?_gfx_width+1,w
  6689  038C' 0085'              	movwf	___awdiv@dividend+1
  6690  038D' 0800'              	movf	?_gfx_width,w
  6691  038E' 0084'              	movwf	___awdiv@dividend
  6692  038F' 3180' 2000' 3180'  	fcall	___awdiv
  6693  0392' 0020               	movlb	0	; select bank0
  6694  0393' 0803'              	movf	?___awdiv+1,w
  6695  0394' 009E'              	movwf	gfx_drawCircle@x0+1
  6696  0395' 0802'              	movf	?___awdiv,w
  6697  0396' 009D'              	movwf	gfx_drawCircle@x0
  6698  0397' 3002               	movlw	2
  6699  0398' 0082'              	movwf	___awdiv@divisor
  6700  0399' 3000               	movlw	0
  6701  039A' 0083'              	movwf	___awdiv@divisor+1
  6702  039B' 3180' 2000' 3180'  	fcall	_gfx_height
  6703  039E' 0020               	movlb	0	; select bank0
  6704  039F' 0801'              	movf	?_gfx_height+1,w
  6705  03A0' 0085'              	movwf	___awdiv@dividend+1
  6706  03A1' 0800'              	movf	?_gfx_height,w
  6707  03A2' 0084'              	movwf	___awdiv@dividend
  6708  03A3' 3180' 2000' 3180'  	fcall	___awdiv
  6709  03A6' 0020               	movlb	0	; select bank0
  6710  03A7' 0803'              	movf	?___awdiv+1,w
  6711  03A8' 00A0'              	movwf	gfx_drawCircle@y0+1
  6712  03A9' 0802'              	movf	?___awdiv,w
  6713  03AA' 009F'              	movwf	gfx_drawCircle@y0
  6714  03AB' 0022               	movlb	2	; select bank2
  6715  03AC' 0800'              	movf	(main@i+1)^(0+256),w
  6716  03AD' 0020               	movlb	0	; select bank0
  6717  03AE' 00A2'              	movwf	gfx_drawCircle@r+1
  6718  03AF' 0022               	movlb	2	; select bank2
  6719  03B0' 0800'              	movf	main@i^(0+256),w
  6720  03B1' 0020               	movlb	0	; select bank0
  6721  03B2' 00A1'              	movwf	gfx_drawCircle@r
  6722  03B3' 3001               	movlw	1
  6723  03B4' 00A3'              	movwf	gfx_drawCircle@color
  6724  03B5' 3000               	movlw	0
  6725  03B6' 00A4'              	movwf	gfx_drawCircle@color+1
  6726  03B7' 3180' 2000' 3180'  	fcall	_gfx_drawCircle
  6727                           
  6728                           ;main.c: 203: display_update();
  6729  03BA' 3180' 2000' 3180'  	fcall	_display_update
  6730  03BD' 3002               	movlw	2
  6731  03BE' 0022               	movlb	2	; select bank2
  6732  03BF' 0780'              	addwf	main@i^(0+256),f
  6733  03C0' 3000               	movlw	0
  6734  03C1' 3D80'              	addwfc	(main@i+1)^(0+256),f
  6735  03C2' 2800'              	goto	l4340
  6736  03C3'                    l4342:	
  6737                           
  6738                           ;main.c: 204: }
  6739                           ;main.c: 206: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  6740  03C3' 303D               	movlw	61
  6741  03C4' 0021               	movlb	1	; select bank1
  6742  03C5' 0081'              	movwf	(??_main^(0+128)+1)
  6743  03C6' 30E1               	movlw	225
  6744  03C7' 0080'              	movwf	??_main^(0+128)
  6745  03C8' 303F               	movlw	63
  6746  03C9'                    u4487:	
  6747  03C9' 0B89               	decfsz	9,f
  6748  03CA' 2800'              	goto	u4487
  6749  03CB' 0B80'              	decfsz	??_main^(0+128),f
  6750  03CC' 2800'              	goto	u4487
  6751  03CD' 0B81'              	decfsz	(??_main^(0+128)+1),f
  6752  03CE' 2800'              	goto	u4487
  6753  03CF' 3200               	nop2
  6754                           
  6755                           ;main.c: 207: display_clear();
  6756  03D0' 3180' 2000' 3180'  	fcall	_display_clear
  6757                           
  6758                           ;main.c: 208: display_update();
  6759  03D3' 3180' 2000' 3180'  	fcall	_display_update
  6760                           
  6761                           ;main.c: 214: for( i = 0 ; i < (((gfx_width()) < (gfx_height())) ? (gfx_width()) : (gfx_
      +                          height()))/2; i+=5) {
  6762  03D6' 0022               	movlb	2	; select bank2
  6763  03D7' 0180'              	clrf	main@i^(0+256)
  6764  03D8' 0180'              	clrf	(main@i+1)^(0+256)
  6765  03D9' 2800'              	goto	l4358
  6766  03DA'                    l4350:	
  6767                           
  6768                           ;main.c: 215: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  6769                           ;main.c: 216: gfx_width()/2-i, gfx_height()/2+i,
  6770                           ;main.c: 217: gfx_width()/2+i, gfx_height()/2+i, 1);
  6771  03DA' 3002               	movlw	2
  6772  03DB' 0020               	movlb	0	; select bank0
  6773  03DC' 0082'              	movwf	___awdiv@divisor
  6774  03DD' 3000               	movlw	0
  6775  03DE' 0083'              	movwf	___awdiv@divisor+1
  6776  03DF' 3180' 2000' 3180'  	fcall	_gfx_width
  6777  03E2' 0020               	movlb	0	; select bank0
  6778  03E3' 0801'              	movf	?_gfx_width+1,w
  6779  03E4' 0085'              	movwf	___awdiv@dividend+1
  6780  03E5' 0800'              	movf	?_gfx_width,w
  6781  03E6' 0084'              	movwf	___awdiv@dividend
  6782  03E7' 3180' 2000' 3180'  	fcall	___awdiv
  6783  03EA' 0020               	movlb	0	; select bank0
  6784  03EB' 0803'              	movf	?___awdiv+1,w
  6785  03EC' 0022               	movlb	2	; select bank2
  6786  03ED' 0080'              	movwf	(_main$1408+1)^(0+256)
  6787  03EE' 0020               	movlb	0	; select bank0
  6788  03EF' 0802'              	movf	?___awdiv,w
  6789  03F0' 0022               	movlb	2	; select bank2
  6790  03F1' 0080'              	movwf	_main$1408^(0+256)
  6791                           
  6792                           ;main.c: 215: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  6793                           ;main.c: 216: gfx_width()/2-i, gfx_height()/2+i,
  6794                           ;main.c: 217: gfx_width()/2+i, gfx_height()/2+i, 1);
  6795  03F2' 0900'              	comf	main@i^(0+256),w
  6796  03F3' 0021               	movlb	1	; select bank1
  6797  03F4' 0080'              	movwf	??_main^(0+128)
  6798  03F5' 0022               	movlb	2	; select bank2
  6799  03F6' 0900'              	comf	(main@i+1)^(0+256),w
  6800  03F7' 0021               	movlb	1	; select bank1
  6801  03F8' 0081'              	movwf	(??_main^(0+128)+1)
  6802  03F9' 0A80'              	incf	??_main^(0+128),f
  6803  03FA' 1903               	skipnz
  6804  03FB' 0A81'              	incf	(??_main^(0+128)+1),f
  6805  03FC' 3002               	movlw	2
  6806  03FD' 0020               	movlb	0	; select bank0
  6807  03FE' 0082'              	movwf	___awdiv@divisor
  6808  03FF' 3000               	movlw	0
  6809  0400' 0083'              	movwf	___awdiv@divisor+1
  6810  0401' 3180' 2000' 3180'  	fcall	_gfx_height
  6811  0404' 0020               	movlb	0	; select bank0
  6812  0405' 0801'              	movf	?_gfx_height+1,w
  6813  0406' 0085'              	movwf	___awdiv@dividend+1
  6814  0407' 0800'              	movf	?_gfx_height,w
  6815  0408' 0084'              	movwf	___awdiv@dividend
  6816  0409' 3180' 2000' 3180'  	fcall	___awdiv
  6817  040C' 0021               	movlb	1	; select bank1
  6818  040D' 0800'              	movf	??_main^(0+128),w
  6819  040E' 0020               	movlb	0	; select bank0
  6820  040F' 0702'              	addwf	?___awdiv,w
  6821  0410' 0022               	movlb	2	; select bank2
  6822  0411' 0080'              	movwf	_main$1409^(0+256)
  6823  0412' 0021               	movlb	1	; select bank1
  6824  0413' 0800'              	movf	(??_main+1)^(0+128),w
  6825  0414' 0020               	movlb	0	; select bank0
  6826  0415' 3D03'              	addwfc	?___awdiv+1,w
  6827  0416' 0022               	movlb	2	; select bank2
  6828  0417' 0080'              	movwf	(_main$1409+1)^(0+256)
  6829                           
  6830                           ;main.c: 215: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  6831                           ;main.c: 216: gfx_width()/2-i, gfx_height()/2+i,
  6832                           ;main.c: 217: gfx_width()/2+i, gfx_height()/2+i, 1);
  6833  0418' 0900'              	comf	main@i^(0+256),w
  6834  0419' 0021               	movlb	1	; select bank1
  6835  041A' 0080'              	movwf	??_main^(0+128)
  6836  041B' 0022               	movlb	2	; select bank2
  6837  041C' 0900'              	comf	(main@i+1)^(0+256),w
  6838  041D' 0021               	movlb	1	; select bank1
  6839  041E' 0081'              	movwf	(??_main^(0+128)+1)
  6840  041F' 0A80'              	incf	??_main^(0+128),f
  6841  0420' 1903               	skipnz
  6842  0421' 0A81'              	incf	(??_main^(0+128)+1),f
  6843  0422' 3002               	movlw	2
  6844  0423' 0020               	movlb	0	; select bank0
  6845  0424' 0082'              	movwf	___awdiv@divisor
  6846  0425' 3000               	movlw	0
  6847  0426' 0083'              	movwf	___awdiv@divisor+1
  6848  0427' 3180' 2000' 3180'  	fcall	_gfx_width
  6849  042A' 0020               	movlb	0	; select bank0
  6850  042B' 0801'              	movf	?_gfx_width+1,w
  6851  042C' 0085'              	movwf	___awdiv@dividend+1
  6852  042D' 0800'              	movf	?_gfx_width,w
  6853  042E' 0084'              	movwf	___awdiv@dividend
  6854  042F' 3180' 2000' 3180'  	fcall	___awdiv
  6855  0432' 0021               	movlb	1	; select bank1
  6856  0433' 0800'              	movf	??_main^(0+128),w
  6857  0434' 0020               	movlb	0	; select bank0
  6858  0435' 0702'              	addwf	?___awdiv,w
  6859  0436' 0022               	movlb	2	; select bank2
  6860  0437' 0080'              	movwf	_main$1410^(0+256)
  6861  0438' 0021               	movlb	1	; select bank1
  6862  0439' 0800'              	movf	(??_main+1)^(0+128),w
  6863  043A' 0020               	movlb	0	; select bank0
  6864  043B' 3D03'              	addwfc	?___awdiv+1,w
  6865  043C' 0022               	movlb	2	; select bank2
  6866  043D' 0080'              	movwf	(_main$1410+1)^(0+256)
  6867                           
  6868                           ;main.c: 215: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  6869                           ;main.c: 216: gfx_width()/2-i, gfx_height()/2+i,
  6870                           ;main.c: 217: gfx_width()/2+i, gfx_height()/2+i, 1);
  6871  043E' 3002               	movlw	2
  6872  043F' 0020               	movlb	0	; select bank0
  6873  0440' 0082'              	movwf	___awdiv@divisor
  6874  0441' 3000               	movlw	0
  6875  0442' 0083'              	movwf	___awdiv@divisor+1
  6876  0443' 3180' 2000' 3180'  	fcall	_gfx_height
  6877  0446' 0020               	movlb	0	; select bank0
  6878  0447' 0801'              	movf	?_gfx_height+1,w
  6879  0448' 0085'              	movwf	___awdiv@dividend+1
  6880  0449' 0800'              	movf	?_gfx_height,w
  6881  044A' 0084'              	movwf	___awdiv@dividend
  6882  044B' 3180' 2000' 3180'  	fcall	___awdiv
  6883  044E' 0022               	movlb	2	; select bank2
  6884  044F' 0800'              	movf	main@i^(0+256),w
  6885  0450' 0020               	movlb	0	; select bank0
  6886  0451' 0702'              	addwf	?___awdiv,w
  6887  0452' 0022               	movlb	2	; select bank2
  6888  0453' 0080'              	movwf	_main$1411^(0+256)
  6889  0454' 0800'              	movf	(main@i+1)^(0+256),w
  6890  0455' 0020               	movlb	0	; select bank0
  6891  0456' 3D03'              	addwfc	?___awdiv+1,w
  6892  0457' 0022               	movlb	2	; select bank2
  6893  0458' 0080'              	movwf	(_main$1411+1)^(0+256)
  6894                           
  6895                           ;main.c: 215: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  6896                           ;main.c: 216: gfx_width()/2-i, gfx_height()/2+i,
  6897                           ;main.c: 217: gfx_width()/2+i, gfx_height()/2+i, 1);
  6898  0459' 3002               	movlw	2
  6899  045A' 0020               	movlb	0	; select bank0
  6900  045B' 0082'              	movwf	___awdiv@divisor
  6901  045C' 3000               	movlw	0
  6902  045D' 0083'              	movwf	___awdiv@divisor+1
  6903  045E' 3180' 2000' 3180'  	fcall	_gfx_width
  6904  0461' 0020               	movlb	0	; select bank0
  6905  0462' 0801'              	movf	?_gfx_width+1,w
  6906  0463' 0085'              	movwf	___awdiv@dividend+1
  6907  0464' 0800'              	movf	?_gfx_width,w
  6908  0465' 0084'              	movwf	___awdiv@dividend
  6909  0466' 3180' 2000' 3180'  	fcall	___awdiv
  6910  0469' 0022               	movlb	2	; select bank2
  6911  046A' 0800'              	movf	main@i^(0+256),w
  6912  046B' 0020               	movlb	0	; select bank0
  6913  046C' 0702'              	addwf	?___awdiv,w
  6914  046D' 0022               	movlb	2	; select bank2
  6915  046E' 0080'              	movwf	_main$1412^(0+256)
  6916  046F' 0800'              	movf	(main@i+1)^(0+256),w
  6917  0470' 0020               	movlb	0	; select bank0
  6918  0471' 3D03'              	addwfc	?___awdiv+1,w
  6919  0472' 0022               	movlb	2	; select bank2
  6920  0473' 0080'              	movwf	(_main$1412+1)^(0+256)
  6921                           
  6922                           ;main.c: 215: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  6923                           ;main.c: 216: gfx_width()/2-i, gfx_height()/2+i,
  6924                           ;main.c: 217: gfx_width()/2+i, gfx_height()/2+i, 1);
  6925  0474' 3002               	movlw	2
  6926  0475' 0020               	movlb	0	; select bank0
  6927  0476' 0082'              	movwf	___awdiv@divisor
  6928  0477' 3000               	movlw	0
  6929  0478' 0083'              	movwf	___awdiv@divisor+1
  6930  0479' 3180' 2000' 3180'  	fcall	_gfx_height
  6931  047C' 0020               	movlb	0	; select bank0
  6932  047D' 0801'              	movf	?_gfx_height+1,w
  6933  047E' 0085'              	movwf	___awdiv@dividend+1
  6934  047F' 0800'              	movf	?_gfx_height,w
  6935  0480' 0084'              	movwf	___awdiv@dividend
  6936  0481' 3180' 2000' 3180'  	fcall	___awdiv
  6937  0484' 0022               	movlb	2	; select bank2
  6938  0485' 0800'              	movf	main@i^(0+256),w
  6939  0486' 0020               	movlb	0	; select bank0
  6940  0487' 0702'              	addwf	?___awdiv,w
  6941  0488' 0022               	movlb	2	; select bank2
  6942  0489' 0080'              	movwf	_main$1413^(0+256)
  6943  048A' 0800'              	movf	(main@i+1)^(0+256),w
  6944  048B' 0020               	movlb	0	; select bank0
  6945  048C' 3D03'              	addwfc	?___awdiv+1,w
  6946  048D' 0022               	movlb	2	; select bank2
  6947  048E' 0080'              	movwf	(_main$1413+1)^(0+256)
  6948                           
  6949                           ;main.c: 215: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  6950                           ;main.c: 216: gfx_width()/2-i, gfx_height()/2+i,
  6951                           ;main.c: 217: gfx_width()/2+i, gfx_height()/2+i, 1);
  6952  048F' 0800'              	movf	(_main$1408+1)^(0+256),w
  6953  0490' 0021               	movlb	1	; select bank1
  6954  0491' 0080'              	movwf	(gfx_drawTriangle@x0+1)^(0+128)
  6955  0492' 0022               	movlb	2	; select bank2
  6956  0493' 0800'              	movf	_main$1408^(0+256),w
  6957  0494' 0021               	movlb	1	; select bank1
  6958  0495' 0080'              	movwf	gfx_drawTriangle@x0^(0+128)
  6959  0496' 0022               	movlb	2	; select bank2
  6960  0497' 0800'              	movf	(_main$1409+1)^(0+256),w
  6961  0498' 0021               	movlb	1	; select bank1
  6962  0499' 0080'              	movwf	(gfx_drawTriangle@y0+1)^(0+128)
  6963  049A' 0022               	movlb	2	; select bank2
  6964  049B' 0800'              	movf	_main$1409^(0+256),w
  6965  049C' 0021               	movlb	1	; select bank1
  6966  049D' 0080'              	movwf	gfx_drawTriangle@y0^(0+128)
  6967  049E' 0022               	movlb	2	; select bank2
  6968  049F' 0800'              	movf	(_main$1410+1)^(0+256),w
  6969  04A0' 0021               	movlb	1	; select bank1
  6970  04A1' 0080'              	movwf	(gfx_drawTriangle@x1+1)^(0+128)
  6971  04A2' 0022               	movlb	2	; select bank2
  6972  04A3' 0800'              	movf	_main$1410^(0+256),w
  6973  04A4' 0021               	movlb	1	; select bank1
  6974  04A5' 0080'              	movwf	gfx_drawTriangle@x1^(0+128)
  6975  04A6' 0022               	movlb	2	; select bank2
  6976  04A7' 0800'              	movf	(_main$1411+1)^(0+256),w
  6977  04A8' 0021               	movlb	1	; select bank1
  6978  04A9' 0080'              	movwf	(gfx_drawTriangle@y1+1)^(0+128)
  6979  04AA' 0022               	movlb	2	; select bank2
  6980  04AB' 0800'              	movf	_main$1411^(0+256),w
  6981  04AC' 0021               	movlb	1	; select bank1
  6982  04AD' 0080'              	movwf	gfx_drawTriangle@y1^(0+128)
  6983  04AE' 0022               	movlb	2	; select bank2
  6984  04AF' 0800'              	movf	(_main$1412+1)^(0+256),w
  6985  04B0' 0021               	movlb	1	; select bank1
  6986  04B1' 0080'              	movwf	(gfx_drawTriangle@x2+1)^(0+128)
  6987  04B2' 0022               	movlb	2	; select bank2
  6988  04B3' 0800'              	movf	_main$1412^(0+256),w
  6989  04B4' 0021               	movlb	1	; select bank1
  6990  04B5' 0080'              	movwf	gfx_drawTriangle@x2^(0+128)
  6991  04B6' 0022               	movlb	2	; select bank2
  6992  04B7' 0800'              	movf	(_main$1413+1)^(0+256),w
  6993  04B8' 0021               	movlb	1	; select bank1
  6994  04B9' 0080'              	movwf	(gfx_drawTriangle@y2+1)^(0+128)
  6995  04BA' 0022               	movlb	2	; select bank2
  6996  04BB' 0800'              	movf	_main$1413^(0+256),w
  6997  04BC' 0021               	movlb	1	; select bank1
  6998  04BD' 0080'              	movwf	gfx_drawTriangle@y2^(0+128)
  6999  04BE' 3001               	movlw	1
  7000  04BF' 0080'              	movwf	gfx_drawTriangle@color^(0+128)
  7001  04C0' 3000               	movlw	0
  7002  04C1' 0081'              	movwf	(gfx_drawTriangle@color^(0+128)+1)
  7003  04C2' 3180' 2000' 3180'  	fcall	_gfx_drawTriangle
  7004                           
  7005                           ;main.c: 218: display_update();
  7006  04C5' 3180' 2000' 3180'  	fcall	_display_update
  7007  04C8' 3005               	movlw	5
  7008  04C9' 0022               	movlb	2	; select bank2
  7009  04CA' 0780'              	addwf	main@i^(0+256),f
  7010  04CB' 3000               	movlw	0
  7011  04CC' 3D80'              	addwfc	(main@i+1)^(0+256),f
  7012  04CD'                    l4358:	
  7013  04CD' 3180' 2000' 3180'  	fcall	_gfx_width
  7014  04D0' 0020               	movlb	0	; select bank0
  7015  04D1' 0800'              	movf	?_gfx_width,w
  7016  04D2' 0021               	movlb	1	; select bank1
  7017  04D3' 0080'              	movwf	??_main^(0+128)
  7018  04D4' 0020               	movlb	0	; select bank0
  7019  04D5' 0801'              	movf	?_gfx_width+1,w
  7020  04D6' 0021               	movlb	1	; select bank1
  7021  04D7' 0081'              	movwf	(??_main^(0+128)+1)
  7022  04D8' 3180' 2000' 3180'  	fcall	_gfx_height
  7023  04DB' 0021               	movlb	1	; select bank1
  7024  04DC' 0800'              	movf	(??_main+1)^(0+128),w
  7025  04DD' 3A80               	xorlw	128
  7026  04DE' 0080'              	movwf	(??_main+2)^(0+128)
  7027  04DF' 0020               	movlb	0	; select bank0
  7028  04E0' 0801'              	movf	?_gfx_height+1,w
  7029  04E1' 3A80               	xorlw	128
  7030  04E2' 0021               	movlb	1	; select bank1
  7031  04E3' 0200'              	subwf	(??_main+2)^(0+128),w
  7032  04E4' 1D03               	skipz
  7033  04E5' 2800'              	goto	u4285
  7034  04E6' 0020               	movlb	0	; select bank0
  7035  04E7' 0800'              	movf	?_gfx_height,w
  7036  04E8' 0021               	movlb	1	; select bank1
  7037  04E9' 0200'              	subwf	??_main^(0+128),w
  7038  04EA'                    u4285:	
  7039  04EA' 1C03               	skipc
  7040  04EB' 2800'              	goto	l4362
  7041  04EC' 3180' 2000' 3180'  	fcall	_gfx_height
  7042  04EF' 0020               	movlb	0	; select bank0
  7043  04F0' 0801'              	movf	?_gfx_height+1,w
  7044  04F1' 0022               	movlb	2	; select bank2
  7045  04F2' 0080'              	movwf	(_main$672+1)^(0+256)
  7046  04F3' 0020               	movlb	0	; select bank0
  7047  04F4' 0800'              	movf	?_gfx_height,w
  7048  04F5' 2800'              	goto	L1
  7049  04F6'                    l4362:	
  7050  04F6' 3180' 2000' 3180'  	fcall	_gfx_width
  7051  04F9' 0020               	movlb	0	; select bank0
  7052  04FA' 0801'              	movf	?_gfx_width+1,w
  7053  04FB' 0022               	movlb	2	; select bank2
  7054  04FC' 0080'              	movwf	(_main$672+1)^(0+256)
  7055  04FD' 0020               	movlb	0	; select bank0
  7056  04FE' 0800'              	movf	?_gfx_width,w
  7057  04FF'                    L1:	
  7058  04FF' 0022               	movlb	2	; select bank2
  7059  0500' 0080'              	movwf	_main$672^(0+256)
  7060  0501' 3002               	movlw	2
  7061  0502' 0020               	movlb	0	; select bank0
  7062  0503' 0082'              	movwf	___awdiv@divisor
  7063  0504' 3000               	movlw	0
  7064  0505' 0083'              	movwf	___awdiv@divisor+1
  7065  0506' 0022               	movlb	2	; select bank2
  7066  0507' 0800'              	movf	(_main$672+1)^(0+256),w
  7067  0508' 0020               	movlb	0	; select bank0
  7068  0509' 0085'              	movwf	___awdiv@dividend+1
  7069  050A' 0022               	movlb	2	; select bank2
  7070  050B' 0800'              	movf	_main$672^(0+256),w
  7071  050C' 0020               	movlb	0	; select bank0
  7072  050D' 0084'              	movwf	___awdiv@dividend
  7073  050E' 3180' 2000' 3180'  	fcall	___awdiv
  7074  0511' 0022               	movlb	2	; select bank2
  7075  0512' 0800'              	movf	(main@i+1)^(0+256),w
  7076  0513' 3A80               	xorlw	128
  7077  0514' 0021               	movlb	1	; select bank1
  7078  0515' 0080'              	movwf	??_main^(0+128)
  7079  0516' 0020               	movlb	0	; select bank0
  7080  0517' 0803'              	movf	?___awdiv+1,w
  7081  0518' 3A80               	xorlw	128
  7082  0519' 0021               	movlb	1	; select bank1
  7083  051A' 0200'              	subwf	??_main^(0+128),w
  7084  051B' 1D03               	skipz
  7085  051C' 2800'              	goto	u4295
  7086  051D' 0020               	movlb	0	; select bank0
  7087  051E' 0802'              	movf	?___awdiv,w
  7088  051F' 0022               	movlb	2	; select bank2
  7089  0520' 0200'              	subwf	main@i^(0+256),w
  7090  0521'                    u4295:	
  7091  0521' 1C03               	skipc
  7092  0522' 2800'              	goto	l4350
  7093                           
  7094                           ;main.c: 219: }
  7095                           ;main.c: 222: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  7096  0523' 303D               	movlw	61
  7097  0524' 0021               	movlb	1	; select bank1
  7098  0525' 0081'              	movwf	(??_main^(0+128)+1)
  7099  0526' 30E1               	movlw	225
  7100  0527' 0080'              	movwf	??_main^(0+128)
  7101  0528' 303F               	movlw	63
  7102  0529'                    u4497:	
  7103  0529' 0B89               	decfsz	9,f
  7104  052A' 2800'              	goto	u4497
  7105  052B' 0B80'              	decfsz	??_main^(0+128),f
  7106  052C' 2800'              	goto	u4497
  7107  052D' 0B81'              	decfsz	(??_main^(0+128)+1),f
  7108  052E' 2800'              	goto	u4497
  7109  052F' 3200               	nop2
  7110                           
  7111                           ;main.c: 223: display_clear();
  7112  0530' 3180' 2000' 3180'  	fcall	_display_clear
  7113                           
  7114                           ;main.c: 224: display_update();
  7115  0533' 3180' 2000' 3180'  	fcall	_display_update
  7116                           
  7117                           ;main.c: 227: int16_t j = 0;
  7118  0536' 0022               	movlb	2	; select bank2
  7119  0537' 0180'              	clrf	main@j^(0+256)
  7120  0538' 0180'              	clrf	(main@j+1)^(0+256)
  7121                           
  7122                           ;main.c: 228: for( j = 0 ; j < 4 ; j++ ){
  7123  0539' 0180'              	clrf	main@j^(0+256)
  7124  053A' 0180'              	clrf	(main@j+1)^(0+256)
  7125  053B' 0800'              	movf	(main@j+1)^(0+256),w
  7126  053C' 3A80               	xorlw	128
  7127  053D' 0021               	movlb	1	; select bank1
  7128  053E' 0080'              	movwf	??_main^(0+128)
  7129  053F' 3080               	movlw	128
  7130  0540' 0200'              	subwf	??_main^(0+128),w
  7131  0541' 1D03               	skipz
  7132  0542' 2800'              	goto	u4305
  7133  0543' 3004               	movlw	4
  7134  0544' 0022               	movlb	2	; select bank2
  7135  0545' 0200'              	subwf	main@j^(0+256),w
  7136  0546'                    u4305:	
  7137  0546' 1803               	btfsc	3,0
  7138  0547' 2800'              	goto	l4404
  7139  0548'                    l4380:	
  7140                           
  7141                           ;main.c: 229: gfx_setRotation(j);
  7142  0548' 0022               	movlb	2	; select bank2
  7143  0549' 0800'              	movf	main@j^(0+256),w
  7144  054A' 3180' 2000' 3180'  	fcall	_gfx_setRotation
  7145                           
  7146                           ;main.c: 230: for( i = 0 ; i < (((gfx_width()) < (gfx_height())) ? (gfx_width()) : (gfx_
      +                          height()))/2; i+=5) {
  7147  054D' 0022               	movlb	2	; select bank2
  7148  054E' 0180'              	clrf	main@i^(0+256)
  7149  054F' 0180'              	clrf	(main@i+1)^(0+256)
  7150  0550' 2800'              	goto	l4394
  7151  0551'                    l4384:	
  7152                           
  7153                           ;main.c: 231: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  7154                           ;main.c: 232: gfx_width()/2-i, gfx_height()/2+i,
  7155                           ;main.c: 233: gfx_width()/2+i, gfx_height()/2+i, 1);
  7156  0551' 3002               	movlw	2
  7157  0552' 0020               	movlb	0	; select bank0
  7158  0553' 0082'              	movwf	___awdiv@divisor
  7159  0554' 3000               	movlw	0
  7160  0555' 0083'              	movwf	___awdiv@divisor+1
  7161  0556' 3180' 2000' 3180'  	fcall	_gfx_width
  7162  0559' 0020               	movlb	0	; select bank0
  7163  055A' 0801'              	movf	?_gfx_width+1,w
  7164  055B' 0085'              	movwf	___awdiv@dividend+1
  7165  055C' 0800'              	movf	?_gfx_width,w
  7166  055D' 0084'              	movwf	___awdiv@dividend
  7167  055E' 3180' 2000' 3180'  	fcall	___awdiv
  7168  0561' 0020               	movlb	0	; select bank0
  7169  0562' 0803'              	movf	?___awdiv+1,w
  7170  0563' 0022               	movlb	2	; select bank2
  7171  0564' 0080'              	movwf	(_main$1408+1)^(0+256)
  7172  0565' 0020               	movlb	0	; select bank0
  7173  0566' 0802'              	movf	?___awdiv,w
  7174  0567' 0022               	movlb	2	; select bank2
  7175  0568' 0080'              	movwf	_main$1408^(0+256)
  7176                           
  7177                           ;main.c: 231: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  7178                           ;main.c: 232: gfx_width()/2-i, gfx_height()/2+i,
  7179                           ;main.c: 233: gfx_width()/2+i, gfx_height()/2+i, 1);
  7180  0569' 0900'              	comf	main@i^(0+256),w
  7181  056A' 0021               	movlb	1	; select bank1
  7182  056B' 0080'              	movwf	??_main^(0+128)
  7183  056C' 0022               	movlb	2	; select bank2
  7184  056D' 0900'              	comf	(main@i+1)^(0+256),w
  7185  056E' 0021               	movlb	1	; select bank1
  7186  056F' 0081'              	movwf	(??_main^(0+128)+1)
  7187  0570' 0A80'              	incf	??_main^(0+128),f
  7188  0571' 1903               	skipnz
  7189  0572' 0A81'              	incf	(??_main^(0+128)+1),f
  7190  0573' 3002               	movlw	2
  7191  0574' 0020               	movlb	0	; select bank0
  7192  0575' 0082'              	movwf	___awdiv@divisor
  7193  0576' 3000               	movlw	0
  7194  0577' 0083'              	movwf	___awdiv@divisor+1
  7195  0578' 3180' 2000' 3180'  	fcall	_gfx_height
  7196  057B' 0020               	movlb	0	; select bank0
  7197  057C' 0801'              	movf	?_gfx_height+1,w
  7198  057D' 0085'              	movwf	___awdiv@dividend+1
  7199  057E' 0800'              	movf	?_gfx_height,w
  7200  057F' 0084'              	movwf	___awdiv@dividend
  7201  0580' 3180' 2000' 3180'  	fcall	___awdiv
  7202  0583' 0021               	movlb	1	; select bank1
  7203  0584' 0800'              	movf	??_main^(0+128),w
  7204  0585' 0020               	movlb	0	; select bank0
  7205  0586' 0702'              	addwf	?___awdiv,w
  7206  0587' 0022               	movlb	2	; select bank2
  7207  0588' 0080'              	movwf	_main$1409^(0+256)
  7208  0589' 0021               	movlb	1	; select bank1
  7209  058A' 0800'              	movf	(??_main+1)^(0+128),w
  7210  058B' 0020               	movlb	0	; select bank0
  7211  058C' 3D03'              	addwfc	?___awdiv+1,w
  7212  058D' 0022               	movlb	2	; select bank2
  7213  058E' 0080'              	movwf	(_main$1409+1)^(0+256)
  7214                           
  7215                           ;main.c: 231: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  7216                           ;main.c: 232: gfx_width()/2-i, gfx_height()/2+i,
  7217                           ;main.c: 233: gfx_width()/2+i, gfx_height()/2+i, 1);
  7218  058F' 0900'              	comf	main@i^(0+256),w
  7219  0590' 0021               	movlb	1	; select bank1
  7220  0591' 0080'              	movwf	??_main^(0+128)
  7221  0592' 0022               	movlb	2	; select bank2
  7222  0593' 0900'              	comf	(main@i+1)^(0+256),w
  7223  0594' 0021               	movlb	1	; select bank1
  7224  0595' 0081'              	movwf	(??_main^(0+128)+1)
  7225  0596' 0A80'              	incf	??_main^(0+128),f
  7226  0597' 1903               	skipnz
  7227  0598' 0A81'              	incf	(??_main^(0+128)+1),f
  7228  0599' 3002               	movlw	2
  7229  059A' 0020               	movlb	0	; select bank0
  7230  059B' 0082'              	movwf	___awdiv@divisor
  7231  059C' 3000               	movlw	0
  7232  059D' 0083'              	movwf	___awdiv@divisor+1
  7233  059E' 3180' 2000' 3180'  	fcall	_gfx_width
  7234  05A1' 0020               	movlb	0	; select bank0
  7235  05A2' 0801'              	movf	?_gfx_width+1,w
  7236  05A3' 0085'              	movwf	___awdiv@dividend+1
  7237  05A4' 0800'              	movf	?_gfx_width,w
  7238  05A5' 0084'              	movwf	___awdiv@dividend
  7239  05A6' 3180' 2000' 3180'  	fcall	___awdiv
  7240  05A9' 0021               	movlb	1	; select bank1
  7241  05AA' 0800'              	movf	??_main^(0+128),w
  7242  05AB' 0020               	movlb	0	; select bank0
  7243  05AC' 0702'              	addwf	?___awdiv,w
  7244  05AD' 0022               	movlb	2	; select bank2
  7245  05AE' 0080'              	movwf	_main$1410^(0+256)
  7246  05AF' 0021               	movlb	1	; select bank1
  7247  05B0' 0800'              	movf	(??_main+1)^(0+128),w
  7248  05B1' 0020               	movlb	0	; select bank0
  7249  05B2' 3D03'              	addwfc	?___awdiv+1,w
  7250  05B3' 0022               	movlb	2	; select bank2
  7251  05B4' 0080'              	movwf	(_main$1410+1)^(0+256)
  7252                           
  7253                           ;main.c: 231: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  7254                           ;main.c: 232: gfx_width()/2-i, gfx_height()/2+i,
  7255                           ;main.c: 233: gfx_width()/2+i, gfx_height()/2+i, 1);
  7256  05B5' 3002               	movlw	2
  7257  05B6' 0020               	movlb	0	; select bank0
  7258  05B7' 0082'              	movwf	___awdiv@divisor
  7259  05B8' 3000               	movlw	0
  7260  05B9' 0083'              	movwf	___awdiv@divisor+1
  7261  05BA' 3180' 2000' 3180'  	fcall	_gfx_height
  7262  05BD' 0020               	movlb	0	; select bank0
  7263  05BE' 0801'              	movf	?_gfx_height+1,w
  7264  05BF' 0085'              	movwf	___awdiv@dividend+1
  7265  05C0' 0800'              	movf	?_gfx_height,w
  7266  05C1' 0084'              	movwf	___awdiv@dividend
  7267  05C2' 3180' 2000' 3180'  	fcall	___awdiv
  7268  05C5' 0022               	movlb	2	; select bank2
  7269  05C6' 0800'              	movf	main@i^(0+256),w
  7270  05C7' 0020               	movlb	0	; select bank0
  7271  05C8' 0702'              	addwf	?___awdiv,w
  7272  05C9' 0022               	movlb	2	; select bank2
  7273  05CA' 0080'              	movwf	_main$1411^(0+256)
  7274  05CB' 0800'              	movf	(main@i+1)^(0+256),w
  7275  05CC' 0020               	movlb	0	; select bank0
  7276  05CD' 3D03'              	addwfc	?___awdiv+1,w
  7277  05CE' 0022               	movlb	2	; select bank2
  7278  05CF' 0080'              	movwf	(_main$1411+1)^(0+256)
  7279                           
  7280                           ;main.c: 231: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  7281                           ;main.c: 232: gfx_width()/2-i, gfx_height()/2+i,
  7282                           ;main.c: 233: gfx_width()/2+i, gfx_height()/2+i, 1);
  7283  05D0' 3002               	movlw	2
  7284  05D1' 0020               	movlb	0	; select bank0
  7285  05D2' 0082'              	movwf	___awdiv@divisor
  7286  05D3' 3000               	movlw	0
  7287  05D4' 0083'              	movwf	___awdiv@divisor+1
  7288  05D5' 3180' 2000' 3180'  	fcall	_gfx_width
  7289  05D8' 0020               	movlb	0	; select bank0
  7290  05D9' 0801'              	movf	?_gfx_width+1,w
  7291  05DA' 0085'              	movwf	___awdiv@dividend+1
  7292  05DB' 0800'              	movf	?_gfx_width,w
  7293  05DC' 0084'              	movwf	___awdiv@dividend
  7294  05DD' 3180' 2000' 3180'  	fcall	___awdiv
  7295  05E0' 0022               	movlb	2	; select bank2
  7296  05E1' 0800'              	movf	main@i^(0+256),w
  7297  05E2' 0020               	movlb	0	; select bank0
  7298  05E3' 0702'              	addwf	?___awdiv,w
  7299  05E4' 0022               	movlb	2	; select bank2
  7300  05E5' 0080'              	movwf	_main$1412^(0+256)
  7301  05E6' 0800'              	movf	(main@i+1)^(0+256),w
  7302  05E7' 0020               	movlb	0	; select bank0
  7303  05E8' 3D03'              	addwfc	?___awdiv+1,w
  7304  05E9' 0022               	movlb	2	; select bank2
  7305  05EA' 0080'              	movwf	(_main$1412+1)^(0+256)
  7306                           
  7307                           ;main.c: 231: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  7308                           ;main.c: 232: gfx_width()/2-i, gfx_height()/2+i,
  7309                           ;main.c: 233: gfx_width()/2+i, gfx_height()/2+i, 1);
  7310  05EB' 3002               	movlw	2
  7311  05EC' 0020               	movlb	0	; select bank0
  7312  05ED' 0082'              	movwf	___awdiv@divisor
  7313  05EE' 3000               	movlw	0
  7314  05EF' 0083'              	movwf	___awdiv@divisor+1
  7315  05F0' 3180' 2000' 3180'  	fcall	_gfx_height
  7316  05F3' 0020               	movlb	0	; select bank0
  7317  05F4' 0801'              	movf	?_gfx_height+1,w
  7318  05F5' 0085'              	movwf	___awdiv@dividend+1
  7319  05F6' 0800'              	movf	?_gfx_height,w
  7320  05F7' 0084'              	movwf	___awdiv@dividend
  7321  05F8' 3180' 2000' 3180'  	fcall	___awdiv
  7322  05FB' 0022               	movlb	2	; select bank2
  7323  05FC' 0800'              	movf	main@i^(0+256),w
  7324  05FD' 0020               	movlb	0	; select bank0
  7325  05FE' 0702'              	addwf	?___awdiv,w
  7326  05FF' 0022               	movlb	2	; select bank2
  7327  0600' 0080'              	movwf	_main$1413^(0+256)
  7328  0601' 0800'              	movf	(main@i+1)^(0+256),w
  7329  0602' 0020               	movlb	0	; select bank0
  7330  0603' 3D03'              	addwfc	?___awdiv+1,w
  7331  0604' 0022               	movlb	2	; select bank2
  7332  0605' 0080'              	movwf	(_main$1413+1)^(0+256)
  7333                           
  7334                           ;main.c: 231: gfx_drawTriangle(gfx_width()/2, gfx_height()/2-i,
  7335                           ;main.c: 232: gfx_width()/2-i, gfx_height()/2+i,
  7336                           ;main.c: 233: gfx_width()/2+i, gfx_height()/2+i, 1);
  7337  0606' 0800'              	movf	(_main$1408+1)^(0+256),w
  7338  0607' 0021               	movlb	1	; select bank1
  7339  0608' 0080'              	movwf	(gfx_drawTriangle@x0+1)^(0+128)
  7340  0609' 0022               	movlb	2	; select bank2
  7341  060A' 0800'              	movf	_main$1408^(0+256),w
  7342  060B' 0021               	movlb	1	; select bank1
  7343  060C' 0080'              	movwf	gfx_drawTriangle@x0^(0+128)
  7344  060D' 0022               	movlb	2	; select bank2
  7345  060E' 0800'              	movf	(_main$1409+1)^(0+256),w
  7346  060F' 0021               	movlb	1	; select bank1
  7347  0610' 0080'              	movwf	(gfx_drawTriangle@y0+1)^(0+128)
  7348  0611' 0022               	movlb	2	; select bank2
  7349  0612' 0800'              	movf	_main$1409^(0+256),w
  7350  0613' 0021               	movlb	1	; select bank1
  7351  0614' 0080'              	movwf	gfx_drawTriangle@y0^(0+128)
  7352  0615' 0022               	movlb	2	; select bank2
  7353  0616' 0800'              	movf	(_main$1410+1)^(0+256),w
  7354  0617' 0021               	movlb	1	; select bank1
  7355  0618' 0080'              	movwf	(gfx_drawTriangle@x1+1)^(0+128)
  7356  0619' 0022               	movlb	2	; select bank2
  7357  061A' 0800'              	movf	_main$1410^(0+256),w
  7358  061B' 0021               	movlb	1	; select bank1
  7359  061C' 0080'              	movwf	gfx_drawTriangle@x1^(0+128)
  7360  061D' 0022               	movlb	2	; select bank2
  7361  061E' 0800'              	movf	(_main$1411+1)^(0+256),w
  7362  061F' 0021               	movlb	1	; select bank1
  7363  0620' 0080'              	movwf	(gfx_drawTriangle@y1+1)^(0+128)
  7364  0621' 0022               	movlb	2	; select bank2
  7365  0622' 0800'              	movf	_main$1411^(0+256),w
  7366  0623' 0021               	movlb	1	; select bank1
  7367  0624' 0080'              	movwf	gfx_drawTriangle@y1^(0+128)
  7368  0625' 0022               	movlb	2	; select bank2
  7369  0626' 0800'              	movf	(_main$1412+1)^(0+256),w
  7370  0627' 0021               	movlb	1	; select bank1
  7371  0628' 0080'              	movwf	(gfx_drawTriangle@x2+1)^(0+128)
  7372  0629' 0022               	movlb	2	; select bank2
  7373  062A' 0800'              	movf	_main$1412^(0+256),w
  7374  062B' 0021               	movlb	1	; select bank1
  7375  062C' 0080'              	movwf	gfx_drawTriangle@x2^(0+128)
  7376  062D' 0022               	movlb	2	; select bank2
  7377  062E' 0800'              	movf	(_main$1413+1)^(0+256),w
  7378  062F' 0021               	movlb	1	; select bank1
  7379  0630' 0080'              	movwf	(gfx_drawTriangle@y2+1)^(0+128)
  7380  0631' 0022               	movlb	2	; select bank2
  7381  0632' 0800'              	movf	_main$1413^(0+256),w
  7382  0633' 0021               	movlb	1	; select bank1
  7383  0634' 0080'              	movwf	gfx_drawTriangle@y2^(0+128)
  7384  0635' 3001               	movlw	1
  7385  0636' 0080'              	movwf	gfx_drawTriangle@color^(0+128)
  7386  0637' 3000               	movlw	0
  7387  0638' 0081'              	movwf	(gfx_drawTriangle@color^(0+128)+1)
  7388  0639' 3180' 2000' 3180'  	fcall	_gfx_drawTriangle
  7389                           
  7390                           ;main.c: 234: display_update();
  7391  063C' 3180' 2000' 3180'  	fcall	_display_update
  7392                           
  7393                           ;main.c: 235: _delay((unsigned long)((200)*(16000000/4000.0)));
  7394  063F' 3005               	movlw	5
  7395  0640' 0021               	movlb	1	; select bank1
  7396  0641' 0081'              	movwf	(??_main^(0+128)+1)
  7397  0642' 300F               	movlw	15
  7398  0643' 0080'              	movwf	??_main^(0+128)
  7399  0644' 30F1               	movlw	241
  7400  0645'                    u4507:	
  7401  0645' 0B89               	decfsz	9,f
  7402  0646' 2800'              	goto	u4507
  7403  0647' 0B80'              	decfsz	??_main^(0+128),f
  7404  0648' 2800'              	goto	u4507
  7405  0649' 0B81'              	decfsz	(??_main^(0+128)+1),f
  7406  064A' 2800'              	goto	u4507
  7407  064B' 3005               	movlw	5
  7408  064C' 0022               	movlb	2	; select bank2
  7409  064D' 0780'              	addwf	main@i^(0+256),f
  7410  064E' 3000               	movlw	0
  7411  064F' 3D80'              	addwfc	(main@i+1)^(0+256),f
  7412  0650'                    l4394:	
  7413  0650' 3180' 2000' 3180'  	fcall	_gfx_width
  7414  0653' 0020               	movlb	0	; select bank0
  7415  0654' 0800'              	movf	?_gfx_width,w
  7416  0655' 0021               	movlb	1	; select bank1
  7417  0656' 0080'              	movwf	??_main^(0+128)
  7418  0657' 0020               	movlb	0	; select bank0
  7419  0658' 0801'              	movf	?_gfx_width+1,w
  7420  0659' 0021               	movlb	1	; select bank1
  7421  065A' 0081'              	movwf	(??_main^(0+128)+1)
  7422  065B' 3180' 2000' 3180'  	fcall	_gfx_height
  7423  065E' 0021               	movlb	1	; select bank1
  7424  065F' 0800'              	movf	(??_main+1)^(0+128),w
  7425  0660' 3A80               	xorlw	128
  7426  0661' 0080'              	movwf	(??_main+2)^(0+128)
  7427  0662' 0020               	movlb	0	; select bank0
  7428  0663' 0801'              	movf	?_gfx_height+1,w
  7429  0664' 3A80               	xorlw	128
  7430  0665' 0021               	movlb	1	; select bank1
  7431  0666' 0200'              	subwf	(??_main+2)^(0+128),w
  7432  0667' 1D03               	skipz
  7433  0668' 2800'              	goto	u4315
  7434  0669' 0020               	movlb	0	; select bank0
  7435  066A' 0800'              	movf	?_gfx_height,w
  7436  066B' 0021               	movlb	1	; select bank1
  7437  066C' 0200'              	subwf	??_main^(0+128),w
  7438  066D'                    u4315:	
  7439  066D' 1C03               	skipc
  7440  066E' 2800'              	goto	l4398
  7441  066F' 3180' 2000' 3180'  	fcall	_gfx_height
  7442  0672' 0020               	movlb	0	; select bank0
  7443  0673' 0801'              	movf	?_gfx_height+1,w
  7444  0674' 0022               	movlb	2	; select bank2
  7445  0675' 0080'              	movwf	(_main$674+1)^(0+256)
  7446  0676' 0020               	movlb	0	; select bank0
  7447  0677' 0800'              	movf	?_gfx_height,w
  7448  0678' 2800'              	goto	L2
  7449  0679'                    l4398:	
  7450  0679' 3180' 2000' 3180'  	fcall	_gfx_width
  7451  067C' 0020               	movlb	0	; select bank0
  7452  067D' 0801'              	movf	?_gfx_width+1,w
  7453  067E' 0022               	movlb	2	; select bank2
  7454  067F' 0080'              	movwf	(_main$674+1)^(0+256)
  7455  0680' 0020               	movlb	0	; select bank0
  7456  0681' 0800'              	movf	?_gfx_width,w
  7457  0682'                    L2:	
  7458  0682' 0022               	movlb	2	; select bank2
  7459  0683' 0080'              	movwf	_main$674^(0+256)
  7460  0684' 3002               	movlw	2
  7461  0685' 0020               	movlb	0	; select bank0
  7462  0686' 0082'              	movwf	___awdiv@divisor
  7463  0687' 3000               	movlw	0
  7464  0688' 0083'              	movwf	___awdiv@divisor+1
  7465  0689' 0022               	movlb	2	; select bank2
  7466  068A' 0800'              	movf	(_main$674+1)^(0+256),w
  7467  068B' 0020               	movlb	0	; select bank0
  7468  068C' 0085'              	movwf	___awdiv@dividend+1
  7469  068D' 0022               	movlb	2	; select bank2
  7470  068E' 0800'              	movf	_main$674^(0+256),w
  7471  068F' 0020               	movlb	0	; select bank0
  7472  0690' 0084'              	movwf	___awdiv@dividend
  7473  0691' 3180' 2000' 3180'  	fcall	___awdiv
  7474  0694' 0022               	movlb	2	; select bank2
  7475  0695' 0800'              	movf	(main@i+1)^(0+256),w
  7476  0696' 3A80               	xorlw	128
  7477  0697' 0021               	movlb	1	; select bank1
  7478  0698' 0080'              	movwf	??_main^(0+128)
  7479  0699' 0020               	movlb	0	; select bank0
  7480  069A' 0803'              	movf	?___awdiv+1,w
  7481  069B' 3A80               	xorlw	128
  7482  069C' 0021               	movlb	1	; select bank1
  7483  069D' 0200'              	subwf	??_main^(0+128),w
  7484  069E' 1D03               	skipz
  7485  069F' 2800'              	goto	u4325
  7486  06A0' 0020               	movlb	0	; select bank0
  7487  06A1' 0802'              	movf	?___awdiv,w
  7488  06A2' 0022               	movlb	2	; select bank2
  7489  06A3' 0200'              	subwf	main@i^(0+256),w
  7490  06A4'                    u4325:	
  7491  06A4' 1C03               	skipc
  7492  06A5' 2800'              	goto	l4384
  7493  06A6' 3001               	movlw	1
  7494  06A7' 0022               	movlb	2	; select bank2
  7495  06A8' 0780'              	addwf	main@j^(0+256),f
  7496  06A9' 3000               	movlw	0
  7497  06AA' 3D80'              	addwfc	(main@j+1)^(0+256),f
  7498  06AB' 0800'              	movf	(main@j+1)^(0+256),w
  7499  06AC' 3A80               	xorlw	128
  7500  06AD' 0021               	movlb	1	; select bank1
  7501  06AE' 0080'              	movwf	??_main^(0+128)
  7502  06AF' 3080               	movlw	128
  7503  06B0' 0200'              	subwf	??_main^(0+128),w
  7504  06B1' 1D03               	skipz
  7505  06B2' 2800'              	goto	u4335
  7506  06B3' 3004               	movlw	4
  7507  06B4' 0022               	movlb	2	; select bank2
  7508  06B5' 0200'              	subwf	main@j^(0+256),w
  7509  06B6'                    u4335:	
  7510  06B6' 1C03               	skipc
  7511  06B7' 2800'              	goto	l4380
  7512  06B8'                    l4404:	
  7513                           
  7514                           ;main.c: 236: }
  7515                           ;main.c: 237: }
  7516                           ;main.c: 239: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  7517  06B8' 303D               	movlw	61
  7518  06B9' 0021               	movlb	1	; select bank1
  7519  06BA' 0081'              	movwf	(??_main^(0+128)+1)
  7520  06BB' 30E1               	movlw	225
  7521  06BC' 0080'              	movwf	??_main^(0+128)
  7522  06BD' 303F               	movlw	63
  7523  06BE'                    u4517:	
  7524  06BE' 0B89               	decfsz	9,f
  7525  06BF' 2800'              	goto	u4517
  7526  06C0' 0B80'              	decfsz	??_main^(0+128),f
  7527  06C1' 2800'              	goto	u4517
  7528  06C2' 0B81'              	decfsz	(??_main^(0+128)+1),f
  7529  06C3' 2800'              	goto	u4517
  7530  06C4' 3200               	nop2
  7531                           
  7532                           ;main.c: 242: display_invert(1);
  7533  06C5' 3001               	movlw	1
  7534  06C6' 3180' 2000' 3180'  	fcall	_display_invert
  7535                           
  7536                           ;main.c: 243: _delay((unsigned long)(((1000))*(16000000/4000.0)));
  7537  06C9' 3015               	movlw	21
  7538  06CA' 0021               	movlb	1	; select bank1
  7539  06CB' 0081'              	movwf	(??_main^(0+128)+1)
  7540  06CC' 304B               	movlw	75
  7541  06CD' 0080'              	movwf	??_main^(0+128)
  7542  06CE' 30BE               	movlw	190
  7543  06CF'                    u4527:	
  7544  06CF' 0B89               	decfsz	9,f
  7545  06D0' 2800'              	goto	u4527
  7546  06D1' 0B80'              	decfsz	??_main^(0+128),f
  7547  06D2' 2800'              	goto	u4527
  7548  06D3' 0B81'              	decfsz	(??_main^(0+128)+1),f
  7549  06D4' 2800'              	goto	u4527
  7550  06D5' 0000               	nop
  7551                           
  7552                           ;main.c: 245: for( i = 256 ; i >= 0 ; i-- ){
  7553  06D6' 3000               	movlw	0
  7554  06D7' 0022               	movlb	2	; select bank2
  7555  06D8' 0080'              	movwf	main@i^(0+256)
  7556  06D9' 3001               	movlw	1
  7557  06DA' 0081'              	movwf	(main@i^(0+256)+1)
  7558  06DB' 1B80'              	btfsc	(main@i+1)^(0+256),7
  7559  06DC' 2800'              	goto	l4424
  7560  06DD'                    l4416:	
  7561                           
  7562                           ;main.c: 246: display_contrast(i);
  7563  06DD' 0800'              	movf	main@i^(0+256),w
  7564  06DE' 3180' 2000' 3180'  	fcall	_display_contrast
  7565                           
  7566                           ;main.c: 247: _delay((unsigned long)((10)*(16000000/4000.0)));
  7567  06E1' 3034               	movlw	52
  7568  06E2' 0021               	movlb	1	; select bank1
  7569  06E3' 0080'              	movwf	??_main^(0+128)
  7570  06E4' 30F1               	movlw	241
  7571  06E5'                    u4537:	
  7572  06E5' 0B89               	decfsz	9,f
  7573  06E6' 2800'              	goto	u4537
  7574  06E7' 0B80'              	decfsz	??_main^(0+128),f
  7575  06E8' 2800'              	goto	u4537
  7576  06E9' 3200               	nop2
  7577  06EA' 30FF               	movlw	255
  7578  06EB' 0022               	movlb	2	; select bank2
  7579  06EC' 0780'              	addwf	main@i^(0+256),f
  7580  06ED' 30FF               	movlw	255
  7581  06EE' 3D80'              	addwfc	(main@i+1)^(0+256),f
  7582  06EF' 1F80'              	btfss	(main@i+1)^(0+256),7
  7583  06F0' 2800'              	goto	l4416
  7584  06F1'                    l4424:	
  7585                           
  7586                           ;main.c: 248: }
  7587                           ;main.c: 252: display_invert(0);
  7588  06F1' 3000               	movlw	0
  7589  06F2' 3180' 2000' 3180'  	fcall	_display_invert
  7590                           
  7591                           ;main.c: 253: _delay((unsigned long)(((1000))*(16000000/4000.0)));
  7592  06F5' 3015               	movlw	21
  7593  06F6' 0021               	movlb	1	; select bank1
  7594  06F7' 0081'              	movwf	(??_main^(0+128)+1)
  7595  06F8' 304B               	movlw	75
  7596  06F9' 0080'              	movwf	??_main^(0+128)
  7597  06FA' 30BE               	movlw	190
  7598  06FB'                    u4547:	
  7599  06FB' 0B89               	decfsz	9,f
  7600  06FC' 2800'              	goto	u4547
  7601  06FD' 0B80'              	decfsz	??_main^(0+128),f
  7602  06FE' 2800'              	goto	u4547
  7603  06FF' 0B81'              	decfsz	(??_main^(0+128)+1),f
  7604  0700' 2800'              	goto	u4547
  7605  0701' 0000               	nop
  7606                           
  7607                           ;main.c: 254: for( i = 0 ; i < 256 ; i++ ){
  7608  0702' 0022               	movlb	2	; select bank2
  7609  0703' 0180'              	clrf	main@i^(0+256)
  7610  0704' 0180'              	clrf	(main@i+1)^(0+256)
  7611  0705' 0800'              	movf	(main@i+1)^(0+256),w
  7612  0706' 3A80               	xorlw	128
  7613  0707' 0021               	movlb	1	; select bank1
  7614  0708' 0080'              	movwf	??_main^(0+128)
  7615  0709' 3081               	movlw	129
  7616  070A' 0200'              	subwf	??_main^(0+128),w
  7617  070B' 1D03               	skipz
  7618  070C' 2800'              	goto	u4365
  7619  070D' 3000               	movlw	0
  7620  070E' 0022               	movlb	2	; select bank2
  7621  070F' 0200'              	subwf	main@i^(0+256),w
  7622  0710'                    u4365:	
  7623  0710' 1803               	btfsc	3,0
  7624  0711' 2800'              	goto	l4442
  7625  0712'                    l4434:	
  7626                           
  7627                           ;main.c: 255: display_contrast(i);
  7628  0712' 0022               	movlb	2	; select bank2
  7629  0713' 0800'              	movf	main@i^(0+256),w
  7630  0714' 3180' 2000' 3180'  	fcall	_display_contrast
  7631                           
  7632                           ;main.c: 256: _delay((unsigned long)((10)*(16000000/4000.0)));
  7633  0717' 3034               	movlw	52
  7634  0718' 0021               	movlb	1	; select bank1
  7635  0719' 0080'              	movwf	??_main^(0+128)
  7636  071A' 30F1               	movlw	241
  7637  071B'                    u4557:	
  7638  071B' 0B89               	decfsz	9,f
  7639  071C' 2800'              	goto	u4557
  7640  071D' 0B80'              	decfsz	??_main^(0+128),f
  7641  071E' 2800'              	goto	u4557
  7642  071F' 3200               	nop2
  7643  0720' 3001               	movlw	1
  7644  0721' 0022               	movlb	2	; select bank2
  7645  0722' 0780'              	addwf	main@i^(0+256),f
  7646  0723' 3000               	movlw	0
  7647  0724' 3D80'              	addwfc	(main@i+1)^(0+256),f
  7648  0725' 0800'              	movf	(main@i+1)^(0+256),w
  7649  0726' 3A80               	xorlw	128
  7650  0727' 0021               	movlb	1	; select bank1
  7651  0728' 0080'              	movwf	??_main^(0+128)
  7652  0729' 3081               	movlw	129
  7653  072A' 0200'              	subwf	??_main^(0+128),w
  7654  072B' 1D03               	skipz
  7655  072C' 2800'              	goto	u4375
  7656  072D' 3000               	movlw	0
  7657  072E' 0022               	movlb	2	; select bank2
  7658  072F' 0200'              	subwf	main@i^(0+256),w
  7659  0730'                    u4375:	
  7660  0730' 1C03               	skipc
  7661  0731' 2800'              	goto	l4434
  7662  0732'                    l4442:	
  7663                           
  7664                           ;main.c: 257: }
  7665                           ;main.c: 260: _delay((unsigned long)(((3000))*(16000000/4000.0)));
  7666  0732' 303D               	movlw	61
  7667  0733' 0021               	movlb	1	; select bank1
  7668  0734' 0081'              	movwf	(??_main^(0+128)+1)
  7669  0735' 30E1               	movlw	225
  7670  0736' 0080'              	movwf	??_main^(0+128)
  7671  0737' 303F               	movlw	63
  7672  0738'                    u4567:	
  7673  0738' 0B89               	decfsz	9,f
  7674  0739' 2800'              	goto	u4567
  7675  073A' 0B80'              	decfsz	??_main^(0+128),f
  7676  073B' 2800'              	goto	u4567
  7677  073C' 0B81'              	decfsz	(??_main^(0+128)+1),f
  7678  073D' 2800'              	goto	u4567
  7679  073E' 3200               	nop2
  7680                           
  7681                           ;main.c: 262: }
  7682  073F' 2800'              	goto	l4150
  7683  0740'                    __end_of_main:	
  7684                           
  7685                           	psect	text1
  7686  0000'                    __ptext1:	
  7687 ;; *************** function _gfx_width *****************
  7688 ;; Defined at:
  7689 ;;		line 282 in file "ssd1306.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;		None
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;		None
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  2    0[BANK0 ] int 
  7696 ;; Registers used:
  7697 ;;		wreg
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7703 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7706 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7707 ;;Total ram usage:        2 bytes
  7708 ;; Hardware stack levels used:    1
  7709 ;; Hardware stack levels required when called:    3
  7710 ;; This function calls:
  7711 ;;		Nothing
  7712 ;; This function is called by:
  7713 ;;		_main
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           
  7718                           ;psect for function _gfx_width
  7719  0000'                    _gfx_width:	
  7720                           
  7721                           ;ssd1306.c: 283: return _width;
  7722                           
  7723                           ;incstack = 0
  7724                           ; Regs used in _gfx_width: [wreg]
  7725  0000' 0021               	movlb	1	; select bank1
  7726  0001' 0800'              	movf	(__width+1)^(0+128),w
  7727  0002' 0020               	movlb	0	; select bank0
  7728  0003' 0081'              	movwf	?_gfx_width+1
  7729  0004' 0021               	movlb	1	; select bank1
  7730  0005' 0800'              	movf	__width^(0+128),w
  7731  0006' 0020               	movlb	0	; select bank0
  7732  0007' 0080'              	movwf	?_gfx_width
  7733  0008' 0008               	return
  7734  0009'                    __end_of_gfx_width:	
  7735                           
  7736                           	psect	text2
  7737  0000'                    __ptext2:	
  7738 ;; *************** function _gfx_setTextSize *****************
  7739 ;; Defined at:
  7740 ;;		line 299 in file "ssd1306.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  size            1    wreg     unsigned char 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  size            1    4[BANK0 ] unsigned char 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  1    wreg      void 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7755 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7757 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7758 ;;Total ram usage:        5 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    3
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_main
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           
  7769                           ;psect for function _gfx_setTextSize
  7770  0000'                    _gfx_setTextSize:	
  7771                           
  7772                           ;incstack = 0
  7773                           ; Regs used in _gfx_setTextSize: [wreg+status,2+status,0]
  7774                           ;gfx_setTextSize@size stored from wreg
  7775  0000' 0020               	movlb	0	; select bank0
  7776  0001' 0084'              	movwf	gfx_setTextSize@size
  7777                           
  7778                           ;ssd1306.c: 300: textsize = (size > 0) ? size : 1;
  7779  0002' 0804'              	movf	gfx_setTextSize@size,w
  7780  0003' 1D03               	btfss	3,2
  7781  0004' 2800'              	goto	l3108
  7782  0005' 3001               	movlw	1
  7783  0006' 0082'              	movwf	_gfx_setTextSize$814
  7784  0007' 3000               	movlw	0
  7785  0008' 2800'              	goto	L3
  7786  0009'                    l3108:	
  7787  0009' 0804'              	movf	gfx_setTextSize@size,w
  7788  000A' 0080'              	movwf	??_gfx_setTextSize
  7789  000B' 0181'              	clrf	??_gfx_setTextSize+1
  7790  000C' 0800'              	movf	??_gfx_setTextSize,w
  7791  000D' 0082'              	movwf	_gfx_setTextSize$814
  7792  000E' 0801'              	movf	??_gfx_setTextSize+1,w
  7793  000F'                    L3:	
  7794  000F' 0083'              	movwf	_gfx_setTextSize$814+1
  7795  0010' 0802'              	movf	_gfx_setTextSize$814,w
  7796  0011' 0080'              	movwf	??_gfx_setTextSize
  7797  0012' 0800'              	movf	??_gfx_setTextSize,w
  7798  0013' 0021               	movlb	1	; select bank1
  7799  0014' 0080'              	movwf	_textsize^(0+128)
  7800  0015' 0008               	return
  7801  0016'                    __end_of_gfx_setTextSize:	
  7802                           
  7803                           	psect	text3
  7804  0000'                    __ptext3:	
  7805 ;; *************** function _gfx_setTextColor *****************
  7806 ;; Defined at:
  7807 ;;		line 303 in file "ssd1306.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  color           2    0[BANK0 ] unsigned int 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		wreg
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7821 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7824 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7825 ;;Total ram usage:        2 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    3
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_main
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           
  7836                           ;psect for function _gfx_setTextColor
  7837  0000'                    _gfx_setTextColor:	
  7838                           
  7839                           ;ssd1306.c: 306: textcolor = textbgcolor = color;
  7840                           
  7841                           ;incstack = 0
  7842                           ; Regs used in _gfx_setTextColor: [wreg]
  7843  0000' 0020               	movlb	0	; select bank0
  7844  0001' 0801'              	movf	gfx_setTextColor@color+1,w
  7845  0002' 0022               	movlb	2	; select bank2
  7846  0003' 0080'              	movwf	(_textbgcolor+1)^(0+256)
  7847  0004' 0020               	movlb	0	; select bank0
  7848  0005' 0800'              	movf	gfx_setTextColor@color,w
  7849  0006' 0022               	movlb	2	; select bank2
  7850  0007' 0080'              	movwf	_textbgcolor^(0+256)
  7851  0008' 0800'              	movf	(_textbgcolor+1)^(0+256),w
  7852  0009' 0080'              	movwf	(_textcolor+1)^(0+256)
  7853  000A' 0800'              	movf	_textbgcolor^(0+256),w
  7854  000B' 0080'              	movwf	_textcolor^(0+256)
  7855  000C' 0008               	return
  7856  000D'                    __end_of_gfx_setTextColor:	
  7857                           
  7858                           	psect	text4
  7859  0000'                    __ptext4:	
  7860 ;; *************** function _gfx_setRotation *****************
  7861 ;; Defined at:
  7862 ;;		line 317 in file "ssd1306.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  x               1    wreg     unsigned char 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  x               1    1[BANK0 ] unsigned char 
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7879 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7880 ;;Total ram usage:        2 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    3
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_main
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           
  7891                           ;psect for function _gfx_setRotation
  7892  0000'                    _gfx_setRotation:	
  7893                           
  7894                           ;incstack = 0
  7895                           ; Regs used in _gfx_setRotation: [wreg-fsr0h+status,2+status,0]
  7896                           ;gfx_setRotation@x stored from wreg
  7897  0000' 0020               	movlb	0	; select bank0
  7898  0001' 0081'              	movwf	gfx_setRotation@x
  7899                           
  7900                           ;ssd1306.c: 319: rotation = (x & 3);
  7901  0002' 0801'              	movf	gfx_setRotation@x,w
  7902  0003' 3903               	andlw	3
  7903  0004' 0080'              	movwf	??_gfx_setRotation
  7904  0005' 0800'              	movf	??_gfx_setRotation,w
  7905  0006' 0082'              	movwf	_rotation
  7906                           
  7907                           ;ssd1306.c: 320: switch( rotation ){
  7908  0007' 2800'              	goto	l3180
  7909  0008'                    l3174:	
  7910                           ;ssd1306.c: 321: case 0:
  7911                           
  7912                           
  7913                           ;ssd1306.c: 322: case 2:
  7914                           ;ssd1306.c: 323: _width = WIDTH;
  7915  0008' 0020               	movlb	0	; select bank0
  7916  0009' 0801'              	movf	_WIDTH+1,w
  7917  000A' 0021               	movlb	1	; select bank1
  7918  000B' 0080'              	movwf	(__width+1)^(0+128)
  7919  000C' 0020               	movlb	0	; select bank0
  7920  000D' 0800'              	movf	_WIDTH,w
  7921  000E' 0021               	movlb	1	; select bank1
  7922  000F' 0080'              	movwf	__width^(0+128)
  7923                           
  7924                           ;ssd1306.c: 324: _height = HEIGHT;
  7925  0010' 0801'              	movf	_HEIGHT+1,w
  7926  0011' 0022               	movlb	2	; select bank2
  7927  0012' 0080'              	movwf	(__height+1)^(0+256)
  7928  0013' 0800'              	movf	_HEIGHT,w
  7929  0014' 0080'              	movwf	__height^(0+256)
  7930                           
  7931                           ;ssd1306.c: 325: break;
  7932  0015' 0008               	return
  7933  0016'                    l3176:	
  7934                           ;ssd1306.c: 326: case 1:
  7935                           
  7936                           
  7937                           ;ssd1306.c: 327: case 3:
  7938                           ;ssd1306.c: 328: _width = HEIGHT;
  7939  0016' 0801'              	movf	_HEIGHT+1,w
  7940  0017' 0021               	movlb	1	; select bank1
  7941  0018' 0080'              	movwf	(__width+1)^(0+128)
  7942  0019' 0800'              	movf	_HEIGHT,w
  7943  001A' 0080'              	movwf	__width^(0+128)
  7944                           
  7945                           ;ssd1306.c: 329: _height = WIDTH;
  7946  001B' 0020               	movlb	0	; select bank0
  7947  001C' 0801'              	movf	_WIDTH+1,w
  7948  001D' 0022               	movlb	2	; select bank2
  7949  001E' 0080'              	movwf	(__height+1)^(0+256)
  7950  001F' 0020               	movlb	0	; select bank0
  7951  0020' 0800'              	movf	_WIDTH,w
  7952  0021' 0022               	movlb	2	; select bank2
  7953  0022' 0080'              	movwf	__height^(0+256)
  7954                           
  7955                           ;ssd1306.c: 331: }
  7956                           
  7957                           ;ssd1306.c: 330: break;
  7958  0023' 0008               	return
  7959  0024'                    l3180:	
  7960  0024' 0802'              	movf	_rotation,w
  7961                           
  7962                           ; Switch size 1, requested type "space"
  7963                           ; Number of cases is 4, Range of values is 0 to 3
  7964                           ; switch strategies available:
  7965                           ; Name         Instructions Cycles
  7966                           ; simple_byte           13     7 (average)
  7967                           ; direct_byte           14     6 (fixed)
  7968                           ; jumptable            260     6 (fixed)
  7969                           ;	Chosen strategy is simple_byte
  7970  0025' 3A00               	xorlw	0	; case 0
  7971  0026' 1903               	skipnz
  7972  0027' 2800'              	goto	l3174
  7973  0028' 3A01               	xorlw	1	; case 1
  7974  0029' 1903               	skipnz
  7975  002A' 2800'              	goto	l3176
  7976  002B' 3A03               	xorlw	3	; case 2
  7977  002C' 1903               	skipnz
  7978  002D' 2800'              	goto	l3174
  7979  002E' 3A01               	xorlw	1	; case 3
  7980  002F' 1903               	skipnz
  7981  0030' 2800'              	goto	l3176
  7982  0031' 2800'              	goto	l543
  7983  0032'                    l543:	
  7984  0032' 0008               	return
  7985  0033'                    __end_of_gfx_setRotation:	
  7986                           
  7987                           	psect	text5
  7988  0000'                    __ptext5:	
  7989 ;; *************** function _gfx_setCursor *****************
  7990 ;; Defined at:
  7991 ;;		line 294 in file "ssd1306.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  x               2    0[BANK0 ] int 
  7994 ;;  y               2    2[BANK0 ] int 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;		None
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		wreg
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8009 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8010 ;;Total ram usage:        4 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    3
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_main
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           
  8021                           ;psect for function _gfx_setCursor
  8022  0000'                    _gfx_setCursor:	
  8023                           
  8024                           ;ssd1306.c: 295: cursor_x = x;
  8025                           
  8026                           ;incstack = 0
  8027                           ; Regs used in _gfx_setCursor: [wreg]
  8028  0000' 0020               	movlb	0	; select bank0
  8029  0001' 0801'              	movf	gfx_setCursor@x+1,w
  8030  0002' 0022               	movlb	2	; select bank2
  8031  0003' 0080'              	movwf	(_cursor_x+1)^(0+256)
  8032  0004' 0020               	movlb	0	; select bank0
  8033  0005' 0800'              	movf	gfx_setCursor@x,w
  8034  0006' 0022               	movlb	2	; select bank2
  8035  0007' 0080'              	movwf	_cursor_x^(0+256)
  8036                           
  8037                           ;ssd1306.c: 296: cursor_y = y;
  8038  0008' 0020               	movlb	0	; select bank0
  8039  0009' 0803'              	movf	gfx_setCursor@y+1,w
  8040  000A' 0022               	movlb	2	; select bank2
  8041  000B' 0080'              	movwf	(_cursor_y+1)^(0+256)
  8042  000C' 0020               	movlb	0	; select bank0
  8043  000D' 0802'              	movf	gfx_setCursor@y,w
  8044  000E' 0022               	movlb	2	; select bank2
  8045  000F' 0080'              	movwf	_cursor_y^(0+256)
  8046  0010' 0008               	return
  8047  0011'                    __end_of_gfx_setCursor:	
  8048                           
  8049                           	psect	text6
  8050  0000'                    __ptext6:	
  8051 ;; *************** function _gfx_println *****************
  8052 ;; Defined at:
  8053 ;;		line 583 in file "ssd1306.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  s               2   59[BANK1 ] PTR const unsigned char 
  8056 ;;		 -> STR_3(7), STR_2(13), STR_1(16), 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8068 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8071 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8072 ;;Total ram usage:        2 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:   11
  8075 ;; This function calls:
  8076 ;;		_gfx_print
  8077 ;;		_gfx_write
  8078 ;; This function is called by:
  8079 ;;		_main
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           
  8084                           ;psect for function _gfx_println
  8085  0000'                    _gfx_println:	
  8086                           
  8087                           ;ssd1306.c: 584: gfx_print( s );
  8088                           
  8089                           ;incstack = 0
  8090                           ; Regs used in _gfx_println: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8091  0000' 0021               	movlb	1	; select bank1
  8092  0001' 0800'              	movf	(gfx_println@s+1)^(0+128),w
  8093  0002' 0080'              	movwf	(gfx_print@s+1)^(0+128)
  8094  0003' 0800'              	movf	gfx_println@s^(0+128),w
  8095  0004' 0080'              	movwf	gfx_print@s^(0+128)
  8096  0005' 3180' 2000' 3180'  	fcall	_gfx_print
  8097                           
  8098                           ;ssd1306.c: 585: gfx_write( '\n' );
  8099  0008' 300A               	movlw	10
  8100  0009' 3180' 2000'        	fcall	_gfx_write
  8101  000B' 0008               	return
  8102  000C'                    __end_of_gfx_println:	
  8103                           
  8104                           	psect	text7
  8105  0000'                    __ptext7:	
  8106 ;; *************** function _gfx_print *****************
  8107 ;; Defined at:
  8108 ;;		line 574 in file "ssd1306.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  s               2   53[BANK1 ] PTR const unsigned char 
  8111 ;;		 -> STR_3(7), STR_2(13), STR_1(16), 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  i               2   57[BANK1 ] unsigned int 
  8114 ;;  len             2   55[BANK1 ] unsigned int 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8124 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8125 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8127 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8128 ;;Total ram usage:        6 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:   10
  8131 ;; This function calls:
  8132 ;;		_gfx_write
  8133 ;;		_my_strlen
  8134 ;; This function is called by:
  8135 ;;		_gfx_println
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           
  8140                           ;psect for function _gfx_print
  8141  0000'                    _gfx_print:	
  8142                           
  8143                           ;ssd1306.c: 576: unsigned int len = my_strlen( s );
  8144                           
  8145                           ;incstack = 0
  8146                           ; Regs used in _gfx_print: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8147  0000' 0021               	movlb	1	; select bank1
  8148  0001' 0800'              	movf	(gfx_print@s+1)^(0+128),w
  8149  0002' 0020               	movlb	0	; select bank0
  8150  0003' 0081'              	movwf	my_strlen@s+1
  8151  0004' 0021               	movlb	1	; select bank1
  8152  0005' 0800'              	movf	gfx_print@s^(0+128),w
  8153  0006' 0020               	movlb	0	; select bank0
  8154  0007' 0080'              	movwf	my_strlen@s
  8155  0008' 3180' 2000' 3180'  	fcall	_my_strlen
  8156  000B' 0020               	movlb	0	; select bank0
  8157  000C' 0801'              	movf	?_my_strlen+1,w
  8158  000D' 0021               	movlb	1	; select bank1
  8159  000E' 0080'              	movwf	(gfx_print@len+1)^(0+128)
  8160  000F' 0020               	movlb	0	; select bank0
  8161  0010' 0800'              	movf	?_my_strlen,w
  8162  0011' 0021               	movlb	1	; select bank1
  8163  0012' 0080'              	movwf	gfx_print@len^(0+128)
  8164                           
  8165                           ;ssd1306.c: 577: unsigned int i = 0;
  8166  0013' 0180'              	clrf	gfx_print@i^(0+128)
  8167  0014' 0180'              	clrf	(gfx_print@i+1)^(0+128)
  8168                           
  8169                           ;ssd1306.c: 578: for( i = 0 ; i < len ; i++ ){
  8170  0015' 0180'              	clrf	gfx_print@i^(0+128)
  8171  0016' 0180'              	clrf	(gfx_print@i+1)^(0+128)
  8172  0017'                    l3998:	
  8173  0017' 0800'              	movf	(gfx_print@len+1)^(0+128),w
  8174  0018' 0200'              	subwf	(gfx_print@i+1)^(0+128),w
  8175  0019' 1D03               	skipz
  8176  001A' 2800'              	goto	u4055
  8177  001B' 0800'              	movf	gfx_print@len^(0+128),w
  8178  001C' 0200'              	subwf	gfx_print@i^(0+128),w
  8179  001D'                    u4055:	
  8180  001D' 1803               	btfsc	3,0
  8181  001E' 0008               	return
  8182                           
  8183                           ;ssd1306.c: 579: gfx_write( s[i] );
  8184  001F' 0800'              	movf	gfx_print@s^(0+128),w
  8185  0020' 0700'              	addwf	gfx_print@i^(0+128),w
  8186  0021' 0084               	movwf	4
  8187  0022' 0800'              	movf	(gfx_print@s+1)^(0+128),w
  8188  0023' 3D00'              	addwfc	(gfx_print@i+1)^(0+128),w
  8189  0024' 0085               	movwf	5
  8190  0025' 0800               	movf	0,w	;code access
  8191  0026' 3180' 2000' 3180'  	fcall	_gfx_write
  8192  0029' 3001               	movlw	1
  8193  002A' 0021               	movlb	1	; select bank1
  8194  002B' 0780'              	addwf	gfx_print@i^(0+128),f
  8195  002C' 3000               	movlw	0
  8196  002D' 3D80'              	addwfc	(gfx_print@i+1)^(0+128),f
  8197  002E' 2800'              	goto	l3998
  8198  002F'                    __end_of_gfx_print:	
  8199                           
  8200                           	psect	text8
  8201  0000'                    __ptext8:	
  8202 ;; *************** function _my_strlen *****************
  8203 ;; Defined at:
  8204 ;;		line 563 in file "ssd1306.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  8207 ;;		 -> STR_3(7), STR_2(13), STR_1(16), 
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  8210 ;;		 -> STR_3(7), STR_2(13), STR_1(16), 
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  2    0[BANK0 ] unsigned int 
  8213 ;; Registers used:
  8214 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8221 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8223 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8224 ;;Total ram usage:        6 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; Hardware stack levels required when called:    3
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		_gfx_print
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           
  8235                           ;psect for function _my_strlen
  8236  0000'                    _my_strlen:	
  8237                           
  8238                           ;ssd1306.c: 565: register const char * cp;
  8239                           ;ssd1306.c: 567: cp = s;
  8240                           
  8241                           ;incstack = 0
  8242                           ; Regs used in _my_strlen: [wreg-fsr0h+status,2+status,0]
  8243  0000' 0020               	movlb	0	; select bank0
  8244  0001' 0801'              	movf	my_strlen@s+1,w
  8245  0002' 0085'              	movwf	my_strlen@cp+1
  8246  0003' 0800'              	movf	my_strlen@s,w
  8247  0004' 0084'              	movwf	my_strlen@cp
  8248  0005'                    l2776:	
  8249                           ;ssd1306.c: 568: while(*cp) {
  8250                           
  8251  0005' 0804'              	movf	my_strlen@cp,w
  8252  0006' 0084               	movwf	4
  8253  0007' 0805'              	movf	my_strlen@cp+1,w
  8254  0008' 0085               	movwf	5
  8255  0009' 0012               	moviw fsr0++
  8256  000A' 1903               	btfsc	3,2
  8257  000B' 2800'              	goto	l2778
  8258                           
  8259                           ;ssd1306.c: 569: cp++;
  8260  000C' 3001               	movlw	1
  8261  000D' 0784'              	addwf	my_strlen@cp,f
  8262  000E' 3000               	movlw	0
  8263  000F' 3D85'              	addwfc	my_strlen@cp+1,f
  8264  0010' 2800'              	goto	l2776
  8265  0011'                    l2778:	
  8266                           
  8267                           ;ssd1306.c: 570: }
  8268                           ;ssd1306.c: 571: return cp-s;
  8269  0011' 0900'              	comf	my_strlen@s,w
  8270  0012' 0082'              	movwf	??_my_strlen
  8271  0013' 0901'              	comf	my_strlen@s+1,w
  8272  0014' 0083'              	movwf	??_my_strlen+1
  8273  0015' 0A82'              	incf	??_my_strlen,f
  8274  0016' 1903               	skipnz
  8275  0017' 0A83'              	incf	??_my_strlen+1,f
  8276  0018' 0804'              	movf	my_strlen@cp,w
  8277  0019' 0702'              	addwf	??_my_strlen,w
  8278  001A' 0080'              	movwf	?_my_strlen
  8279  001B' 0805'              	movf	my_strlen@cp+1,w
  8280  001C' 3D03'              	addwfc	??_my_strlen+1,w
  8281  001D' 0081'              	movwf	?_my_strlen+1
  8282  001E' 0008               	return
  8283  001F'                    __end_of_my_strlen:	
  8284                           
  8285                           	psect	text9
  8286  0000'                    __ptext9:	
  8287 ;; *************** function _gfx_write *****************
  8288 ;; Defined at:
  8289 ;;		line 547 in file "ssd1306.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;  ch              1    wreg     unsigned char 
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;  ch              1   77[BANK0 ] unsigned char 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8305 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8306 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8307 ;;Total ram usage:        8 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    9
  8310 ;; This function calls:
  8311 ;;		___wmul
  8312 ;;		_gfx_drawChar
  8313 ;; This function is called by:
  8314 ;;		_main
  8315 ;;		_gfx_print
  8316 ;;		_gfx_println
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _gfx_write
  8322  0000'                    _gfx_write:	
  8323                           
  8324                           ;incstack = 0
  8325                           ; Regs used in _gfx_write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8326                           ;gfx_write@ch stored from wreg
  8327  0000' 0020               	movlb	0	; select bank0
  8328  0001' 00CD'              	movwf	gfx_write@ch
  8329                           
  8330                           ;ssd1306.c: 548: if( ch == '\n' ){
  8331  0002' 300A               	movlw	10
  8332  0003' 064D'              	xorwf	gfx_write@ch,w
  8333  0004' 1D03               	btfss	3,2
  8334  0005' 2800'              	goto	l3934
  8335                           
  8336                           ;ssd1306.c: 549: cursor_y += textsize*8;
  8337  0006' 0021               	movlb	1	; select bank1
  8338  0007' 0800'              	movf	_textsize^(0+128),w
  8339  0008' 0080'              	movwf	??_gfx_write^(0+128)
  8340  0009' 0181'              	clrf	(??_gfx_write^(0+128)+1)
  8341  000A' 3580'              	lslf	??_gfx_write^(0+128),f
  8342  000B' 0D81'              	rlf	(??_gfx_write^(0+128)+1),f
  8343  000C' 3580'              	lslf	??_gfx_write^(0+128),f
  8344  000D' 0D81'              	rlf	(??_gfx_write^(0+128)+1),f
  8345  000E' 3580'              	lslf	??_gfx_write^(0+128),f
  8346  000F' 0D81'              	rlf	(??_gfx_write^(0+128)+1),f
  8347  0010' 0800'              	movf	??_gfx_write^(0+128),w
  8348  0011' 0022               	movlb	2	; select bank2
  8349  0012' 0780'              	addwf	_cursor_y^(0+256),f
  8350  0013' 0021               	movlb	1	; select bank1
  8351  0014' 0800'              	movf	(??_gfx_write+1)^(0+128),w
  8352  0015' 0022               	movlb	2	; select bank2
  8353  0016' 3D80'              	addwfc	(_cursor_y+1)^(0+256),f
  8354                           
  8355                           ;ssd1306.c: 550: cursor_x = 0;
  8356  0017' 0180'              	clrf	_cursor_x^(0+256)
  8357  0018' 0180'              	clrf	(_cursor_x+1)^(0+256)
  8358                           
  8359                           ;ssd1306.c: 551: }else if( ch == '\r' ){
  8360  0019' 0008               	return
  8361  001A'                    l3934:	
  8362  001A' 300D               	movlw	13
  8363  001B' 0020               	movlb	0	; select bank0
  8364  001C' 064D'              	xorwf	gfx_write@ch,w
  8365  001D' 1903               	btfsc	3,2
  8366  001E' 0008               	return
  8367                           
  8368                           ;ssd1306.c: 554: gfx_drawChar(cursor_x, cursor_y, ch, textcolor, textbgcolor, textsize);
  8369                           
  8370                           ;ssd1306.c: 553: }else{
  8371  001F' 0022               	movlb	2	; select bank2
  8372  0020' 0800'              	movf	(_cursor_x+1)^(0+256),w
  8373  0021' 0021               	movlb	1	; select bank1
  8374  0022' 0080'              	movwf	(gfx_drawChar@x+1)^(0+128)
  8375  0023' 0022               	movlb	2	; select bank2
  8376  0024' 0800'              	movf	_cursor_x^(0+256),w
  8377  0025' 0021               	movlb	1	; select bank1
  8378  0026' 0080'              	movwf	gfx_drawChar@x^(0+128)
  8379  0027' 0022               	movlb	2	; select bank2
  8380  0028' 0800'              	movf	(_cursor_y+1)^(0+256),w
  8381  0029' 0021               	movlb	1	; select bank1
  8382  002A' 0080'              	movwf	(gfx_drawChar@y+1)^(0+128)
  8383  002B' 0022               	movlb	2	; select bank2
  8384  002C' 0800'              	movf	_cursor_y^(0+256),w
  8385  002D' 0021               	movlb	1	; select bank1
  8386  002E' 0080'              	movwf	gfx_drawChar@y^(0+128)
  8387  002F' 0020               	movlb	0	; select bank0
  8388  0030' 084D'              	movf	gfx_write@ch,w
  8389  0031' 0021               	movlb	1	; select bank1
  8390  0032' 0080'              	movwf	??_gfx_write^(0+128)
  8391  0033' 0800'              	movf	??_gfx_write^(0+128),w
  8392  0034' 0080'              	movwf	gfx_drawChar@c^(0+128)
  8393  0035' 0022               	movlb	2	; select bank2
  8394  0036' 0800'              	movf	(_textcolor+1)^(0+256),w
  8395  0037' 0021               	movlb	1	; select bank1
  8396  0038' 0080'              	movwf	(gfx_drawChar@color+1)^(0+128)
  8397  0039' 0022               	movlb	2	; select bank2
  8398  003A' 0800'              	movf	_textcolor^(0+256),w
  8399  003B' 0021               	movlb	1	; select bank1
  8400  003C' 0080'              	movwf	gfx_drawChar@color^(0+128)
  8401  003D' 0022               	movlb	2	; select bank2
  8402  003E' 0800'              	movf	(_textbgcolor+1)^(0+256),w
  8403  003F' 0021               	movlb	1	; select bank1
  8404  0040' 0080'              	movwf	(gfx_drawChar@bg+1)^(0+128)
  8405  0041' 0022               	movlb	2	; select bank2
  8406  0042' 0800'              	movf	_textbgcolor^(0+256),w
  8407  0043' 0021               	movlb	1	; select bank1
  8408  0044' 0080'              	movwf	gfx_drawChar@bg^(0+128)
  8409  0045' 0800'              	movf	_textsize^(0+128),w
  8410  0046' 0080'              	movwf	(??_gfx_write+1)^(0+128)
  8411  0047' 0800'              	movf	(??_gfx_write+1)^(0+128),w
  8412  0048' 0080'              	movwf	gfx_drawChar@size^(0+128)
  8413  0049' 3180' 2000' 3180'  	fcall	_gfx_drawChar
  8414                           
  8415                           ;ssd1306.c: 555: cursor_x += textsize*6;
  8416  004C' 0021               	movlb	1	; select bank1
  8417  004D' 0800'              	movf	_textsize^(0+128),w
  8418  004E' 0080'              	movwf	??_gfx_write^(0+128)
  8419  004F' 0181'              	clrf	(??_gfx_write^(0+128)+1)
  8420  0050' 0800'              	movf	??_gfx_write^(0+128),w
  8421  0051' 0020               	movlb	0	; select bank0
  8422  0052' 0080'              	movwf	___wmul@multiplier
  8423  0053' 0021               	movlb	1	; select bank1
  8424  0054' 0800'              	movf	(??_gfx_write+1)^(0+128),w
  8425  0055' 0020               	movlb	0	; select bank0
  8426  0056' 0081'              	movwf	___wmul@multiplier+1
  8427  0057' 3006               	movlw	6
  8428  0058' 0082'              	movwf	___wmul@multiplicand
  8429  0059' 3000               	movlw	0
  8430  005A' 0083'              	movwf	___wmul@multiplicand+1
  8431  005B' 3180' 2000' 3180'  	fcall	___wmul
  8432  005E' 0020               	movlb	0	; select bank0
  8433  005F' 0800'              	movf	?___wmul,w
  8434  0060' 0022               	movlb	2	; select bank2
  8435  0061' 0780'              	addwf	_cursor_x^(0+256),f
  8436  0062' 0020               	movlb	0	; select bank0
  8437  0063' 0801'              	movf	?___wmul+1,w
  8438  0064' 0022               	movlb	2	; select bank2
  8439  0065' 3D80'              	addwfc	(_cursor_x+1)^(0+256),f
  8440                           
  8441                           ;ssd1306.c: 556: if( wrap && (cursor_x > (_width - textsize*6)) ){
  8442  0066' 0800'              	movf	_wrap^(0+256),w
  8443  0067' 1903               	btfsc	3,2
  8444  0068' 0008               	return
  8445  0069' 0021               	movlb	1	; select bank1
  8446  006A' 0800'              	movf	_textsize^(0+128),w
  8447  006B' 0080'              	movwf	??_gfx_write^(0+128)
  8448  006C' 0181'              	clrf	(??_gfx_write^(0+128)+1)
  8449  006D' 0800'              	movf	??_gfx_write^(0+128),w
  8450  006E' 0020               	movlb	0	; select bank0
  8451  006F' 0080'              	movwf	___wmul@multiplier
  8452  0070' 0021               	movlb	1	; select bank1
  8453  0071' 0800'              	movf	(??_gfx_write+1)^(0+128),w
  8454  0072' 0020               	movlb	0	; select bank0
  8455  0073' 0081'              	movwf	___wmul@multiplier+1
  8456  0074' 3006               	movlw	6
  8457  0075' 0082'              	movwf	___wmul@multiplicand
  8458  0076' 3000               	movlw	0
  8459  0077' 0083'              	movwf	___wmul@multiplicand+1
  8460  0078' 3180' 2000' 3180'  	fcall	___wmul
  8461  007B' 0020               	movlb	0	; select bank0
  8462  007C' 0900'              	comf	?___wmul,w
  8463  007D' 0021               	movlb	1	; select bank1
  8464  007E' 0080'              	movwf	(??_gfx_write+2)^(0+128)
  8465  007F' 0020               	movlb	0	; select bank0
  8466  0080' 0901'              	comf	?___wmul+1,w
  8467  0081' 0021               	movlb	1	; select bank1
  8468  0082' 0081'              	movwf	((??_gfx_write+2)^(0+128)+1)
  8469  0083' 0A80'              	incf	(??_gfx_write+2)^(0+128),f
  8470  0084' 1903               	skipnz
  8471  0085' 0A81'              	incf	((??_gfx_write+2)^(0+128)+1),f
  8472  0086' 0800'              	movf	__width^(0+128),w
  8473  0087' 0700'              	addwf	(??_gfx_write+2)^(0+128),w
  8474  0088' 0080'              	movwf	(??_gfx_write+4)^(0+128)
  8475  0089' 0800'              	movf	(__width+1)^(0+128),w
  8476  008A' 3D00'              	addwfc	(??_gfx_write+3)^(0+128),w
  8477  008B' 0080'              	movwf	(??_gfx_write+5)^(0+128)
  8478  008C' 0800'              	movf	(??_gfx_write+5)^(0+128),w
  8479  008D' 3A80               	xorlw	128
  8480  008E' 0080'              	movwf	(??_gfx_write+6)^(0+128)
  8481  008F' 0022               	movlb	2	; select bank2
  8482  0090' 0800'              	movf	(_cursor_x+1)^(0+256),w
  8483  0091' 3A80               	xorlw	128
  8484  0092' 0021               	movlb	1	; select bank1
  8485  0093' 0200'              	subwf	(??_gfx_write+6)^(0+128),w
  8486  0094' 1D03               	skipz
  8487  0095' 2800'              	goto	u4035
  8488  0096' 0022               	movlb	2	; select bank2
  8489  0097' 0800'              	movf	_cursor_x^(0+256),w
  8490  0098' 0021               	movlb	1	; select bank1
  8491  0099' 0200'              	subwf	(??_gfx_write+4)^(0+128),w
  8492  009A'                    u4035:	
  8493  009A' 1803               	skipnc
  8494  009B' 0008               	return
  8495                           
  8496                           ;ssd1306.c: 557: cursor_y += textsize*8;
  8497  009C' 0021               	movlb	1	; select bank1
  8498  009D' 0800'              	movf	_textsize^(0+128),w
  8499  009E' 0080'              	movwf	??_gfx_write^(0+128)
  8500  009F' 0181'              	clrf	(??_gfx_write^(0+128)+1)
  8501  00A0' 3580'              	lslf	??_gfx_write^(0+128),f
  8502  00A1' 0D81'              	rlf	(??_gfx_write^(0+128)+1),f
  8503  00A2' 3580'              	lslf	??_gfx_write^(0+128),f
  8504  00A3' 0D81'              	rlf	(??_gfx_write^(0+128)+1),f
  8505  00A4' 3580'              	lslf	??_gfx_write^(0+128),f
  8506  00A5' 0D81'              	rlf	(??_gfx_write^(0+128)+1),f
  8507  00A6' 0800'              	movf	??_gfx_write^(0+128),w
  8508  00A7' 0022               	movlb	2	; select bank2
  8509  00A8' 0780'              	addwf	_cursor_y^(0+256),f
  8510  00A9' 0021               	movlb	1	; select bank1
  8511  00AA' 0800'              	movf	(??_gfx_write+1)^(0+128),w
  8512  00AB' 0022               	movlb	2	; select bank2
  8513  00AC' 3D80'              	addwfc	(_cursor_y+1)^(0+256),f
  8514                           
  8515                           ;ssd1306.c: 558: cursor_x = 0;
  8516  00AD' 0180'              	clrf	_cursor_x^(0+256)
  8517  00AE' 0180'              	clrf	(_cursor_x+1)^(0+256)
  8518  00AF' 0008               	return
  8519  00B0'                    __end_of_gfx_write:	
  8520                           
  8521                           	psect	text10
  8522  0000'                    __ptext10:	
  8523 ;; *************** function _gfx_drawChar *****************
  8524 ;; Defined at:
  8525 ;;		line 513 in file "ssd1306.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  x               2   22[BANK1 ] int 
  8528 ;;  y               2   24[BANK1 ] int 
  8529 ;;  c               1   26[BANK1 ] unsigned char 
  8530 ;;  color           2   27[BANK1 ] unsigned int 
  8531 ;;  bg              2   29[BANK1 ] unsigned int 
  8532 ;;  size            1   31[BANK1 ] unsigned char 
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;  j               1   44[BANK1 ] char 
  8535 ;;  line            1   39[BANK1 ] unsigned char 
  8536 ;;  i               1   45[BANK1 ] char 
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8546 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8547 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8548 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8549 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8550 ;;Total ram usage:       24 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    8
  8553 ;; This function calls:
  8554 ;;		___wmul
  8555 ;;		_gfx_drawPixel
  8556 ;;		_gfx_fillRect
  8557 ;; This function is called by:
  8558 ;;		_gfx_write
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           
  8563                           ;psect for function _gfx_drawChar
  8564  0000'                    _gfx_drawChar:	
  8565                           
  8566                           ;ssd1306.c: 514: if( (x >= _width) ||
  8567                           ;ssd1306.c: 515: (y >= _height) ||
  8568                           ;ssd1306.c: 516: ((x + 6 * size - 1) < 0) ||
  8569                           ;ssd1306.c: 517: ((y + 8 * size - 1) < 0))
  8570                           
  8571                           ;incstack = 0
  8572                           ; Regs used in _gfx_drawChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8573  0000' 0021               	movlb	1	; select bank1
  8574  0001' 0800'              	movf	(gfx_drawChar@x+1)^(0+128),w
  8575  0002' 3A80               	xorlw	128
  8576  0003' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8577  0004' 0800'              	movf	(__width+1)^(0+128),w
  8578  0005' 3A80               	xorlw	128
  8579  0006' 0200'              	subwf	??_gfx_drawChar^(0+128),w
  8580  0007' 1D03               	skipz
  8581  0008' 2800'              	goto	u3875
  8582  0009' 0800'              	movf	__width^(0+128),w
  8583  000A' 0200'              	subwf	gfx_drawChar@x^(0+128),w
  8584  000B'                    u3875:	
  8585  000B' 1803               	skipnc
  8586  000C' 0008               	return
  8587  000D' 0021               	movlb	1	; select bank1
  8588  000E' 0800'              	movf	(gfx_drawChar@y+1)^(0+128),w
  8589  000F' 3A80               	xorlw	128
  8590  0010' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8591  0011' 0022               	movlb	2	; select bank2
  8592  0012' 0800'              	movf	(__height+1)^(0+256),w
  8593  0013' 3A80               	xorlw	128
  8594  0014' 0021               	movlb	1	; select bank1
  8595  0015' 0200'              	subwf	??_gfx_drawChar^(0+128),w
  8596  0016' 1D03               	skipz
  8597  0017' 2800'              	goto	u3885
  8598  0018' 0022               	movlb	2	; select bank2
  8599  0019' 0800'              	movf	__height^(0+256),w
  8600  001A' 0021               	movlb	1	; select bank1
  8601  001B' 0200'              	subwf	gfx_drawChar@y^(0+128),w
  8602  001C'                    u3885:	
  8603  001C' 1803               	skipnc
  8604  001D' 0008               	return
  8605  001E' 0021               	movlb	1	; select bank1
  8606  001F' 0800'              	movf	gfx_drawChar@size^(0+128),w
  8607  0020' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8608  0021' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8609  0022' 0800'              	movf	??_gfx_drawChar^(0+128),w
  8610  0023' 0020               	movlb	0	; select bank0
  8611  0024' 0080'              	movwf	___wmul@multiplier
  8612  0025' 0021               	movlb	1	; select bank1
  8613  0026' 0800'              	movf	(??_gfx_drawChar+1)^(0+128),w
  8614  0027' 0020               	movlb	0	; select bank0
  8615  0028' 0081'              	movwf	___wmul@multiplier+1
  8616  0029' 3006               	movlw	6
  8617  002A' 0082'              	movwf	___wmul@multiplicand
  8618  002B' 3000               	movlw	0
  8619  002C' 0083'              	movwf	___wmul@multiplicand+1
  8620  002D' 3180' 2000' 3180'  	fcall	___wmul
  8621  0030' 0021               	movlb	1	; select bank1
  8622  0031' 0800'              	movf	gfx_drawChar@x^(0+128),w
  8623  0032' 0020               	movlb	0	; select bank0
  8624  0033' 0700'              	addwf	?___wmul,w
  8625  0034' 0021               	movlb	1	; select bank1
  8626  0035' 0080'              	movwf	(??_gfx_drawChar+2)^(0+128)
  8627  0036' 0800'              	movf	(gfx_drawChar@x+1)^(0+128),w
  8628  0037' 0020               	movlb	0	; select bank0
  8629  0038' 3D01'              	addwfc	?___wmul+1,w
  8630  0039' 0021               	movlb	1	; select bank1
  8631  003A' 0080'              	movwf	(??_gfx_drawChar+3)^(0+128)
  8632  003B' 0800'              	movf	(??_gfx_drawChar+2)^(0+128),w
  8633  003C' 3EFF               	addlw	255
  8634  003D' 0080'              	movwf	(??_gfx_drawChar+4)^(0+128)
  8635  003E' 30FF               	movlw	255
  8636  003F' 3D00'              	addwfc	(??_gfx_drawChar+3)^(0+128),w
  8637  0040' 0080'              	movwf	(??_gfx_drawChar+5)^(0+128)
  8638  0041' 1B80'              	btfsc	(??_gfx_drawChar+5)^(0+128),7
  8639  0042' 0008               	return
  8640  0043' 0800'              	movf	gfx_drawChar@size^(0+128),w
  8641  0044' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8642  0045' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8643  0046' 3580'              	lslf	??_gfx_drawChar^(0+128),f
  8644  0047' 0D81'              	rlf	(??_gfx_drawChar^(0+128)+1),f
  8645  0048' 3580'              	lslf	??_gfx_drawChar^(0+128),f
  8646  0049' 0D81'              	rlf	(??_gfx_drawChar^(0+128)+1),f
  8647  004A' 3580'              	lslf	??_gfx_drawChar^(0+128),f
  8648  004B' 0D81'              	rlf	(??_gfx_drawChar^(0+128)+1),f
  8649  004C' 0800'              	movf	gfx_drawChar@y^(0+128),w
  8650  004D' 0700'              	addwf	??_gfx_drawChar^(0+128),w
  8651  004E' 0080'              	movwf	(??_gfx_drawChar+2)^(0+128)
  8652  004F' 0800'              	movf	(gfx_drawChar@y+1)^(0+128),w
  8653  0050' 3D00'              	addwfc	(??_gfx_drawChar+1)^(0+128),w
  8654  0051' 0080'              	movwf	(??_gfx_drawChar+3)^(0+128)
  8655  0052' 30FF               	movlw	255
  8656  0053' 0700'              	addwf	(??_gfx_drawChar+2)^(0+128),w
  8657  0054' 0800'              	movf	(??_gfx_drawChar+3)^(0+128),w
  8658  0055' 1803               	skipnc
  8659  0056' 0A00'              	incf	(??_gfx_drawChar+3)^(0+128),w
  8660  0057' 3EFF               	addlw	255
  8661  0058' 1B89               	btfsc	9,7
  8662  0059' 0008               	return
  8663                           
  8664                           ;ssd1306.c: 520: int8_t i = 0;
  8665                           
  8666                           ;ssd1306.c: 518: return;
  8667  005A' 0180'              	clrf	gfx_drawChar@i^(0+128)
  8668                           
  8669                           ;ssd1306.c: 521: for( i = 0 ; i < 6 ; i++ ){
  8670  005B' 0180'              	clrf	gfx_drawChar@i^(0+128)
  8671  005C'                    L5:	
  8672  005C' 0800'              	movf	gfx_drawChar@i^(0+128),w
  8673  005D' 3A80               	xorlw	128
  8674  005E' 3E7A               	addlw	-134
  8675  005F' 1803               	btfsc	3,0
  8676  0060' 0008               	return
  8677                           
  8678                           ;ssd1306.c: 522: uint8_t line;
  8679                           ;ssd1306.c: 523: if( i == 5 )
  8680  0061' 3005               	movlw	5
  8681  0062' 0600'              	xorwf	gfx_drawChar@i^(0+128),w
  8682  0063' 1D03               	btfss	3,2
  8683  0064' 2800'              	goto	l3890
  8684                           
  8685                           ;ssd1306.c: 524: line = 0x0;
  8686  0065' 0180'              	clrf	gfx_drawChar@line^(0+128)
  8687  0066' 2800'              	goto	l3892
  8688  0067'                    l3890:	
  8689                           
  8690                           ;ssd1306.c: 525: else
  8691                           ;ssd1306.c: 526: line = font[(c*5)+i];
  8692  0067' 0800'              	movf	gfx_drawChar@i^(0+128),w
  8693  0068' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8694  0069' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8695  006A' 1B80'              	btfsc	??_gfx_drawChar^(0+128),7
  8696  006B' 0381'              	decf	(??_gfx_drawChar^(0+128)+1),f
  8697  006C' 0800'              	movf	gfx_drawChar@c^(0+128),w
  8698  006D' 0080'              	movwf	(??_gfx_drawChar+2)^(0+128)
  8699  006E' 0181'              	clrf	((??_gfx_drawChar+2)^(0+128)+1)
  8700  006F' 0800'              	movf	(??_gfx_drawChar+2)^(0+128),w
  8701  0070' 0020               	movlb	0	; select bank0
  8702  0071' 0080'              	movwf	___wmul@multiplier
  8703  0072' 0021               	movlb	1	; select bank1
  8704  0073' 0800'              	movf	(??_gfx_drawChar+3)^(0+128),w
  8705  0074' 0020               	movlb	0	; select bank0
  8706  0075' 0081'              	movwf	___wmul@multiplier+1
  8707  0076' 3005               	movlw	5
  8708  0077' 0082'              	movwf	___wmul@multiplicand
  8709  0078' 3000               	movlw	0
  8710  0079' 0083'              	movwf	___wmul@multiplicand+1
  8711  007A' 3180' 2000' 3180'  	fcall	___wmul
  8712  007D' 0021               	movlb	1	; select bank1
  8713  007E' 0800'              	movf	??_gfx_drawChar^(0+128),w
  8714  007F' 0020               	movlb	0	; select bank0
  8715  0080' 0700'              	addwf	?___wmul,w
  8716  0081' 0021               	movlb	1	; select bank1
  8717  0082' 0080'              	movwf	(??_gfx_drawChar+4)^(0+128)
  8718  0083' 0800'              	movf	(??_gfx_drawChar+1)^(0+128),w
  8719  0084' 0020               	movlb	0	; select bank0
  8720  0085' 3D01'              	addwfc	?___wmul+1,w
  8721  0086' 0021               	movlb	1	; select bank1
  8722  0087' 0080'              	movwf	(??_gfx_drawChar+5)^(0+128)
  8723  0088' 3000'              	movlw	low (_font| (0+32768))
  8724  0089' 0700'              	addwf	(??_gfx_drawChar+4)^(0+128),w
  8725  008A' 0084               	movwf	4
  8726  008B' 3000'              	movlw	high (_font| (0+32768))
  8727  008C' 3D00'              	addwfc	(??_gfx_drawChar+5)^(0+128),w
  8728  008D' 0085               	movwf	5
  8729  008E' 0800               	movf	0,w	;code access
  8730  008F' 0080'              	movwf	(??_gfx_drawChar+6)^(0+128)
  8731  0090' 0800'              	movf	(??_gfx_drawChar+6)^(0+128),w
  8732  0091' 0080'              	movwf	gfx_drawChar@line^(0+128)
  8733  0092'                    l3892:	
  8734                           
  8735                           ;ssd1306.c: 527: int8_t j = 0;
  8736  0092' 0180'              	clrf	gfx_drawChar@j^(0+128)
  8737                           
  8738                           ;ssd1306.c: 528: for( j = 0; j < 8 ; j++ ){
  8739  0093' 0180'              	clrf	gfx_drawChar@j^(0+128)
  8740  0094' 0800'              	movf	gfx_drawChar@j^(0+128),w
  8741  0095' 3A80               	xorlw	128
  8742  0096' 3E78               	addlw	-136
  8743  0097' 1803               	btfsc	3,0
  8744  0098' 2800'              	goto	l3924
  8745  0099'                    l637:	
  8746                           
  8747                           ;ssd1306.c: 529: if( line & 0x1 ){
  8748  0099' 1C00'              	btfss	gfx_drawChar@line^(0+128),0
  8749  009A' 2800'              	goto	l3908
  8750                           
  8751                           ;ssd1306.c: 530: if( size == 1 )
  8752  009B' 0300'              	decf	gfx_drawChar@size^(0+128),w
  8753  009C' 1D03               	btfss	3,2
  8754  009D' 2800'              	goto	l3904
  8755                           
  8756                           ;ssd1306.c: 531: gfx_drawPixel( x+i, y+j, color );
  8757  009E' 0800'              	movf	gfx_drawChar@i^(0+128),w
  8758  009F' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8759  00A0' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8760  00A1' 1B80'              	btfsc	??_gfx_drawChar^(0+128),7
  8761  00A2' 0381'              	decf	(??_gfx_drawChar^(0+128)+1),f
  8762  00A3' 0800'              	movf	gfx_drawChar@x^(0+128),w
  8763  00A4' 0700'              	addwf	??_gfx_drawChar^(0+128),w
  8764  00A5' 0020               	movlb	0	; select bank0
  8765  00A6' 0096'              	movwf	gfx_drawPixel@x
  8766  00A7' 0021               	movlb	1	; select bank1
  8767  00A8' 0800'              	movf	(gfx_drawChar@x+1)^(0+128),w
  8768  00A9' 3D00'              	addwfc	(??_gfx_drawChar+1)^(0+128),w
  8769  00AA' 0020               	movlb	0	; select bank0
  8770  00AB' 0097'              	movwf	gfx_drawPixel@x+1
  8771  00AC' 0021               	movlb	1	; select bank1
  8772  00AD' 0800'              	movf	gfx_drawChar@j^(0+128),w
  8773  00AE' 0080'              	movwf	(??_gfx_drawChar+2)^(0+128)
  8774  00AF' 0181'              	clrf	((??_gfx_drawChar+2)^(0+128)+1)
  8775  00B0' 1B80'              	btfsc	(??_gfx_drawChar+2)^(0+128),7
  8776  00B1' 0381'              	decf	((??_gfx_drawChar+2)^(0+128)+1),f
  8777  00B2' 0800'              	movf	gfx_drawChar@y^(0+128),w
  8778  00B3' 0700'              	addwf	(??_gfx_drawChar+2)^(0+128),w
  8779  00B4' 0020               	movlb	0	; select bank0
  8780  00B5' 0098'              	movwf	gfx_drawPixel@y
  8781  00B6' 0021               	movlb	1	; select bank1
  8782  00B7' 0800'              	movf	(gfx_drawChar@y+1)^(0+128),w
  8783  00B8' 3D00'              	addwfc	(??_gfx_drawChar+3)^(0+128),w
  8784  00B9' 0020               	movlb	0	; select bank0
  8785  00BA' 0099'              	movwf	gfx_drawPixel@y+1
  8786  00BB' 0021               	movlb	1	; select bank1
  8787  00BC' 0800'              	movf	(gfx_drawChar@color+1)^(0+128),w
  8788  00BD' 0020               	movlb	0	; select bank0
  8789  00BE' 009B'              	movwf	gfx_drawPixel@color+1
  8790  00BF' 0021               	movlb	1	; select bank1
  8791  00C0' 0800'              	movf	gfx_drawChar@color^(0+128),w
  8792  00C1' 0020               	movlb	0	; select bank0
  8793  00C2' 009A'              	movwf	gfx_drawPixel@color
  8794  00C3' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
  8795  00C6' 2800'              	goto	l3918
  8796  00C7'                    l3904:	
  8797                           
  8798                           ;ssd1306.c: 532: else {
  8799                           ;ssd1306.c: 533: gfx_fillRect( x+(i*size), y+(j*size), size, size, color );
  8800  00C7' 0021               	movlb	1	; select bank1
  8801  00C8' 0800'              	movf	gfx_drawChar@i^(0+128),w
  8802  00C9' 0020               	movlb	0	; select bank0
  8803  00CA' 0080'              	movwf	___wmul@multiplier
  8804  00CB' 0181'              	clrf	___wmul@multiplier+1
  8805  00CC' 1B80'              	btfsc	___wmul@multiplier,7
  8806  00CD' 0381'              	decf	___wmul@multiplier+1,f
  8807  00CE' 0021               	movlb	1	; select bank1
  8808  00CF' 0800'              	movf	gfx_drawChar@size^(0+128),w
  8809  00D0' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8810  00D1' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8811  00D2' 0800'              	movf	??_gfx_drawChar^(0+128),w
  8812  00D3' 0020               	movlb	0	; select bank0
  8813  00D4' 0082'              	movwf	___wmul@multiplicand
  8814  00D5' 0021               	movlb	1	; select bank1
  8815  00D6' 0800'              	movf	(??_gfx_drawChar+1)^(0+128),w
  8816  00D7' 0020               	movlb	0	; select bank0
  8817  00D8' 0083'              	movwf	___wmul@multiplicand+1
  8818  00D9' 3180' 2000' 3180'  	fcall	___wmul
  8819  00DC' 0021               	movlb	1	; select bank1
  8820  00DD' 0800'              	movf	gfx_drawChar@x^(0+128),w
  8821  00DE' 0020               	movlb	0	; select bank0
  8822  00DF' 0700'              	addwf	?___wmul,w
  8823  00E0' 0021               	movlb	1	; select bank1
  8824  00E1' 0080'              	movwf	_gfx_drawChar$1414^(0+128)
  8825  00E2' 0800'              	movf	(gfx_drawChar@x+1)^(0+128),w
  8826  00E3' 0020               	movlb	0	; select bank0
  8827  00E4' 3D01'              	addwfc	?___wmul+1,w
  8828  00E5' 0021               	movlb	1	; select bank1
  8829  00E6' 0080'              	movwf	(_gfx_drawChar$1414+1)^(0+128)
  8830                           
  8831                           ;ssd1306.c: 532: else {
  8832                           ;ssd1306.c: 533: gfx_fillRect( x+(i*size), y+(j*size), size, size, color );
  8833  00E7' 0800'              	movf	gfx_drawChar@j^(0+128),w
  8834  00E8' 0020               	movlb	0	; select bank0
  8835  00E9' 0080'              	movwf	___wmul@multiplier
  8836  00EA' 0181'              	clrf	___wmul@multiplier+1
  8837  00EB' 1B80'              	btfsc	___wmul@multiplier,7
  8838  00EC' 0381'              	decf	___wmul@multiplier+1,f
  8839  00ED' 0021               	movlb	1	; select bank1
  8840  00EE' 0800'              	movf	gfx_drawChar@size^(0+128),w
  8841  00EF' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8842  00F0' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8843  00F1' 0800'              	movf	??_gfx_drawChar^(0+128),w
  8844  00F2' 0020               	movlb	0	; select bank0
  8845  00F3' 0082'              	movwf	___wmul@multiplicand
  8846  00F4' 0021               	movlb	1	; select bank1
  8847  00F5' 0800'              	movf	(??_gfx_drawChar+1)^(0+128),w
  8848  00F6' 0020               	movlb	0	; select bank0
  8849  00F7' 0083'              	movwf	___wmul@multiplicand+1
  8850  00F8' 3180' 2000' 3180'  	fcall	___wmul
  8851  00FB' 0021               	movlb	1	; select bank1
  8852  00FC' 0800'              	movf	gfx_drawChar@y^(0+128),w
  8853  00FD' 0020               	movlb	0	; select bank0
  8854  00FE' 0700'              	addwf	?___wmul,w
  8855  00FF' 0021               	movlb	1	; select bank1
  8856  0100' 0080'              	movwf	_gfx_drawChar$1415^(0+128)
  8857  0101' 0800'              	movf	(gfx_drawChar@y+1)^(0+128),w
  8858  0102' 0020               	movlb	0	; select bank0
  8859  0103' 3D01'              	addwfc	?___wmul+1,w
  8860  0104' 0021               	movlb	1	; select bank1
  8861  0105' 0080'              	movwf	(_gfx_drawChar$1415+1)^(0+128)
  8862                           
  8863                           ;ssd1306.c: 532: else {
  8864                           ;ssd1306.c: 533: gfx_fillRect( x+(i*size), y+(j*size), size, size, color );
  8865  0106' 0800'              	movf	(_gfx_drawChar$1414+1)^(0+128),w
  8866  0107' 0080'              	movwf	(gfx_fillRect@x+1)^(0+128)
  8867  0108' 0800'              	movf	_gfx_drawChar$1414^(0+128),w
  8868  0109' 0080'              	movwf	gfx_fillRect@x^(0+128)
  8869  010A' 0800'              	movf	(_gfx_drawChar$1415+1)^(0+128),w
  8870  010B' 0080'              	movwf	(gfx_fillRect@y+1)^(0+128)
  8871  010C' 0800'              	movf	_gfx_drawChar$1415^(0+128),w
  8872  010D' 0080'              	movwf	gfx_fillRect@y^(0+128)
  8873  010E' 0800'              	movf	gfx_drawChar@size^(0+128),w
  8874  010F' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8875  0110' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8876  0111' 0800'              	movf	??_gfx_drawChar^(0+128),w
  8877  0112' 0080'              	movwf	gfx_fillRect@w^(0+128)
  8878  0113' 0800'              	movf	(??_gfx_drawChar+1)^(0+128),w
  8879  0114' 0080'              	movwf	(gfx_fillRect@w+1)^(0+128)
  8880  0115' 0800'              	movf	gfx_drawChar@size^(0+128),w
  8881  0116' 0080'              	movwf	(??_gfx_drawChar+2)^(0+128)
  8882  0117' 0181'              	clrf	((??_gfx_drawChar+2)^(0+128)+1)
  8883  0118' 0800'              	movf	(??_gfx_drawChar+2)^(0+128),w
  8884  0119' 0080'              	movwf	gfx_fillRect@h^(0+128)
  8885  011A' 0800'              	movf	(??_gfx_drawChar+3)^(0+128),w
  8886  011B' 0080'              	movwf	(gfx_fillRect@h+1)^(0+128)
  8887  011C' 0800'              	movf	(gfx_drawChar@color+1)^(0+128),w
  8888  011D' 0080'              	movwf	(gfx_fillRect@color+1)^(0+128)
  8889  011E' 0800'              	movf	gfx_drawChar@color^(0+128),w
  8890  011F' 2800'              	goto	L4
  8891  0120'                    l3908:	
  8892                           ;ssd1306.c: 534: }
  8893                           ;ssd1306.c: 535: } else if( bg != color ){
  8894                           
  8895  0120' 0021               	movlb	1	; select bank1
  8896  0121' 0800'              	movf	(gfx_drawChar@color+1)^(0+128),w
  8897  0122' 0600'              	xorwf	(gfx_drawChar@bg+1)^(0+128),w
  8898  0123' 1D03               	skipz
  8899  0124' 2800'              	goto	u3965
  8900  0125' 0800'              	movf	gfx_drawChar@color^(0+128),w
  8901  0126' 0600'              	xorwf	gfx_drawChar@bg^(0+128),w
  8902  0127'                    u3965:	
  8903  0127' 1903               	skipnz
  8904  0128' 2800'              	goto	l3918
  8905                           
  8906                           ;ssd1306.c: 536: if( size == 1 )
  8907  0129' 0300'              	decf	gfx_drawChar@size^(0+128),w
  8908  012A' 1D03               	btfss	3,2
  8909  012B' 2800'              	goto	l3914
  8910                           
  8911                           ;ssd1306.c: 537: gfx_drawPixel( x+i, y+j, bg );
  8912  012C' 0800'              	movf	gfx_drawChar@i^(0+128),w
  8913  012D' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8914  012E' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8915  012F' 1B80'              	btfsc	??_gfx_drawChar^(0+128),7
  8916  0130' 0381'              	decf	(??_gfx_drawChar^(0+128)+1),f
  8917  0131' 0800'              	movf	gfx_drawChar@x^(0+128),w
  8918  0132' 0700'              	addwf	??_gfx_drawChar^(0+128),w
  8919  0133' 0020               	movlb	0	; select bank0
  8920  0134' 0096'              	movwf	gfx_drawPixel@x
  8921  0135' 0021               	movlb	1	; select bank1
  8922  0136' 0800'              	movf	(gfx_drawChar@x+1)^(0+128),w
  8923  0137' 3D00'              	addwfc	(??_gfx_drawChar+1)^(0+128),w
  8924  0138' 0020               	movlb	0	; select bank0
  8925  0139' 0097'              	movwf	gfx_drawPixel@x+1
  8926  013A' 0021               	movlb	1	; select bank1
  8927  013B' 0800'              	movf	gfx_drawChar@j^(0+128),w
  8928  013C' 0080'              	movwf	(??_gfx_drawChar+2)^(0+128)
  8929  013D' 0181'              	clrf	((??_gfx_drawChar+2)^(0+128)+1)
  8930  013E' 1B80'              	btfsc	(??_gfx_drawChar+2)^(0+128),7
  8931  013F' 0381'              	decf	((??_gfx_drawChar+2)^(0+128)+1),f
  8932  0140' 0800'              	movf	gfx_drawChar@y^(0+128),w
  8933  0141' 0700'              	addwf	(??_gfx_drawChar+2)^(0+128),w
  8934  0142' 0020               	movlb	0	; select bank0
  8935  0143' 0098'              	movwf	gfx_drawPixel@y
  8936  0144' 0021               	movlb	1	; select bank1
  8937  0145' 0800'              	movf	(gfx_drawChar@y+1)^(0+128),w
  8938  0146' 3D00'              	addwfc	(??_gfx_drawChar+3)^(0+128),w
  8939  0147' 0020               	movlb	0	; select bank0
  8940  0148' 0099'              	movwf	gfx_drawPixel@y+1
  8941  0149' 0021               	movlb	1	; select bank1
  8942  014A' 0800'              	movf	(gfx_drawChar@bg+1)^(0+128),w
  8943  014B' 0020               	movlb	0	; select bank0
  8944  014C' 009B'              	movwf	gfx_drawPixel@color+1
  8945  014D' 0021               	movlb	1	; select bank1
  8946  014E' 0800'              	movf	gfx_drawChar@bg^(0+128),w
  8947  014F' 0020               	movlb	0	; select bank0
  8948  0150' 009A'              	movwf	gfx_drawPixel@color
  8949  0151' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
  8950  0154' 2800'              	goto	l3918
  8951  0155'                    l3914:	
  8952                           
  8953                           ;ssd1306.c: 538: else {
  8954                           ;ssd1306.c: 539: gfx_fillRect( x+i*size, y+j*size, size, size, bg );
  8955  0155' 0021               	movlb	1	; select bank1
  8956  0156' 0800'              	movf	gfx_drawChar@i^(0+128),w
  8957  0157' 0020               	movlb	0	; select bank0
  8958  0158' 0080'              	movwf	___wmul@multiplier
  8959  0159' 0181'              	clrf	___wmul@multiplier+1
  8960  015A' 1B80'              	btfsc	___wmul@multiplier,7
  8961  015B' 0381'              	decf	___wmul@multiplier+1,f
  8962  015C' 0021               	movlb	1	; select bank1
  8963  015D' 0800'              	movf	gfx_drawChar@size^(0+128),w
  8964  015E' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8965  015F' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8966  0160' 0800'              	movf	??_gfx_drawChar^(0+128),w
  8967  0161' 0020               	movlb	0	; select bank0
  8968  0162' 0082'              	movwf	___wmul@multiplicand
  8969  0163' 0021               	movlb	1	; select bank1
  8970  0164' 0800'              	movf	(??_gfx_drawChar+1)^(0+128),w
  8971  0165' 0020               	movlb	0	; select bank0
  8972  0166' 0083'              	movwf	___wmul@multiplicand+1
  8973  0167' 3180' 2000' 3180'  	fcall	___wmul
  8974  016A' 0021               	movlb	1	; select bank1
  8975  016B' 0800'              	movf	gfx_drawChar@x^(0+128),w
  8976  016C' 0020               	movlb	0	; select bank0
  8977  016D' 0700'              	addwf	?___wmul,w
  8978  016E' 0021               	movlb	1	; select bank1
  8979  016F' 0080'              	movwf	_gfx_drawChar$1414^(0+128)
  8980  0170' 0800'              	movf	(gfx_drawChar@x+1)^(0+128),w
  8981  0171' 0020               	movlb	0	; select bank0
  8982  0172' 3D01'              	addwfc	?___wmul+1,w
  8983  0173' 0021               	movlb	1	; select bank1
  8984  0174' 0080'              	movwf	(_gfx_drawChar$1414+1)^(0+128)
  8985                           
  8986                           ;ssd1306.c: 538: else {
  8987                           ;ssd1306.c: 539: gfx_fillRect( x+i*size, y+j*size, size, size, bg );
  8988  0175' 0800'              	movf	gfx_drawChar@j^(0+128),w
  8989  0176' 0020               	movlb	0	; select bank0
  8990  0177' 0080'              	movwf	___wmul@multiplier
  8991  0178' 0181'              	clrf	___wmul@multiplier+1
  8992  0179' 1B80'              	btfsc	___wmul@multiplier,7
  8993  017A' 0381'              	decf	___wmul@multiplier+1,f
  8994  017B' 0021               	movlb	1	; select bank1
  8995  017C' 0800'              	movf	gfx_drawChar@size^(0+128),w
  8996  017D' 0080'              	movwf	??_gfx_drawChar^(0+128)
  8997  017E' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  8998  017F' 0800'              	movf	??_gfx_drawChar^(0+128),w
  8999  0180' 0020               	movlb	0	; select bank0
  9000  0181' 0082'              	movwf	___wmul@multiplicand
  9001  0182' 0021               	movlb	1	; select bank1
  9002  0183' 0800'              	movf	(??_gfx_drawChar+1)^(0+128),w
  9003  0184' 0020               	movlb	0	; select bank0
  9004  0185' 0083'              	movwf	___wmul@multiplicand+1
  9005  0186' 3180' 2000' 3180'  	fcall	___wmul
  9006  0189' 0021               	movlb	1	; select bank1
  9007  018A' 0800'              	movf	gfx_drawChar@y^(0+128),w
  9008  018B' 0020               	movlb	0	; select bank0
  9009  018C' 0700'              	addwf	?___wmul,w
  9010  018D' 0021               	movlb	1	; select bank1
  9011  018E' 0080'              	movwf	_gfx_drawChar$1415^(0+128)
  9012  018F' 0800'              	movf	(gfx_drawChar@y+1)^(0+128),w
  9013  0190' 0020               	movlb	0	; select bank0
  9014  0191' 3D01'              	addwfc	?___wmul+1,w
  9015  0192' 0021               	movlb	1	; select bank1
  9016  0193' 0080'              	movwf	(_gfx_drawChar$1415+1)^(0+128)
  9017                           
  9018                           ;ssd1306.c: 538: else {
  9019                           ;ssd1306.c: 539: gfx_fillRect( x+i*size, y+j*size, size, size, bg );
  9020  0194' 0800'              	movf	(_gfx_drawChar$1414+1)^(0+128),w
  9021  0195' 0080'              	movwf	(gfx_fillRect@x+1)^(0+128)
  9022  0196' 0800'              	movf	_gfx_drawChar$1414^(0+128),w
  9023  0197' 0080'              	movwf	gfx_fillRect@x^(0+128)
  9024  0198' 0800'              	movf	(_gfx_drawChar$1415+1)^(0+128),w
  9025  0199' 0080'              	movwf	(gfx_fillRect@y+1)^(0+128)
  9026  019A' 0800'              	movf	_gfx_drawChar$1415^(0+128),w
  9027  019B' 0080'              	movwf	gfx_fillRect@y^(0+128)
  9028  019C' 0800'              	movf	gfx_drawChar@size^(0+128),w
  9029  019D' 0080'              	movwf	??_gfx_drawChar^(0+128)
  9030  019E' 0181'              	clrf	(??_gfx_drawChar^(0+128)+1)
  9031  019F' 0800'              	movf	??_gfx_drawChar^(0+128),w
  9032  01A0' 0080'              	movwf	gfx_fillRect@w^(0+128)
  9033  01A1' 0800'              	movf	(??_gfx_drawChar+1)^(0+128),w
  9034  01A2' 0080'              	movwf	(gfx_fillRect@w+1)^(0+128)
  9035  01A3' 0800'              	movf	gfx_drawChar@size^(0+128),w
  9036  01A4' 0080'              	movwf	(??_gfx_drawChar+2)^(0+128)
  9037  01A5' 0181'              	clrf	((??_gfx_drawChar+2)^(0+128)+1)
  9038  01A6' 0800'              	movf	(??_gfx_drawChar+2)^(0+128),w
  9039  01A7' 0080'              	movwf	gfx_fillRect@h^(0+128)
  9040  01A8' 0800'              	movf	(??_gfx_drawChar+3)^(0+128),w
  9041  01A9' 0080'              	movwf	(gfx_fillRect@h+1)^(0+128)
  9042  01AA' 0800'              	movf	(gfx_drawChar@bg+1)^(0+128),w
  9043  01AB' 0080'              	movwf	(gfx_fillRect@color+1)^(0+128)
  9044  01AC' 0800'              	movf	gfx_drawChar@bg^(0+128),w
  9045  01AD'                    L4:	
  9046  01AD' 0080'              	movwf	gfx_fillRect@color^(0+128)
  9047  01AE' 3180' 2000' 3180'  	fcall	_gfx_fillRect
  9048  01B1'                    l3918:	
  9049                           
  9050                           ;ssd1306.c: 540: }
  9051                           ;ssd1306.c: 541: }
  9052                           ;ssd1306.c: 542: line >>= 1;
  9053  01B1' 1003               	clrc
  9054  01B2' 0021               	movlb	1	; select bank1
  9055  01B3' 0C80'              	rrf	gfx_drawChar@line^(0+128),f
  9056  01B4' 3001               	movlw	1
  9057  01B5' 0080'              	movwf	??_gfx_drawChar^(0+128)
  9058  01B6' 0800'              	movf	??_gfx_drawChar^(0+128),w
  9059  01B7' 0780'              	addwf	gfx_drawChar@j^(0+128),f
  9060  01B8' 0800'              	movf	gfx_drawChar@j^(0+128),w
  9061  01B9' 3A80               	xorlw	128
  9062  01BA' 3E78               	addlw	-136
  9063  01BB' 1C03               	skipc
  9064  01BC' 2800'              	goto	l637
  9065  01BD'                    l3924:	
  9066  01BD' 3001               	movlw	1
  9067  01BE' 0080'              	movwf	??_gfx_drawChar^(0+128)
  9068  01BF' 0800'              	movf	??_gfx_drawChar^(0+128),w
  9069  01C0' 0780'              	addwf	gfx_drawChar@i^(0+128),f
  9070  01C1' 2800'              	goto	L5
  9071  01C2'                    __end_of_gfx_drawChar:	
  9072                           
  9073                           	psect	text11
  9074  0000'                    __ptext11:	
  9075 ;; *************** function _gfx_fillRect *****************
  9076 ;; Defined at:
  9077 ;;		line 458 in file "ssd1306.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;  x               2   12[BANK1 ] int 
  9080 ;;  y               2   14[BANK1 ] int 
  9081 ;;  w               2   16[BANK1 ] int 
  9082 ;;  h               2   18[BANK1 ] int 
  9083 ;;  color           2   20[BANK1 ] unsigned int 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;  i               2   75[BANK0 ] int 
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9095 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9096 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9097 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9098 ;;      Totals:         0       5      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9099 ;;Total ram usage:       15 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    7
  9102 ;; This function calls:
  9103 ;;		_gfx_drawLine
  9104 ;; This function is called by:
  9105 ;;		_main
  9106 ;;		_gfx_drawChar
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           
  9111                           ;psect for function _gfx_fillRect
  9112  0000'                    _gfx_fillRect:	
  9113                           
  9114                           ;ssd1306.c: 459: int16_t i = 0;
  9115                           
  9116                           ;incstack = 0
  9117                           ; Regs used in _gfx_fillRect: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9118  0000' 0020               	movlb	0	; select bank0
  9119  0001' 01CB'              	clrf	gfx_fillRect@i
  9120  0002' 01CC'              	clrf	gfx_fillRect@i+1
  9121                           
  9122                           ;ssd1306.c: 460: if( h > w ){
  9123  0003' 0021               	movlb	1	; select bank1
  9124  0004' 0800'              	movf	(gfx_fillRect@w+1)^(0+128),w
  9125  0005' 3A80               	xorlw	128
  9126  0006' 0020               	movlb	0	; select bank0
  9127  0007' 00C8'              	movwf	??_gfx_fillRect
  9128  0008' 0021               	movlb	1	; select bank1
  9129  0009' 0800'              	movf	(gfx_fillRect@h+1)^(0+128),w
  9130  000A' 3A80               	xorlw	128
  9131  000B' 0020               	movlb	0	; select bank0
  9132  000C' 0248'              	subwf	??_gfx_fillRect,w
  9133  000D' 1D03               	skipz
  9134  000E' 2800'              	goto	u3845
  9135  000F' 0021               	movlb	1	; select bank1
  9136  0010' 0800'              	movf	gfx_fillRect@h^(0+128),w
  9137  0011' 0200'              	subwf	gfx_fillRect@w^(0+128),w
  9138  0012'                    u3845:	
  9139  0012' 1803               	skipnc
  9140  0013' 2800'              	goto	l3864
  9141                           
  9142                           ;ssd1306.c: 461: for( i = x ; i < x+w ; i++ ){
  9143  0014' 0021               	movlb	1	; select bank1
  9144  0015' 0800'              	movf	(gfx_fillRect@x+1)^(0+128),w
  9145  0016' 0020               	movlb	0	; select bank0
  9146  0017' 00CC'              	movwf	gfx_fillRect@i+1
  9147  0018' 0021               	movlb	1	; select bank1
  9148  0019' 0800'              	movf	gfx_fillRect@x^(0+128),w
  9149  001A' 0020               	movlb	0	; select bank0
  9150  001B' 00CB'              	movwf	gfx_fillRect@i
  9151  001C'                    l3862:	
  9152  001C' 0021               	movlb	1	; select bank1
  9153  001D' 0800'              	movf	gfx_fillRect@w^(0+128),w
  9154  001E' 0700'              	addwf	gfx_fillRect@x^(0+128),w
  9155  001F' 0020               	movlb	0	; select bank0
  9156  0020' 00C8'              	movwf	??_gfx_fillRect
  9157  0021' 0021               	movlb	1	; select bank1
  9158  0022' 0800'              	movf	(gfx_fillRect@w+1)^(0+128),w
  9159  0023' 3D00'              	addwfc	(gfx_fillRect@x+1)^(0+128),w
  9160  0024' 0020               	movlb	0	; select bank0
  9161  0025' 00C9'              	movwf	??_gfx_fillRect+1
  9162  0026' 084C'              	movf	gfx_fillRect@i+1,w
  9163  0027' 3A80               	xorlw	128
  9164  0028' 00CA'              	movwf	??_gfx_fillRect+2
  9165  0029' 0849'              	movf	??_gfx_fillRect+1,w
  9166  002A' 3A80               	xorlw	128
  9167  002B' 024A'              	subwf	??_gfx_fillRect+2,w
  9168  002C' 1D03               	skipz
  9169  002D' 2800'              	goto	u3855
  9170  002E' 0848'              	movf	??_gfx_fillRect,w
  9171  002F' 024B'              	subwf	gfx_fillRect@i,w
  9172  0030'                    u3855:	
  9173  0030' 1803               	btfsc	3,0
  9174  0031' 0008               	return
  9175                           
  9176                           ;ssd1306.c: 462: gfx_drawLine( i, y, i, y+h-1, color );
  9177  0032' 0020               	movlb	0	; select bank0
  9178  0033' 084C'              	movf	gfx_fillRect@i+1,w
  9179  0034' 00B6'              	movwf	gfx_drawLine@x0+1
  9180  0035' 084B'              	movf	gfx_fillRect@i,w
  9181  0036' 00B5'              	movwf	gfx_drawLine@x0
  9182  0037' 0021               	movlb	1	; select bank1
  9183  0038' 0800'              	movf	(gfx_fillRect@y+1)^(0+128),w
  9184  0039' 0020               	movlb	0	; select bank0
  9185  003A' 00B8'              	movwf	gfx_drawLine@y0+1
  9186  003B' 0021               	movlb	1	; select bank1
  9187  003C' 0800'              	movf	gfx_fillRect@y^(0+128),w
  9188  003D' 0020               	movlb	0	; select bank0
  9189  003E' 00B7'              	movwf	gfx_drawLine@y0
  9190  003F' 084C'              	movf	gfx_fillRect@i+1,w
  9191  0040' 00BA'              	movwf	gfx_drawLine@x1+1
  9192  0041' 084B'              	movf	gfx_fillRect@i,w
  9193  0042' 00B9'              	movwf	gfx_drawLine@x1
  9194  0043' 0021               	movlb	1	; select bank1
  9195  0044' 0800'              	movf	gfx_fillRect@h^(0+128),w
  9196  0045' 0700'              	addwf	gfx_fillRect@y^(0+128),w
  9197  0046' 0020               	movlb	0	; select bank0
  9198  0047' 00C8'              	movwf	??_gfx_fillRect
  9199  0048' 0021               	movlb	1	; select bank1
  9200  0049' 0800'              	movf	(gfx_fillRect@h+1)^(0+128),w
  9201  004A' 3D00'              	addwfc	(gfx_fillRect@y+1)^(0+128),w
  9202  004B' 0020               	movlb	0	; select bank0
  9203  004C' 00C9'              	movwf	??_gfx_fillRect+1
  9204  004D' 0848'              	movf	??_gfx_fillRect,w
  9205  004E' 3EFF               	addlw	255
  9206  004F' 00BB'              	movwf	gfx_drawLine@y1
  9207  0050' 30FF               	movlw	255
  9208  0051' 3D49'              	addwfc	??_gfx_fillRect+1,w
  9209  0052' 00BC'              	movwf	gfx_drawLine@y1+1
  9210  0053' 0021               	movlb	1	; select bank1
  9211  0054' 0800'              	movf	(gfx_fillRect@color+1)^(0+128),w
  9212  0055' 0020               	movlb	0	; select bank0
  9213  0056' 00BE'              	movwf	gfx_drawLine@color+1
  9214  0057' 0021               	movlb	1	; select bank1
  9215  0058' 0800'              	movf	gfx_fillRect@color^(0+128),w
  9216  0059' 0020               	movlb	0	; select bank0
  9217  005A' 00BD'              	movwf	gfx_drawLine@color
  9218  005B' 3180' 2000' 3180'  	fcall	_gfx_drawLine
  9219  005E' 3001               	movlw	1
  9220  005F' 0020               	movlb	0	; select bank0
  9221  0060' 07CB'              	addwf	gfx_fillRect@i,f
  9222  0061' 3000               	movlw	0
  9223  0062' 3DCC'              	addwfc	gfx_fillRect@i+1,f
  9224  0063' 2800'              	goto	l3862
  9225  0064'                    l3864:	
  9226                           ;ssd1306.c: 463: }
  9227                           ;ssd1306.c: 464: }else{
  9228                           
  9229                           
  9230                           ;ssd1306.c: 465: for( i = y ; i < y+h ; i++ ){
  9231  0064' 0021               	movlb	1	; select bank1
  9232  0065' 0800'              	movf	(gfx_fillRect@y+1)^(0+128),w
  9233  0066' 0020               	movlb	0	; select bank0
  9234  0067' 00CC'              	movwf	gfx_fillRect@i+1
  9235  0068' 0021               	movlb	1	; select bank1
  9236  0069' 0800'              	movf	gfx_fillRect@y^(0+128),w
  9237  006A' 0020               	movlb	0	; select bank0
  9238  006B' 00CB'              	movwf	gfx_fillRect@i
  9239  006C'                    l3870:	
  9240  006C' 0021               	movlb	1	; select bank1
  9241  006D' 0800'              	movf	gfx_fillRect@h^(0+128),w
  9242  006E' 0700'              	addwf	gfx_fillRect@y^(0+128),w
  9243  006F' 0020               	movlb	0	; select bank0
  9244  0070' 00C8'              	movwf	??_gfx_fillRect
  9245  0071' 0021               	movlb	1	; select bank1
  9246  0072' 0800'              	movf	(gfx_fillRect@h+1)^(0+128),w
  9247  0073' 3D00'              	addwfc	(gfx_fillRect@y+1)^(0+128),w
  9248  0074' 0020               	movlb	0	; select bank0
  9249  0075' 00C9'              	movwf	??_gfx_fillRect+1
  9250  0076' 084C'              	movf	gfx_fillRect@i+1,w
  9251  0077' 3A80               	xorlw	128
  9252  0078' 00CA'              	movwf	??_gfx_fillRect+2
  9253  0079' 0849'              	movf	??_gfx_fillRect+1,w
  9254  007A' 3A80               	xorlw	128
  9255  007B' 024A'              	subwf	??_gfx_fillRect+2,w
  9256  007C' 1D03               	skipz
  9257  007D' 2800'              	goto	u3865
  9258  007E' 0848'              	movf	??_gfx_fillRect,w
  9259  007F' 024B'              	subwf	gfx_fillRect@i,w
  9260  0080'                    u3865:	
  9261  0080' 1803               	btfsc	3,0
  9262  0081' 0008               	return
  9263                           
  9264                           ;ssd1306.c: 466: gfx_drawLine( x, i, x+w-1, i, color );
  9265  0082' 0021               	movlb	1	; select bank1
  9266  0083' 0800'              	movf	(gfx_fillRect@x+1)^(0+128),w
  9267  0084' 0020               	movlb	0	; select bank0
  9268  0085' 00B6'              	movwf	gfx_drawLine@x0+1
  9269  0086' 0021               	movlb	1	; select bank1
  9270  0087' 0800'              	movf	gfx_fillRect@x^(0+128),w
  9271  0088' 0020               	movlb	0	; select bank0
  9272  0089' 00B5'              	movwf	gfx_drawLine@x0
  9273  008A' 084C'              	movf	gfx_fillRect@i+1,w
  9274  008B' 00B8'              	movwf	gfx_drawLine@y0+1
  9275  008C' 084B'              	movf	gfx_fillRect@i,w
  9276  008D' 00B7'              	movwf	gfx_drawLine@y0
  9277  008E' 0021               	movlb	1	; select bank1
  9278  008F' 0800'              	movf	gfx_fillRect@w^(0+128),w
  9279  0090' 0700'              	addwf	gfx_fillRect@x^(0+128),w
  9280  0091' 0020               	movlb	0	; select bank0
  9281  0092' 00C8'              	movwf	??_gfx_fillRect
  9282  0093' 0021               	movlb	1	; select bank1
  9283  0094' 0800'              	movf	(gfx_fillRect@w+1)^(0+128),w
  9284  0095' 3D00'              	addwfc	(gfx_fillRect@x+1)^(0+128),w
  9285  0096' 0020               	movlb	0	; select bank0
  9286  0097' 00C9'              	movwf	??_gfx_fillRect+1
  9287  0098' 0848'              	movf	??_gfx_fillRect,w
  9288  0099' 3EFF               	addlw	255
  9289  009A' 00B9'              	movwf	gfx_drawLine@x1
  9290  009B' 30FF               	movlw	255
  9291  009C' 3D49'              	addwfc	??_gfx_fillRect+1,w
  9292  009D' 00BA'              	movwf	gfx_drawLine@x1+1
  9293  009E' 084C'              	movf	gfx_fillRect@i+1,w
  9294  009F' 00BC'              	movwf	gfx_drawLine@y1+1
  9295  00A0' 084B'              	movf	gfx_fillRect@i,w
  9296  00A1' 00BB'              	movwf	gfx_drawLine@y1
  9297  00A2' 0021               	movlb	1	; select bank1
  9298  00A3' 0800'              	movf	(gfx_fillRect@color+1)^(0+128),w
  9299  00A4' 0020               	movlb	0	; select bank0
  9300  00A5' 00BE'              	movwf	gfx_drawLine@color+1
  9301  00A6' 0021               	movlb	1	; select bank1
  9302  00A7' 0800'              	movf	gfx_fillRect@color^(0+128),w
  9303  00A8' 0020               	movlb	0	; select bank0
  9304  00A9' 00BD'              	movwf	gfx_drawLine@color
  9305  00AA' 3180' 2000' 3180'  	fcall	_gfx_drawLine
  9306  00AD' 3001               	movlw	1
  9307  00AE' 0020               	movlb	0	; select bank0
  9308  00AF' 07CB'              	addwf	gfx_fillRect@i,f
  9309  00B0' 3000               	movlw	0
  9310  00B1' 3DCC'              	addwfc	gfx_fillRect@i+1,f
  9311  00B2' 2800'              	goto	l3870
  9312  00B3'                    __end_of_gfx_fillRect:	
  9313                           
  9314                           	psect	text12
  9315  0000'                    __ptext12:	
  9316 ;; *************** function _gfx_height *****************
  9317 ;; Defined at:
  9318 ;;		line 286 in file "ssd1306.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;		None
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  2    0[BANK0 ] int 
  9325 ;; Registers used:
  9326 ;;		wreg
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9335 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9336 ;;Total ram usage:        2 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:    3
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_main
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           
  9347                           ;psect for function _gfx_height
  9348  0000'                    _gfx_height:	
  9349                           
  9350                           ;ssd1306.c: 287: return _height;
  9351                           
  9352                           ;incstack = 0
  9353                           ; Regs used in _gfx_height: [wreg]
  9354  0000' 0022               	movlb	2	; select bank2
  9355  0001' 0800'              	movf	(__height+1)^(0+256),w
  9356  0002' 0020               	movlb	0	; select bank0
  9357  0003' 0081'              	movwf	?_gfx_height+1
  9358  0004' 0022               	movlb	2	; select bank2
  9359  0005' 0800'              	movf	__height^(0+256),w
  9360  0006' 0020               	movlb	0	; select bank0
  9361  0007' 0080'              	movwf	?_gfx_height
  9362  0008' 0008               	return
  9363  0009'                    __end_of_gfx_height:	
  9364                           
  9365                           	psect	text13
  9366  0000'                    __ptext13:	
  9367 ;; *************** function _gfx_drawTriangle *****************
  9368 ;; Defined at:
  9369 ;;		line 504 in file "ssd1306.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  x0              2   12[BANK1 ] int 
  9372 ;;  y0              2   14[BANK1 ] int 
  9373 ;;  x1              2   16[BANK1 ] int 
  9374 ;;  y1              2   18[BANK1 ] int 
  9375 ;;  x2              2   20[BANK1 ] int 
  9376 ;;  y2              2   22[BANK1 ] int 
  9377 ;;  color           2   24[BANK1 ] unsigned int 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;		None
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      void 
  9382 ;; Registers used:
  9383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9389 ;;      Params:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9392 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9393 ;;Total ram usage:       14 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:    7
  9396 ;; This function calls:
  9397 ;;		_gfx_drawLine
  9398 ;; This function is called by:
  9399 ;;		_main
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           
  9404                           ;psect for function _gfx_drawTriangle
  9405  0000'                    _gfx_drawTriangle:	
  9406                           
  9407                           ;ssd1306.c: 506: gfx_drawLine( x0, y0, x1, y1, color );
  9408                           
  9409                           ;incstack = 0
  9410                           ; Regs used in _gfx_drawTriangle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9411  0000' 0021               	movlb	1	; select bank1
  9412  0001' 0800'              	movf	(gfx_drawTriangle@x0+1)^(0+128),w
  9413  0002' 0020               	movlb	0	; select bank0
  9414  0003' 00B6'              	movwf	gfx_drawLine@x0+1
  9415  0004' 0021               	movlb	1	; select bank1
  9416  0005' 0800'              	movf	gfx_drawTriangle@x0^(0+128),w
  9417  0006' 0020               	movlb	0	; select bank0
  9418  0007' 00B5'              	movwf	gfx_drawLine@x0
  9419  0008' 0021               	movlb	1	; select bank1
  9420  0009' 0800'              	movf	(gfx_drawTriangle@y0+1)^(0+128),w
  9421  000A' 0020               	movlb	0	; select bank0
  9422  000B' 00B8'              	movwf	gfx_drawLine@y0+1
  9423  000C' 0021               	movlb	1	; select bank1
  9424  000D' 0800'              	movf	gfx_drawTriangle@y0^(0+128),w
  9425  000E' 0020               	movlb	0	; select bank0
  9426  000F' 00B7'              	movwf	gfx_drawLine@y0
  9427  0010' 0021               	movlb	1	; select bank1
  9428  0011' 0800'              	movf	(gfx_drawTriangle@x1+1)^(0+128),w
  9429  0012' 0020               	movlb	0	; select bank0
  9430  0013' 00BA'              	movwf	gfx_drawLine@x1+1
  9431  0014' 0021               	movlb	1	; select bank1
  9432  0015' 0800'              	movf	gfx_drawTriangle@x1^(0+128),w
  9433  0016' 0020               	movlb	0	; select bank0
  9434  0017' 00B9'              	movwf	gfx_drawLine@x1
  9435  0018' 0021               	movlb	1	; select bank1
  9436  0019' 0800'              	movf	(gfx_drawTriangle@y1+1)^(0+128),w
  9437  001A' 0020               	movlb	0	; select bank0
  9438  001B' 00BC'              	movwf	gfx_drawLine@y1+1
  9439  001C' 0021               	movlb	1	; select bank1
  9440  001D' 0800'              	movf	gfx_drawTriangle@y1^(0+128),w
  9441  001E' 0020               	movlb	0	; select bank0
  9442  001F' 00BB'              	movwf	gfx_drawLine@y1
  9443  0020' 0021               	movlb	1	; select bank1
  9444  0021' 0800'              	movf	(gfx_drawTriangle@color+1)^(0+128),w
  9445  0022' 0020               	movlb	0	; select bank0
  9446  0023' 00BE'              	movwf	gfx_drawLine@color+1
  9447  0024' 0021               	movlb	1	; select bank1
  9448  0025' 0800'              	movf	gfx_drawTriangle@color^(0+128),w
  9449  0026' 0020               	movlb	0	; select bank0
  9450  0027' 00BD'              	movwf	gfx_drawLine@color
  9451  0028' 3180' 2000' 3180'  	fcall	_gfx_drawLine
  9452                           
  9453                           ;ssd1306.c: 507: gfx_drawLine( x1, y1, x2, y2, color );
  9454  002B' 0021               	movlb	1	; select bank1
  9455  002C' 0800'              	movf	(gfx_drawTriangle@x1+1)^(0+128),w
  9456  002D' 0020               	movlb	0	; select bank0
  9457  002E' 00B6'              	movwf	gfx_drawLine@x0+1
  9458  002F' 0021               	movlb	1	; select bank1
  9459  0030' 0800'              	movf	gfx_drawTriangle@x1^(0+128),w
  9460  0031' 0020               	movlb	0	; select bank0
  9461  0032' 00B5'              	movwf	gfx_drawLine@x0
  9462  0033' 0021               	movlb	1	; select bank1
  9463  0034' 0800'              	movf	(gfx_drawTriangle@y1+1)^(0+128),w
  9464  0035' 0020               	movlb	0	; select bank0
  9465  0036' 00B8'              	movwf	gfx_drawLine@y0+1
  9466  0037' 0021               	movlb	1	; select bank1
  9467  0038' 0800'              	movf	gfx_drawTriangle@y1^(0+128),w
  9468  0039' 0020               	movlb	0	; select bank0
  9469  003A' 00B7'              	movwf	gfx_drawLine@y0
  9470  003B' 0021               	movlb	1	; select bank1
  9471  003C' 0800'              	movf	(gfx_drawTriangle@x2+1)^(0+128),w
  9472  003D' 0020               	movlb	0	; select bank0
  9473  003E' 00BA'              	movwf	gfx_drawLine@x1+1
  9474  003F' 0021               	movlb	1	; select bank1
  9475  0040' 0800'              	movf	gfx_drawTriangle@x2^(0+128),w
  9476  0041' 0020               	movlb	0	; select bank0
  9477  0042' 00B9'              	movwf	gfx_drawLine@x1
  9478  0043' 0021               	movlb	1	; select bank1
  9479  0044' 0800'              	movf	(gfx_drawTriangle@y2+1)^(0+128),w
  9480  0045' 0020               	movlb	0	; select bank0
  9481  0046' 00BC'              	movwf	gfx_drawLine@y1+1
  9482  0047' 0021               	movlb	1	; select bank1
  9483  0048' 0800'              	movf	gfx_drawTriangle@y2^(0+128),w
  9484  0049' 0020               	movlb	0	; select bank0
  9485  004A' 00BB'              	movwf	gfx_drawLine@y1
  9486  004B' 0021               	movlb	1	; select bank1
  9487  004C' 0800'              	movf	(gfx_drawTriangle@color+1)^(0+128),w
  9488  004D' 0020               	movlb	0	; select bank0
  9489  004E' 00BE'              	movwf	gfx_drawLine@color+1
  9490  004F' 0021               	movlb	1	; select bank1
  9491  0050' 0800'              	movf	gfx_drawTriangle@color^(0+128),w
  9492  0051' 0020               	movlb	0	; select bank0
  9493  0052' 00BD'              	movwf	gfx_drawLine@color
  9494  0053' 3180' 2000' 3180'  	fcall	_gfx_drawLine
  9495                           
  9496                           ;ssd1306.c: 508: gfx_drawLine( x2, y2, x0, y0, color );
  9497  0056' 0021               	movlb	1	; select bank1
  9498  0057' 0800'              	movf	(gfx_drawTriangle@x2+1)^(0+128),w
  9499  0058' 0020               	movlb	0	; select bank0
  9500  0059' 00B6'              	movwf	gfx_drawLine@x0+1
  9501  005A' 0021               	movlb	1	; select bank1
  9502  005B' 0800'              	movf	gfx_drawTriangle@x2^(0+128),w
  9503  005C' 0020               	movlb	0	; select bank0
  9504  005D' 00B5'              	movwf	gfx_drawLine@x0
  9505  005E' 0021               	movlb	1	; select bank1
  9506  005F' 0800'              	movf	(gfx_drawTriangle@y2+1)^(0+128),w
  9507  0060' 0020               	movlb	0	; select bank0
  9508  0061' 00B8'              	movwf	gfx_drawLine@y0+1
  9509  0062' 0021               	movlb	1	; select bank1
  9510  0063' 0800'              	movf	gfx_drawTriangle@y2^(0+128),w
  9511  0064' 0020               	movlb	0	; select bank0
  9512  0065' 00B7'              	movwf	gfx_drawLine@y0
  9513  0066' 0021               	movlb	1	; select bank1
  9514  0067' 0800'              	movf	(gfx_drawTriangle@x0+1)^(0+128),w
  9515  0068' 0020               	movlb	0	; select bank0
  9516  0069' 00BA'              	movwf	gfx_drawLine@x1+1
  9517  006A' 0021               	movlb	1	; select bank1
  9518  006B' 0800'              	movf	gfx_drawTriangle@x0^(0+128),w
  9519  006C' 0020               	movlb	0	; select bank0
  9520  006D' 00B9'              	movwf	gfx_drawLine@x1
  9521  006E' 0021               	movlb	1	; select bank1
  9522  006F' 0800'              	movf	(gfx_drawTriangle@y0+1)^(0+128),w
  9523  0070' 0020               	movlb	0	; select bank0
  9524  0071' 00BC'              	movwf	gfx_drawLine@y1+1
  9525  0072' 0021               	movlb	1	; select bank1
  9526  0073' 0800'              	movf	gfx_drawTriangle@y0^(0+128),w
  9527  0074' 0020               	movlb	0	; select bank0
  9528  0075' 00BB'              	movwf	gfx_drawLine@y1
  9529  0076' 0021               	movlb	1	; select bank1
  9530  0077' 0800'              	movf	(gfx_drawTriangle@color+1)^(0+128),w
  9531  0078' 0020               	movlb	0	; select bank0
  9532  0079' 00BE'              	movwf	gfx_drawLine@color+1
  9533  007A' 0021               	movlb	1	; select bank1
  9534  007B' 0800'              	movf	gfx_drawTriangle@color^(0+128),w
  9535  007C' 0020               	movlb	0	; select bank0
  9536  007D' 00BD'              	movwf	gfx_drawLine@color
  9537  007E' 3180' 2000'        	fcall	_gfx_drawLine
  9538  0080' 0008               	return
  9539  0081'                    __end_of_gfx_drawTriangle:	
  9540                           
  9541                           	psect	text14
  9542  0000'                    __ptext14:	
  9543 ;; *************** function _gfx_drawRect *****************
  9544 ;; Defined at:
  9545 ;;		line 450 in file "ssd1306.c"
  9546 ;; Parameters:    Size  Location     Type
  9547 ;;  x               2   12[BANK1 ] int 
  9548 ;;  y               2   14[BANK1 ] int 
  9549 ;;  w               2   16[BANK1 ] int 
  9550 ;;  h               2   18[BANK1 ] int 
  9551 ;;  color           2   20[BANK1 ] unsigned int 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9563 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9565 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9566 ;;      Totals:         0       6      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9567 ;;Total ram usage:       16 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; Hardware stack levels required when called:    7
  9570 ;; This function calls:
  9571 ;;		_gfx_drawLine
  9572 ;; This function is called by:
  9573 ;;		_main
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           
  9578                           ;psect for function _gfx_drawRect
  9579  0000'                    _gfx_drawRect:	
  9580                           
  9581                           ;ssd1306.c: 452: gfx_drawLine( x, y, x+w-1, y, color );
  9582                           
  9583                           ;incstack = 0
  9584                           ; Regs used in _gfx_drawRect: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9585  0000' 0021               	movlb	1	; select bank1
  9586  0001' 0800'              	movf	(gfx_drawRect@x+1)^(0+128),w
  9587  0002' 0020               	movlb	0	; select bank0
  9588  0003' 00B6'              	movwf	gfx_drawLine@x0+1
  9589  0004' 0021               	movlb	1	; select bank1
  9590  0005' 0800'              	movf	gfx_drawRect@x^(0+128),w
  9591  0006' 0020               	movlb	0	; select bank0
  9592  0007' 00B5'              	movwf	gfx_drawLine@x0
  9593  0008' 0021               	movlb	1	; select bank1
  9594  0009' 0800'              	movf	(gfx_drawRect@y+1)^(0+128),w
  9595  000A' 0020               	movlb	0	; select bank0
  9596  000B' 00B8'              	movwf	gfx_drawLine@y0+1
  9597  000C' 0021               	movlb	1	; select bank1
  9598  000D' 0800'              	movf	gfx_drawRect@y^(0+128),w
  9599  000E' 0020               	movlb	0	; select bank0
  9600  000F' 00B7'              	movwf	gfx_drawLine@y0
  9601  0010' 0021               	movlb	1	; select bank1
  9602  0011' 0800'              	movf	gfx_drawRect@w^(0+128),w
  9603  0012' 0700'              	addwf	gfx_drawRect@x^(0+128),w
  9604  0013' 0020               	movlb	0	; select bank0
  9605  0014' 00C8'              	movwf	??_gfx_drawRect
  9606  0015' 0021               	movlb	1	; select bank1
  9607  0016' 0800'              	movf	(gfx_drawRect@w+1)^(0+128),w
  9608  0017' 3D00'              	addwfc	(gfx_drawRect@x+1)^(0+128),w
  9609  0018' 0020               	movlb	0	; select bank0
  9610  0019' 00C9'              	movwf	??_gfx_drawRect+1
  9611  001A' 0848'              	movf	??_gfx_drawRect,w
  9612  001B' 3EFF               	addlw	255
  9613  001C' 00B9'              	movwf	gfx_drawLine@x1
  9614  001D' 30FF               	movlw	255
  9615  001E' 3D49'              	addwfc	??_gfx_drawRect+1,w
  9616  001F' 00BA'              	movwf	gfx_drawLine@x1+1
  9617  0020' 0021               	movlb	1	; select bank1
  9618  0021' 0800'              	movf	(gfx_drawRect@y+1)^(0+128),w
  9619  0022' 0020               	movlb	0	; select bank0
  9620  0023' 00BC'              	movwf	gfx_drawLine@y1+1
  9621  0024' 0021               	movlb	1	; select bank1
  9622  0025' 0800'              	movf	gfx_drawRect@y^(0+128),w
  9623  0026' 0020               	movlb	0	; select bank0
  9624  0027' 00BB'              	movwf	gfx_drawLine@y1
  9625  0028' 0021               	movlb	1	; select bank1
  9626  0029' 0800'              	movf	(gfx_drawRect@color+1)^(0+128),w
  9627  002A' 0020               	movlb	0	; select bank0
  9628  002B' 00BE'              	movwf	gfx_drawLine@color+1
  9629  002C' 0021               	movlb	1	; select bank1
  9630  002D' 0800'              	movf	gfx_drawRect@color^(0+128),w
  9631  002E' 0020               	movlb	0	; select bank0
  9632  002F' 00BD'              	movwf	gfx_drawLine@color
  9633  0030' 3180' 2000' 3180'  	fcall	_gfx_drawLine
  9634                           
  9635                           ;ssd1306.c: 453: gfx_drawLine( x, y+h-1, x+w-1, y+h-1, color );
  9636  0033' 0021               	movlb	1	; select bank1
  9637  0034' 0800'              	movf	(gfx_drawRect@x+1)^(0+128),w
  9638  0035' 0020               	movlb	0	; select bank0
  9639  0036' 00B6'              	movwf	gfx_drawLine@x0+1
  9640  0037' 0021               	movlb	1	; select bank1
  9641  0038' 0800'              	movf	gfx_drawRect@x^(0+128),w
  9642  0039' 0020               	movlb	0	; select bank0
  9643  003A' 00B5'              	movwf	gfx_drawLine@x0
  9644  003B' 0021               	movlb	1	; select bank1
  9645  003C' 0800'              	movf	gfx_drawRect@h^(0+128),w
  9646  003D' 0700'              	addwf	gfx_drawRect@y^(0+128),w
  9647  003E' 0020               	movlb	0	; select bank0
  9648  003F' 00C8'              	movwf	??_gfx_drawRect
  9649  0040' 0021               	movlb	1	; select bank1
  9650  0041' 0800'              	movf	(gfx_drawRect@h+1)^(0+128),w
  9651  0042' 3D00'              	addwfc	(gfx_drawRect@y+1)^(0+128),w
  9652  0043' 0020               	movlb	0	; select bank0
  9653  0044' 00C9'              	movwf	??_gfx_drawRect+1
  9654  0045' 0848'              	movf	??_gfx_drawRect,w
  9655  0046' 3EFF               	addlw	255
  9656  0047' 00B7'              	movwf	gfx_drawLine@y0
  9657  0048' 30FF               	movlw	255
  9658  0049' 3D49'              	addwfc	??_gfx_drawRect+1,w
  9659  004A' 00B8'              	movwf	gfx_drawLine@y0+1
  9660  004B' 0021               	movlb	1	; select bank1
  9661  004C' 0800'              	movf	gfx_drawRect@w^(0+128),w
  9662  004D' 0700'              	addwf	gfx_drawRect@x^(0+128),w
  9663  004E' 0020               	movlb	0	; select bank0
  9664  004F' 00CA'              	movwf	??_gfx_drawRect+2
  9665  0050' 0021               	movlb	1	; select bank1
  9666  0051' 0800'              	movf	(gfx_drawRect@w+1)^(0+128),w
  9667  0052' 3D00'              	addwfc	(gfx_drawRect@x+1)^(0+128),w
  9668  0053' 0020               	movlb	0	; select bank0
  9669  0054' 00CB'              	movwf	??_gfx_drawRect+3
  9670  0055' 084A'              	movf	??_gfx_drawRect+2,w
  9671  0056' 3EFF               	addlw	255
  9672  0057' 00B9'              	movwf	gfx_drawLine@x1
  9673  0058' 30FF               	movlw	255
  9674  0059' 3D4B'              	addwfc	??_gfx_drawRect+3,w
  9675  005A' 00BA'              	movwf	gfx_drawLine@x1+1
  9676  005B' 0021               	movlb	1	; select bank1
  9677  005C' 0800'              	movf	gfx_drawRect@h^(0+128),w
  9678  005D' 0700'              	addwf	gfx_drawRect@y^(0+128),w
  9679  005E' 0020               	movlb	0	; select bank0
  9680  005F' 00CC'              	movwf	??_gfx_drawRect+4
  9681  0060' 0021               	movlb	1	; select bank1
  9682  0061' 0800'              	movf	(gfx_drawRect@h+1)^(0+128),w
  9683  0062' 3D00'              	addwfc	(gfx_drawRect@y+1)^(0+128),w
  9684  0063' 0020               	movlb	0	; select bank0
  9685  0064' 00CD'              	movwf	??_gfx_drawRect+5
  9686  0065' 084C'              	movf	??_gfx_drawRect+4,w
  9687  0066' 3EFF               	addlw	255
  9688  0067' 00BB'              	movwf	gfx_drawLine@y1
  9689  0068' 30FF               	movlw	255
  9690  0069' 3D4D'              	addwfc	??_gfx_drawRect+5,w
  9691  006A' 00BC'              	movwf	gfx_drawLine@y1+1
  9692  006B' 0021               	movlb	1	; select bank1
  9693  006C' 0800'              	movf	(gfx_drawRect@color+1)^(0+128),w
  9694  006D' 0020               	movlb	0	; select bank0
  9695  006E' 00BE'              	movwf	gfx_drawLine@color+1
  9696  006F' 0021               	movlb	1	; select bank1
  9697  0070' 0800'              	movf	gfx_drawRect@color^(0+128),w
  9698  0071' 0020               	movlb	0	; select bank0
  9699  0072' 00BD'              	movwf	gfx_drawLine@color
  9700  0073' 3180' 2000' 3180'  	fcall	_gfx_drawLine
  9701                           
  9702                           ;ssd1306.c: 454: gfx_drawLine( x, y, x, y+h-1, color );
  9703  0076' 0021               	movlb	1	; select bank1
  9704  0077' 0800'              	movf	(gfx_drawRect@x+1)^(0+128),w
  9705  0078' 0020               	movlb	0	; select bank0
  9706  0079' 00B6'              	movwf	gfx_drawLine@x0+1
  9707  007A' 0021               	movlb	1	; select bank1
  9708  007B' 0800'              	movf	gfx_drawRect@x^(0+128),w
  9709  007C' 0020               	movlb	0	; select bank0
  9710  007D' 00B5'              	movwf	gfx_drawLine@x0
  9711  007E' 0021               	movlb	1	; select bank1
  9712  007F' 0800'              	movf	(gfx_drawRect@y+1)^(0+128),w
  9713  0080' 0020               	movlb	0	; select bank0
  9714  0081' 00B8'              	movwf	gfx_drawLine@y0+1
  9715  0082' 0021               	movlb	1	; select bank1
  9716  0083' 0800'              	movf	gfx_drawRect@y^(0+128),w
  9717  0084' 0020               	movlb	0	; select bank0
  9718  0085' 00B7'              	movwf	gfx_drawLine@y0
  9719  0086' 0021               	movlb	1	; select bank1
  9720  0087' 0800'              	movf	(gfx_drawRect@x+1)^(0+128),w
  9721  0088' 0020               	movlb	0	; select bank0
  9722  0089' 00BA'              	movwf	gfx_drawLine@x1+1
  9723  008A' 0021               	movlb	1	; select bank1
  9724  008B' 0800'              	movf	gfx_drawRect@x^(0+128),w
  9725  008C' 0020               	movlb	0	; select bank0
  9726  008D' 00B9'              	movwf	gfx_drawLine@x1
  9727  008E' 0021               	movlb	1	; select bank1
  9728  008F' 0800'              	movf	gfx_drawRect@h^(0+128),w
  9729  0090' 0700'              	addwf	gfx_drawRect@y^(0+128),w
  9730  0091' 0020               	movlb	0	; select bank0
  9731  0092' 00C8'              	movwf	??_gfx_drawRect
  9732  0093' 0021               	movlb	1	; select bank1
  9733  0094' 0800'              	movf	(gfx_drawRect@h+1)^(0+128),w
  9734  0095' 3D00'              	addwfc	(gfx_drawRect@y+1)^(0+128),w
  9735  0096' 0020               	movlb	0	; select bank0
  9736  0097' 00C9'              	movwf	??_gfx_drawRect+1
  9737  0098' 0848'              	movf	??_gfx_drawRect,w
  9738  0099' 3EFF               	addlw	255
  9739  009A' 00BB'              	movwf	gfx_drawLine@y1
  9740  009B' 30FF               	movlw	255
  9741  009C' 3D49'              	addwfc	??_gfx_drawRect+1,w
  9742  009D' 00BC'              	movwf	gfx_drawLine@y1+1
  9743  009E' 0021               	movlb	1	; select bank1
  9744  009F' 0800'              	movf	(gfx_drawRect@color+1)^(0+128),w
  9745  00A0' 0020               	movlb	0	; select bank0
  9746  00A1' 00BE'              	movwf	gfx_drawLine@color+1
  9747  00A2' 0021               	movlb	1	; select bank1
  9748  00A3' 0800'              	movf	gfx_drawRect@color^(0+128),w
  9749  00A4' 0020               	movlb	0	; select bank0
  9750  00A5' 00BD'              	movwf	gfx_drawLine@color
  9751  00A6' 3180' 2000' 3180'  	fcall	_gfx_drawLine
  9752                           
  9753                           ;ssd1306.c: 455: gfx_drawLine( x+w-1, y, x+w-1, y+h-1, color );
  9754  00A9' 0021               	movlb	1	; select bank1
  9755  00AA' 0800'              	movf	gfx_drawRect@w^(0+128),w
  9756  00AB' 0700'              	addwf	gfx_drawRect@x^(0+128),w
  9757  00AC' 0020               	movlb	0	; select bank0
  9758  00AD' 00C8'              	movwf	??_gfx_drawRect
  9759  00AE' 0021               	movlb	1	; select bank1
  9760  00AF' 0800'              	movf	(gfx_drawRect@w+1)^(0+128),w
  9761  00B0' 3D00'              	addwfc	(gfx_drawRect@x+1)^(0+128),w
  9762  00B1' 0020               	movlb	0	; select bank0
  9763  00B2' 00C9'              	movwf	??_gfx_drawRect+1
  9764  00B3' 0848'              	movf	??_gfx_drawRect,w
  9765  00B4' 3EFF               	addlw	255
  9766  00B5' 00B5'              	movwf	gfx_drawLine@x0
  9767  00B6' 30FF               	movlw	255
  9768  00B7' 3D49'              	addwfc	??_gfx_drawRect+1,w
  9769  00B8' 00B6'              	movwf	gfx_drawLine@x0+1
  9770  00B9' 0021               	movlb	1	; select bank1
  9771  00BA' 0800'              	movf	(gfx_drawRect@y+1)^(0+128),w
  9772  00BB' 0020               	movlb	0	; select bank0
  9773  00BC' 00B8'              	movwf	gfx_drawLine@y0+1
  9774  00BD' 0021               	movlb	1	; select bank1
  9775  00BE' 0800'              	movf	gfx_drawRect@y^(0+128),w
  9776  00BF' 0020               	movlb	0	; select bank0
  9777  00C0' 00B7'              	movwf	gfx_drawLine@y0
  9778  00C1' 0021               	movlb	1	; select bank1
  9779  00C2' 0800'              	movf	gfx_drawRect@w^(0+128),w
  9780  00C3' 0700'              	addwf	gfx_drawRect@x^(0+128),w
  9781  00C4' 0020               	movlb	0	; select bank0
  9782  00C5' 00CA'              	movwf	??_gfx_drawRect+2
  9783  00C6' 0021               	movlb	1	; select bank1
  9784  00C7' 0800'              	movf	(gfx_drawRect@w+1)^(0+128),w
  9785  00C8' 3D00'              	addwfc	(gfx_drawRect@x+1)^(0+128),w
  9786  00C9' 0020               	movlb	0	; select bank0
  9787  00CA' 00CB'              	movwf	??_gfx_drawRect+3
  9788  00CB' 084A'              	movf	??_gfx_drawRect+2,w
  9789  00CC' 3EFF               	addlw	255
  9790  00CD' 00B9'              	movwf	gfx_drawLine@x1
  9791  00CE' 30FF               	movlw	255
  9792  00CF' 3D4B'              	addwfc	??_gfx_drawRect+3,w
  9793  00D0' 00BA'              	movwf	gfx_drawLine@x1+1
  9794  00D1' 0021               	movlb	1	; select bank1
  9795  00D2' 0800'              	movf	gfx_drawRect@h^(0+128),w
  9796  00D3' 0700'              	addwf	gfx_drawRect@y^(0+128),w
  9797  00D4' 0020               	movlb	0	; select bank0
  9798  00D5' 00CC'              	movwf	??_gfx_drawRect+4
  9799  00D6' 0021               	movlb	1	; select bank1
  9800  00D7' 0800'              	movf	(gfx_drawRect@h+1)^(0+128),w
  9801  00D8' 3D00'              	addwfc	(gfx_drawRect@y+1)^(0+128),w
  9802  00D9' 0020               	movlb	0	; select bank0
  9803  00DA' 00CD'              	movwf	??_gfx_drawRect+5
  9804  00DB' 084C'              	movf	??_gfx_drawRect+4,w
  9805  00DC' 3EFF               	addlw	255
  9806  00DD' 00BB'              	movwf	gfx_drawLine@y1
  9807  00DE' 30FF               	movlw	255
  9808  00DF' 3D4D'              	addwfc	??_gfx_drawRect+5,w
  9809  00E0' 00BC'              	movwf	gfx_drawLine@y1+1
  9810  00E1' 0021               	movlb	1	; select bank1
  9811  00E2' 0800'              	movf	(gfx_drawRect@color+1)^(0+128),w
  9812  00E3' 0020               	movlb	0	; select bank0
  9813  00E4' 00BE'              	movwf	gfx_drawLine@color+1
  9814  00E5' 0021               	movlb	1	; select bank1
  9815  00E6' 0800'              	movf	gfx_drawRect@color^(0+128),w
  9816  00E7' 0020               	movlb	0	; select bank0
  9817  00E8' 00BD'              	movwf	gfx_drawLine@color
  9818  00E9' 3180' 2000'        	fcall	_gfx_drawLine
  9819  00EB' 0008               	return
  9820  00EC'                    __end_of_gfx_drawRect:	
  9821                           
  9822                           	psect	text15
  9823  0000'                    __ptext15:	
  9824 ;; *************** function _gfx_drawLine *****************
  9825 ;; Defined at:
  9826 ;;		line 407 in file "ssd1306.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  x0              2   53[BANK0 ] int 
  9829 ;;  y0              2   55[BANK0 ] int 
  9830 ;;  x1              2   57[BANK0 ] int 
  9831 ;;  y1              2   59[BANK0 ] int 
  9832 ;;  color           2   61[BANK0 ] unsigned int 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  t               2   10[BANK1 ] int 
  9835 ;;  dx              2    8[BANK1 ] int 
  9836 ;;  steep           2    6[BANK1 ] int 
  9837 ;;  err             2    4[BANK1 ] int 
  9838 ;;  ystep           2    2[BANK1 ] int 
  9839 ;;  dy              2    0[BANK1 ] int 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  1    wreg      void 
  9842 ;; Registers used:
  9843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9849 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9850 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9851 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9852 ;;      Totals:         0      19      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9853 ;;Total ram usage:       31 bytes
  9854 ;; Hardware stack levels used:    1
  9855 ;; Hardware stack levels required when called:    6
  9856 ;; This function calls:
  9857 ;;		___awdiv
  9858 ;;		_gfx_drawPixel
  9859 ;;		_gfx_hvLine
  9860 ;;		_my_abs
  9861 ;; This function is called by:
  9862 ;;		_main
  9863 ;;		_gfx_drawRect
  9864 ;;		_gfx_fillRect
  9865 ;;		_gfx_drawTriangle
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           
  9870                           ;psect for function _gfx_drawLine
  9871  0000'                    _gfx_drawLine:	
  9872                           
  9873                           ;ssd1306.c: 409: if( x0 == x1 || y0 == y1 ){
  9874                           
  9875                           ;incstack = 0
  9876                           ; Regs used in _gfx_drawLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9877  0000' 0020               	movlb	0	; select bank0
  9878  0001' 083A'              	movf	gfx_drawLine@x1+1,w
  9879  0002' 0636'              	xorwf	gfx_drawLine@x0+1,w
  9880  0003' 1D03               	skipz
  9881  0004' 2800'              	goto	u3745
  9882  0005' 0839'              	movf	gfx_drawLine@x1,w
  9883  0006' 0635'              	xorwf	gfx_drawLine@x0,w
  9884  0007'                    u3745:	
  9885  0007' 1903               	skipnz
  9886  0008' 2800'              	goto	l3816
  9887  0009' 083C'              	movf	gfx_drawLine@y1+1,w
  9888  000A' 0638'              	xorwf	gfx_drawLine@y0+1,w
  9889  000B' 1D03               	skipz
  9890  000C' 2800'              	goto	u3755
  9891  000D' 083B'              	movf	gfx_drawLine@y1,w
  9892  000E' 0637'              	xorwf	gfx_drawLine@y0,w
  9893  000F'                    u3755:	
  9894  000F' 1D03               	skipz
  9895  0010' 2800'              	goto	l3820
  9896  0011'                    l3816:	
  9897                           
  9898                           ;ssd1306.c: 411: gfx_hvLine( x0, y0, x1, y1, color );
  9899  0011' 0836'              	movf	gfx_drawLine@x0+1,w
  9900  0012' 00A9'              	movwf	gfx_hvLine@x1+1
  9901  0013' 0835'              	movf	gfx_drawLine@x0,w
  9902  0014' 00A8'              	movwf	gfx_hvLine@x1
  9903  0015' 0838'              	movf	gfx_drawLine@y0+1,w
  9904  0016' 00AB'              	movwf	gfx_hvLine@y1+1
  9905  0017' 0837'              	movf	gfx_drawLine@y0,w
  9906  0018' 00AA'              	movwf	gfx_hvLine@y1
  9907  0019' 083A'              	movf	gfx_drawLine@x1+1,w
  9908  001A' 00AD'              	movwf	gfx_hvLine@x2+1
  9909  001B' 0839'              	movf	gfx_drawLine@x1,w
  9910  001C' 00AC'              	movwf	gfx_hvLine@x2
  9911  001D' 083C'              	movf	gfx_drawLine@y1+1,w
  9912  001E' 00AF'              	movwf	gfx_hvLine@y2+1
  9913  001F' 083B'              	movf	gfx_drawLine@y1,w
  9914  0020' 00AE'              	movwf	gfx_hvLine@y2
  9915  0021' 083E'              	movf	gfx_drawLine@color+1,w
  9916  0022' 00B1'              	movwf	gfx_hvLine@color+1
  9917  0023' 083D'              	movf	gfx_drawLine@color,w
  9918  0024' 00B0'              	movwf	gfx_hvLine@color
  9919  0025' 3180' 2000'        	fcall	_gfx_hvLine
  9920                           
  9921                           ;ssd1306.c: 412: return;
  9922  0027' 0008               	return
  9923  0028'                    l3820:	
  9924                           
  9925                           ;ssd1306.c: 413: }
  9926                           ;ssd1306.c: 415: int16_t t;
  9927                           ;ssd1306.c: 417: int16_t steep = my_abs(y1 - y0) > my_abs(x1 - x0);
  9928  0028' 0020               	movlb	0	; select bank0
  9929  0029' 0935'              	comf	gfx_drawLine@x0,w
  9930  002A' 00BF'              	movwf	??_gfx_drawLine
  9931  002B' 0936'              	comf	gfx_drawLine@x0+1,w
  9932  002C' 00C0'              	movwf	??_gfx_drawLine+1
  9933  002D' 0ABF'              	incf	??_gfx_drawLine,f
  9934  002E' 1903               	skipnz
  9935  002F' 0AC0'              	incf	??_gfx_drawLine+1,f
  9936  0030' 0839'              	movf	gfx_drawLine@x1,w
  9937  0031' 073F'              	addwf	??_gfx_drawLine,w
  9938  0032' 0080'              	movwf	my_abs@a
  9939  0033' 083A'              	movf	gfx_drawLine@x1+1,w
  9940  0034' 3D40'              	addwfc	??_gfx_drawLine+1,w
  9941  0035' 0081'              	movwf	my_abs@a+1
  9942  0036' 3180' 2000' 3180'  	fcall	_my_abs
  9943  0039' 0020               	movlb	0	; select bank0
  9944  003A' 0800'              	movf	?_my_abs,w
  9945  003B' 00C1'              	movwf	??_gfx_drawLine+2
  9946  003C' 0801'              	movf	?_my_abs+1,w
  9947  003D' 00C2'              	movwf	??_gfx_drawLine+3
  9948  003E' 0937'              	comf	gfx_drawLine@y0,w
  9949  003F' 00C3'              	movwf	??_gfx_drawLine+4
  9950  0040' 0938'              	comf	gfx_drawLine@y0+1,w
  9951  0041' 00C4'              	movwf	??_gfx_drawLine+5
  9952  0042' 0AC3'              	incf	??_gfx_drawLine+4,f
  9953  0043' 1903               	skipnz
  9954  0044' 0AC4'              	incf	??_gfx_drawLine+5,f
  9955  0045' 083B'              	movf	gfx_drawLine@y1,w
  9956  0046' 0743'              	addwf	??_gfx_drawLine+4,w
  9957  0047' 0080'              	movwf	my_abs@a
  9958  0048' 083C'              	movf	gfx_drawLine@y1+1,w
  9959  0049' 3D44'              	addwfc	??_gfx_drawLine+5,w
  9960  004A' 0081'              	movwf	my_abs@a+1
  9961  004B' 3180' 2000' 3180'  	fcall	_my_abs
  9962  004E' 0020               	movlb	0	; select bank0
  9963  004F' 0842'              	movf	??_gfx_drawLine+3,w
  9964  0050' 3A80               	xorlw	128
  9965  0051' 00C5'              	movwf	??_gfx_drawLine+6
  9966  0052' 0801'              	movf	?_my_abs+1,w
  9967  0053' 3A80               	xorlw	128
  9968  0054' 0245'              	subwf	??_gfx_drawLine+6,w
  9969  0055' 1D03               	skipz
  9970  0056' 2800'              	goto	u3765
  9971  0057' 0800'              	movf	?_my_abs,w
  9972  0058' 0241'              	subwf	??_gfx_drawLine+2,w
  9973  0059'                    u3765:	
  9974  0059' 1803               	btfsc	3,0
  9975  005A' 2800'              	goto	u3760
  9976  005B' 3001               	movlw	1
  9977  005C' 2800'              	goto	u3770
  9978  005D'                    u3760:	
  9979  005D' 3000               	movlw	0
  9980  005E'                    u3770:	
  9981  005E' 0020               	movlb	0	; select bank0
  9982  005F' 00C6'              	movwf	??_gfx_drawLine+7
  9983  0060' 01C7'              	clrf	??_gfx_drawLine+8
  9984  0061' 0846'              	movf	??_gfx_drawLine+7,w
  9985  0062' 0021               	movlb	1	; select bank1
  9986  0063' 0080'              	movwf	gfx_drawLine@steep^(0+128)
  9987  0064' 0020               	movlb	0	; select bank0
  9988  0065' 0847'              	movf	??_gfx_drawLine+8,w
  9989  0066' 0021               	movlb	1	; select bank1
  9990  0067' 0080'              	movwf	(gfx_drawLine@steep+1)^(0+128)
  9991                           
  9992                           ;ssd1306.c: 418: if( steep ){
  9993  0068' 0800'              	movf	gfx_drawLine@steep^(0+128),w
  9994  0069' 0400'              	iorwf	(gfx_drawLine@steep+1)^(0+128),w
  9995  006A' 1903               	btfsc	3,2
  9996  006B' 2800'              	goto	l593
  9997                           
  9998                           ;ssd1306.c: 419: t = x0; x0 = y0; y0 = t;
  9999  006C' 0020               	movlb	0	; select bank0
 10000  006D' 0836'              	movf	gfx_drawLine@x0+1,w
 10001  006E' 0021               	movlb	1	; select bank1
 10002  006F' 0080'              	movwf	(gfx_drawLine@t+1)^(0+128)
 10003  0070' 0020               	movlb	0	; select bank0
 10004  0071' 0835'              	movf	gfx_drawLine@x0,w
 10005  0072' 0021               	movlb	1	; select bank1
 10006  0073' 0080'              	movwf	gfx_drawLine@t^(0+128)
 10007  0074' 0020               	movlb	0	; select bank0
 10008  0075' 0838'              	movf	gfx_drawLine@y0+1,w
 10009  0076' 00B6'              	movwf	gfx_drawLine@x0+1
 10010  0077' 0837'              	movf	gfx_drawLine@y0,w
 10011  0078' 00B5'              	movwf	gfx_drawLine@x0
 10012  0079' 0021               	movlb	1	; select bank1
 10013  007A' 0800'              	movf	(gfx_drawLine@t+1)^(0+128),w
 10014  007B' 0020               	movlb	0	; select bank0
 10015  007C' 00B8'              	movwf	gfx_drawLine@y0+1
 10016  007D' 0021               	movlb	1	; select bank1
 10017  007E' 0800'              	movf	gfx_drawLine@t^(0+128),w
 10018  007F' 0020               	movlb	0	; select bank0
 10019  0080' 00B7'              	movwf	gfx_drawLine@y0
 10020                           
 10021                           ;ssd1306.c: 420: t = x1; x1 = y1; y1 = t;
 10022  0081' 083A'              	movf	gfx_drawLine@x1+1,w
 10023  0082' 0021               	movlb	1	; select bank1
 10024  0083' 0080'              	movwf	(gfx_drawLine@t+1)^(0+128)
 10025  0084' 0020               	movlb	0	; select bank0
 10026  0085' 0839'              	movf	gfx_drawLine@x1,w
 10027  0086' 0021               	movlb	1	; select bank1
 10028  0087' 0080'              	movwf	gfx_drawLine@t^(0+128)
 10029  0088' 0020               	movlb	0	; select bank0
 10030  0089' 083C'              	movf	gfx_drawLine@y1+1,w
 10031  008A' 00BA'              	movwf	gfx_drawLine@x1+1
 10032  008B' 083B'              	movf	gfx_drawLine@y1,w
 10033  008C' 00B9'              	movwf	gfx_drawLine@x1
 10034  008D' 0021               	movlb	1	; select bank1
 10035  008E' 0800'              	movf	(gfx_drawLine@t+1)^(0+128),w
 10036  008F' 0020               	movlb	0	; select bank0
 10037  0090' 00BC'              	movwf	gfx_drawLine@y1+1
 10038  0091' 0021               	movlb	1	; select bank1
 10039  0092' 0800'              	movf	gfx_drawLine@t^(0+128),w
 10040  0093' 0020               	movlb	0	; select bank0
 10041  0094' 00BB'              	movwf	gfx_drawLine@y1
 10042  0095'                    l593:	
 10043                           
 10044                           ;ssd1306.c: 421: }
 10045                           ;ssd1306.c: 422: if( x0 > x1 ){
 10046  0095' 0020               	movlb	0	; select bank0
 10047  0096' 083A'              	movf	gfx_drawLine@x1+1,w
 10048  0097' 3A80               	xorlw	128
 10049  0098' 00BF'              	movwf	??_gfx_drawLine
 10050  0099' 0836'              	movf	gfx_drawLine@x0+1,w
 10051  009A' 3A80               	xorlw	128
 10052  009B' 023F'              	subwf	??_gfx_drawLine,w
 10053  009C' 1D03               	skipz
 10054  009D' 2800'              	goto	u3795
 10055  009E' 0835'              	movf	gfx_drawLine@x0,w
 10056  009F' 0239'              	subwf	gfx_drawLine@x1,w
 10057  00A0'                    u3795:	
 10058  00A0' 1803               	skipnc
 10059  00A1' 2800'              	goto	l3828
 10060                           
 10061                           ;ssd1306.c: 423: t = x0; x0 = x1; x1 = t;
 10062  00A2' 0020               	movlb	0	; select bank0
 10063  00A3' 0836'              	movf	gfx_drawLine@x0+1,w
 10064  00A4' 0021               	movlb	1	; select bank1
 10065  00A5' 0080'              	movwf	(gfx_drawLine@t+1)^(0+128)
 10066  00A6' 0020               	movlb	0	; select bank0
 10067  00A7' 0835'              	movf	gfx_drawLine@x0,w
 10068  00A8' 0021               	movlb	1	; select bank1
 10069  00A9' 0080'              	movwf	gfx_drawLine@t^(0+128)
 10070  00AA' 0020               	movlb	0	; select bank0
 10071  00AB' 083A'              	movf	gfx_drawLine@x1+1,w
 10072  00AC' 00B6'              	movwf	gfx_drawLine@x0+1
 10073  00AD' 0839'              	movf	gfx_drawLine@x1,w
 10074  00AE' 00B5'              	movwf	gfx_drawLine@x0
 10075  00AF' 0021               	movlb	1	; select bank1
 10076  00B0' 0800'              	movf	(gfx_drawLine@t+1)^(0+128),w
 10077  00B1' 0020               	movlb	0	; select bank0
 10078  00B2' 00BA'              	movwf	gfx_drawLine@x1+1
 10079  00B3' 0021               	movlb	1	; select bank1
 10080  00B4' 0800'              	movf	gfx_drawLine@t^(0+128),w
 10081  00B5' 0020               	movlb	0	; select bank0
 10082  00B6' 00B9'              	movwf	gfx_drawLine@x1
 10083                           
 10084                           ;ssd1306.c: 424: t = y0; y0 = y1; y1 = t;
 10085  00B7' 0838'              	movf	gfx_drawLine@y0+1,w
 10086  00B8' 0021               	movlb	1	; select bank1
 10087  00B9' 0080'              	movwf	(gfx_drawLine@t+1)^(0+128)
 10088  00BA' 0020               	movlb	0	; select bank0
 10089  00BB' 0837'              	movf	gfx_drawLine@y0,w
 10090  00BC' 0021               	movlb	1	; select bank1
 10091  00BD' 0080'              	movwf	gfx_drawLine@t^(0+128)
 10092  00BE' 0020               	movlb	0	; select bank0
 10093  00BF' 083C'              	movf	gfx_drawLine@y1+1,w
 10094  00C0' 00B8'              	movwf	gfx_drawLine@y0+1
 10095  00C1' 083B'              	movf	gfx_drawLine@y1,w
 10096  00C2' 00B7'              	movwf	gfx_drawLine@y0
 10097  00C3' 0021               	movlb	1	; select bank1
 10098  00C4' 0800'              	movf	(gfx_drawLine@t+1)^(0+128),w
 10099  00C5' 0020               	movlb	0	; select bank0
 10100  00C6' 00BC'              	movwf	gfx_drawLine@y1+1
 10101  00C7' 0021               	movlb	1	; select bank1
 10102  00C8' 0800'              	movf	gfx_drawLine@t^(0+128),w
 10103  00C9' 0020               	movlb	0	; select bank0
 10104  00CA' 00BB'              	movwf	gfx_drawLine@y1
 10105  00CB'                    l3828:	
 10106                           
 10107                           ;ssd1306.c: 425: }
 10108                           ;ssd1306.c: 426: int16_t dx, dy;
 10109                           ;ssd1306.c: 427: dx = x1 - x0;
 10110  00CB' 0020               	movlb	0	; select bank0
 10111  00CC' 0935'              	comf	gfx_drawLine@x0,w
 10112  00CD' 00BF'              	movwf	??_gfx_drawLine
 10113  00CE' 0936'              	comf	gfx_drawLine@x0+1,w
 10114  00CF' 00C0'              	movwf	??_gfx_drawLine+1
 10115  00D0' 0ABF'              	incf	??_gfx_drawLine,f
 10116  00D1' 1903               	skipnz
 10117  00D2' 0AC0'              	incf	??_gfx_drawLine+1,f
 10118  00D3' 0839'              	movf	gfx_drawLine@x1,w
 10119  00D4' 073F'              	addwf	??_gfx_drawLine,w
 10120  00D5' 0021               	movlb	1	; select bank1
 10121  00D6' 0080'              	movwf	gfx_drawLine@dx^(0+128)
 10122  00D7' 0020               	movlb	0	; select bank0
 10123  00D8' 083A'              	movf	gfx_drawLine@x1+1,w
 10124  00D9' 3D40'              	addwfc	??_gfx_drawLine+1,w
 10125  00DA' 0021               	movlb	1	; select bank1
 10126  00DB' 0080'              	movwf	(gfx_drawLine@dx+1)^(0+128)
 10127                           
 10128                           ;ssd1306.c: 428: dy = my_abs(y1 - y0);
 10129  00DC' 0020               	movlb	0	; select bank0
 10130  00DD' 0937'              	comf	gfx_drawLine@y0,w
 10131  00DE' 00BF'              	movwf	??_gfx_drawLine
 10132  00DF' 0938'              	comf	gfx_drawLine@y0+1,w
 10133  00E0' 00C0'              	movwf	??_gfx_drawLine+1
 10134  00E1' 0ABF'              	incf	??_gfx_drawLine,f
 10135  00E2' 1903               	skipnz
 10136  00E3' 0AC0'              	incf	??_gfx_drawLine+1,f
 10137  00E4' 083B'              	movf	gfx_drawLine@y1,w
 10138  00E5' 073F'              	addwf	??_gfx_drawLine,w
 10139  00E6' 0080'              	movwf	my_abs@a
 10140  00E7' 083C'              	movf	gfx_drawLine@y1+1,w
 10141  00E8' 3D40'              	addwfc	??_gfx_drawLine+1,w
 10142  00E9' 0081'              	movwf	my_abs@a+1
 10143  00EA' 3180' 2000' 3180'  	fcall	_my_abs
 10144  00ED' 0020               	movlb	0	; select bank0
 10145  00EE' 0801'              	movf	?_my_abs+1,w
 10146  00EF' 0021               	movlb	1	; select bank1
 10147  00F0' 0080'              	movwf	(gfx_drawLine@dy+1)^(0+128)
 10148  00F1' 0020               	movlb	0	; select bank0
 10149  00F2' 0800'              	movf	?_my_abs,w
 10150  00F3' 0021               	movlb	1	; select bank1
 10151  00F4' 0080'              	movwf	gfx_drawLine@dy^(0+128)
 10152                           
 10153                           ;ssd1306.c: 429: int16_t err = dx / 2;
 10154  00F5' 3002               	movlw	2
 10155  00F6' 0020               	movlb	0	; select bank0
 10156  00F7' 0082'              	movwf	___awdiv@divisor
 10157  00F8' 3000               	movlw	0
 10158  00F9' 0083'              	movwf	___awdiv@divisor+1
 10159  00FA' 0021               	movlb	1	; select bank1
 10160  00FB' 0800'              	movf	(gfx_drawLine@dx+1)^(0+128),w
 10161  00FC' 0020               	movlb	0	; select bank0
 10162  00FD' 0085'              	movwf	___awdiv@dividend+1
 10163  00FE' 0021               	movlb	1	; select bank1
 10164  00FF' 0800'              	movf	gfx_drawLine@dx^(0+128),w
 10165  0100' 0020               	movlb	0	; select bank0
 10166  0101' 0084'              	movwf	___awdiv@dividend
 10167  0102' 3180' 2000' 3180'  	fcall	___awdiv
 10168  0105' 0020               	movlb	0	; select bank0
 10169  0106' 0803'              	movf	?___awdiv+1,w
 10170  0107' 0021               	movlb	1	; select bank1
 10171  0108' 0080'              	movwf	(gfx_drawLine@err+1)^(0+128)
 10172  0109' 0020               	movlb	0	; select bank0
 10173  010A' 0802'              	movf	?___awdiv,w
 10174  010B' 0021               	movlb	1	; select bank1
 10175  010C' 0080'              	movwf	gfx_drawLine@err^(0+128)
 10176                           
 10177                           ;ssd1306.c: 430: int16_t ystep;
 10178                           ;ssd1306.c: 431: if( y0 < y1 ){
 10179  010D' 0020               	movlb	0	; select bank0
 10180  010E' 0838'              	movf	gfx_drawLine@y0+1,w
 10181  010F' 3A80               	xorlw	128
 10182  0110' 00BF'              	movwf	??_gfx_drawLine
 10183  0111' 083C'              	movf	gfx_drawLine@y1+1,w
 10184  0112' 3A80               	xorlw	128
 10185  0113' 023F'              	subwf	??_gfx_drawLine,w
 10186  0114' 1D03               	skipz
 10187  0115' 2800'              	goto	u3805
 10188  0116' 083B'              	movf	gfx_drawLine@y1,w
 10189  0117' 0237'              	subwf	gfx_drawLine@y0,w
 10190  0118'                    u3805:	
 10191  0118' 1803               	skipnc
 10192  0119' 2800'              	goto	l3838
 10193                           
 10194                           ;ssd1306.c: 432: ystep = 1;
 10195  011A' 3001               	movlw	1
 10196  011B' 0021               	movlb	1	; select bank1
 10197  011C' 0080'              	movwf	gfx_drawLine@ystep^(0+128)
 10198  011D' 3000               	movlw	0
 10199  011E' 2800'              	goto	L6
 10200  011F'                    l3838:	
 10201                           ;ssd1306.c: 433: }else{
 10202                           
 10203                           
 10204                           ;ssd1306.c: 434: ystep = -1;
 10205  011F' 30FF               	movlw	255
 10206  0120' 0021               	movlb	1	; select bank1
 10207  0121' 0080'              	movwf	gfx_drawLine@ystep^(0+128)
 10208  0122' 30FF               	movlw	255
 10209  0123'                    L6:	
 10210  0123' 0081'              	movwf	(gfx_drawLine@ystep^(0+128)+1)
 10211  0124'                    l597:	
 10212                           ;ssd1306.c: 435: }
 10213                           ;ssd1306.c: 436: for( ; x0<=x1; x0++ ){
 10214                           
 10215  0124' 0020               	movlb	0	; select bank0
 10216  0125' 083A'              	movf	gfx_drawLine@x1+1,w
 10217  0126' 3A80               	xorlw	128
 10218  0127' 00BF'              	movwf	??_gfx_drawLine
 10219  0128' 0836'              	movf	gfx_drawLine@x0+1,w
 10220  0129' 3A80               	xorlw	128
 10221  012A' 023F'              	subwf	??_gfx_drawLine,w
 10222  012B' 1D03               	skipz
 10223  012C' 2800'              	goto	u3835
 10224  012D' 0835'              	movf	gfx_drawLine@x0,w
 10225  012E' 0239'              	subwf	gfx_drawLine@x1,w
 10226  012F'                    u3835:	
 10227  012F' 1C03               	btfss	3,0
 10228  0130' 0008               	return
 10229                           
 10230                           ;ssd1306.c: 437: if( steep ){
 10231  0131' 0021               	movlb	1	; select bank1
 10232  0132' 0800'              	movf	gfx_drawLine@steep^(0+128),w
 10233  0133' 0400'              	iorwf	(gfx_drawLine@steep+1)^(0+128),w
 10234  0134' 1903               	btfsc	3,2
 10235  0135' 2800'              	goto	l3844
 10236                           
 10237                           ;ssd1306.c: 438: gfx_drawPixel( y0, x0, color );
 10238  0136' 0020               	movlb	0	; select bank0
 10239  0137' 0838'              	movf	gfx_drawLine@y0+1,w
 10240  0138' 0097'              	movwf	gfx_drawPixel@x+1
 10241  0139' 0837'              	movf	gfx_drawLine@y0,w
 10242  013A' 0096'              	movwf	gfx_drawPixel@x
 10243  013B' 0836'              	movf	gfx_drawLine@x0+1,w
 10244  013C' 0099'              	movwf	gfx_drawPixel@y+1
 10245  013D' 0835'              	movf	gfx_drawLine@x0,w
 10246  013E' 2800'              	goto	L7
 10247  013F'                    l3844:	
 10248                           ;ssd1306.c: 439: }else{
 10249                           
 10250                           
 10251                           ;ssd1306.c: 440: gfx_drawPixel( x0, y0, color );
 10252  013F' 0020               	movlb	0	; select bank0
 10253  0140' 0836'              	movf	gfx_drawLine@x0+1,w
 10254  0141' 0097'              	movwf	gfx_drawPixel@x+1
 10255  0142' 0835'              	movf	gfx_drawLine@x0,w
 10256  0143' 0096'              	movwf	gfx_drawPixel@x
 10257  0144' 0838'              	movf	gfx_drawLine@y0+1,w
 10258  0145' 0099'              	movwf	gfx_drawPixel@y+1
 10259  0146' 0837'              	movf	gfx_drawLine@y0,w
 10260  0147'                    L7:	
 10261  0147' 0098'              	movwf	gfx_drawPixel@y
 10262  0148' 083E'              	movf	gfx_drawLine@color+1,w
 10263  0149' 009B'              	movwf	gfx_drawPixel@color+1
 10264  014A' 083D'              	movf	gfx_drawLine@color,w
 10265  014B' 009A'              	movwf	gfx_drawPixel@color
 10266  014C' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 10267                           
 10268                           ;ssd1306.c: 441: }
 10269                           ;ssd1306.c: 442: err -= dy;
 10270  014F' 0021               	movlb	1	; select bank1
 10271  0150' 0800'              	movf	gfx_drawLine@dy^(0+128),w
 10272  0151' 0280'              	subwf	gfx_drawLine@err^(0+128),f
 10273  0152' 0800'              	movf	(gfx_drawLine@dy+1)^(0+128),w
 10274  0153' 3B80'              	subwfb	(gfx_drawLine@err+1)^(0+128),f
 10275                           
 10276                           ;ssd1306.c: 443: if( err < 0 ){
 10277  0154' 1F80'              	btfss	(gfx_drawLine@err+1)^(0+128),7
 10278  0155' 2800'              	goto	l601
 10279                           
 10280                           ;ssd1306.c: 444: y0 += ystep;
 10281  0156' 0800'              	movf	gfx_drawLine@ystep^(0+128),w
 10282  0157' 0020               	movlb	0	; select bank0
 10283  0158' 07B7'              	addwf	gfx_drawLine@y0,f
 10284  0159' 0021               	movlb	1	; select bank1
 10285  015A' 0800'              	movf	(gfx_drawLine@ystep+1)^(0+128),w
 10286  015B' 0020               	movlb	0	; select bank0
 10287  015C' 3DB8'              	addwfc	gfx_drawLine@y0+1,f
 10288                           
 10289                           ;ssd1306.c: 445: err += dx;
 10290  015D' 0021               	movlb	1	; select bank1
 10291  015E' 0800'              	movf	gfx_drawLine@dx^(0+128),w
 10292  015F' 0780'              	addwf	gfx_drawLine@err^(0+128),f
 10293  0160' 0800'              	movf	(gfx_drawLine@dx+1)^(0+128),w
 10294  0161' 3D80'              	addwfc	(gfx_drawLine@err+1)^(0+128),f
 10295  0162'                    l601:	
 10296  0162' 3001               	movlw	1
 10297  0163' 0020               	movlb	0	; select bank0
 10298  0164' 07B5'              	addwf	gfx_drawLine@x0,f
 10299  0165' 3000               	movlw	0
 10300  0166' 3DB6'              	addwfc	gfx_drawLine@x0+1,f
 10301  0167' 2800'              	goto	l597
 10302  0168'                    __end_of_gfx_drawLine:	
 10303                           
 10304                           	psect	text16
 10305  0000'                    __ptext16:	
 10306 ;; *************** function _my_abs *****************
 10307 ;; Defined at:
 10308 ;;		line 399 in file "ssd1306.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;  a               2    0[BANK0 ] int 
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;		None
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  2    0[BANK0 ] int 
 10315 ;; Registers used:
 10316 ;;		wreg, status,2, status,0
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10324 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10325 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10326 ;;Total ram usage:        4 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:    3
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		_gfx_drawLine
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           
 10337                           ;psect for function _my_abs
 10338  0000'                    _my_abs:	
 10339                           
 10340                           ;ssd1306.c: 401: if(a < 0)
 10341                           
 10342                           ;incstack = 0
 10343                           ; Regs used in _my_abs: [wreg+status,2+status,0]
 10344  0000' 0020               	movlb	0	; select bank0
 10345  0001' 1F81'              	btfss	my_abs@a+1,7
 10346  0002' 0008               	return
 10347                           
 10348                           ;ssd1306.c: 402: return -a;
 10349  0003' 0900'              	comf	my_abs@a,w
 10350  0004' 0082'              	movwf	??_my_abs
 10351  0005' 0901'              	comf	my_abs@a+1,w
 10352  0006' 0083'              	movwf	??_my_abs+1
 10353  0007' 0A82'              	incf	??_my_abs,f
 10354  0008' 1903               	skipnz
 10355  0009' 0A83'              	incf	??_my_abs+1,f
 10356  000A' 0802'              	movf	??_my_abs,w
 10357  000B' 0080'              	movwf	?_my_abs
 10358  000C' 0803'              	movf	??_my_abs+1,w
 10359  000D' 0081'              	movwf	?_my_abs+1
 10360  000E' 0008               	return
 10361  000F'                    __end_of_my_abs:	
 10362                           ;ssd1306.c: 403: return a;
 10363                           
 10364                           
 10365                           	psect	text17
 10366  0000'                    __ptext17:	
 10367 ;; *************** function _gfx_hvLine *****************
 10368 ;; Defined at:
 10369 ;;		line 365 in file "ssd1306.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;  x1              2   40[BANK0 ] int 
 10372 ;;  y1              2   42[BANK0 ] int 
 10373 ;;  x2              2   44[BANK0 ] int 
 10374 ;;  y2              2   46[BANK0 ] int 
 10375 ;;  color           2   48[BANK0 ] unsigned int 
 10376 ;; Auto vars:     Size  Location     Type
 10377 ;;  t               2   51[BANK0 ] int 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  1    wreg      void 
 10380 ;; Registers used:
 10381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10387 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10390 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10391 ;;Total ram usage:       13 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    5
 10394 ;; This function calls:
 10395 ;;		_display_line
 10396 ;;		_gfx_rotation_adjust
 10397 ;; This function is called by:
 10398 ;;		_gfx_drawLine
 10399 ;; This function uses a non-reentrant model
 10400 ;;
 10401                           
 10402                           
 10403                           ;psect for function _gfx_hvLine
 10404  0000'                    _gfx_hvLine:	
 10405                           
 10406                           ;ssd1306.c: 367: if( x1 != x2 && y1 != y2 ){
 10407                           
 10408                           ;incstack = 0
 10409                           ; Regs used in _gfx_hvLine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10410  0000' 0020               	movlb	0	; select bank0
 10411  0001' 082D'              	movf	gfx_hvLine@x2+1,w
 10412  0002' 0629'              	xorwf	gfx_hvLine@x1+1,w
 10413  0003' 1D03               	skipz
 10414  0004' 2800'              	goto	u3505
 10415  0005' 082C'              	movf	gfx_hvLine@x2,w
 10416  0006' 0628'              	xorwf	gfx_hvLine@x1,w
 10417  0007'                    u3505:	
 10418  0007' 1903               	skipnz
 10419  0008' 2800'              	goto	l3770
 10420  0009' 082F'              	movf	gfx_hvLine@y2+1,w
 10421  000A' 062B'              	xorwf	gfx_hvLine@y1+1,w
 10422  000B' 1D03               	skipz
 10423  000C' 2800'              	goto	u3515
 10424  000D' 082E'              	movf	gfx_hvLine@y2,w
 10425  000E' 062A'              	xorwf	gfx_hvLine@y1,w
 10426  000F'                    u3515:	
 10427  000F' 1D03               	btfss	3,2
 10428  0010' 0008               	return
 10429  0011'                    l3770:	
 10430                           ;ssd1306.c: 369: return;
 10431                           
 10432                           
 10433                           ;ssd1306.c: 370: }
 10434                           ;ssd1306.c: 373: if( rotation == 1 || rotation == 3 ){
 10435  0011' 0302'              	decf	_rotation,w
 10436  0012' 1903               	btfsc	3,2
 10437  0013' 2800'              	goto	l564
 10438  0014' 3003               	movlw	3
 10439  0015' 0602'              	xorwf	_rotation,w
 10440  0016' 1D03               	btfss	3,2
 10441  0017' 2800'              	goto	l562
 10442  0018'                    l564:	
 10443                           
 10444                           ;ssd1306.c: 374: if( x1 < 0 || x1 >= HEIGHT || x2 < 0 || x2 >= HEIGHT )
 10445  0018' 1BA9'              	btfsc	gfx_hvLine@x1+1,7
 10446  0019' 0008               	return
 10447  001A' 0829'              	movf	gfx_hvLine@x1+1,w
 10448  001B' 3A80               	xorlw	128
 10449  001C' 00B2'              	movwf	??_gfx_hvLine
 10450  001D' 0801'              	movf	_HEIGHT+1,w
 10451  001E' 3A80               	xorlw	128
 10452  001F' 0232'              	subwf	??_gfx_hvLine,w
 10453  0020' 1D03               	skipz
 10454  0021' 2800'              	goto	u3555
 10455  0022' 0800'              	movf	_HEIGHT,w
 10456  0023' 0228'              	subwf	gfx_hvLine@x1,w
 10457  0024'                    u3555:	
 10458  0024' 1803               	skipnc
 10459  0025' 0008               	return
 10460  0026' 0020               	movlb	0	; select bank0
 10461  0027' 1BAD'              	btfsc	gfx_hvLine@x2+1,7
 10462  0028' 0008               	return
 10463  0029' 082D'              	movf	gfx_hvLine@x2+1,w
 10464  002A' 3A80               	xorlw	128
 10465  002B' 00B2'              	movwf	??_gfx_hvLine
 10466  002C' 0801'              	movf	_HEIGHT+1,w
 10467  002D' 3A80               	xorlw	128
 10468  002E' 0232'              	subwf	??_gfx_hvLine,w
 10469  002F' 1D03               	skipz
 10470  0030' 2800'              	goto	u3575
 10471  0031' 0800'              	movf	_HEIGHT,w
 10472  0032' 022C'              	subwf	gfx_hvLine@x2,w
 10473  0033'                    u3575:	
 10474  0033' 1803               	btfsc	3,0
 10475  0034' 0008               	return
 10476                           
 10477                           ;ssd1306.c: 376: if( y1 < 0 || y1 >= WIDTH || y2 < 0 || y2 >= WIDTH )
 10478                           
 10479                           ;ssd1306.c: 375: return;
 10480  0035' 0020               	movlb	0	; select bank0
 10481  0036' 1BAB'              	btfsc	gfx_hvLine@y1+1,7
 10482  0037' 0008               	return
 10483  0038' 082B'              	movf	gfx_hvLine@y1+1,w
 10484  0039' 3A80               	xorlw	128
 10485  003A' 00B2'              	movwf	??_gfx_hvLine
 10486  003B' 0801'              	movf	_WIDTH+1,w
 10487  003C' 3A80               	xorlw	128
 10488  003D' 0232'              	subwf	??_gfx_hvLine,w
 10489  003E' 1D03               	skipz
 10490  003F' 2800'              	goto	u3595
 10491  0040' 0800'              	movf	_WIDTH,w
 10492  0041' 022A'              	subwf	gfx_hvLine@y1,w
 10493  0042'                    u3595:	
 10494  0042' 1803               	skipnc
 10495  0043' 0008               	return
 10496  0044' 0020               	movlb	0	; select bank0
 10497  0045' 1BAF'              	btfsc	gfx_hvLine@y2+1,7
 10498  0046' 0008               	return
 10499  0047' 082F'              	movf	gfx_hvLine@y2+1,w
 10500  0048' 3A80               	xorlw	128
 10501  0049' 00B2'              	movwf	??_gfx_hvLine
 10502  004A' 0801'              	movf	_WIDTH+1,w
 10503  004B' 3A80               	xorlw	128
 10504  004C' 0232'              	subwf	??_gfx_hvLine,w
 10505  004D' 1D03               	skipz
 10506  004E' 2800'              	goto	u3695
 10507  004F' 0800'              	movf	_WIDTH,w
 10508  0050' 022E'              	subwf	gfx_hvLine@y2,w
 10509  0051' 2800'              	goto	u3695
 10510  0052'                    l562:	
 10511                           ;ssd1306.c: 378: }else{
 10512                           
 10513                           ;ssd1306.c: 377: return;
 10514                           
 10515                           
 10516                           ;ssd1306.c: 379: if( y1 < 0 || y1 >= HEIGHT || y2 < 0 || y2 >= HEIGHT )
 10517  0052' 1BAB'              	btfsc	gfx_hvLine@y1+1,7
 10518  0053' 0008               	return
 10519  0054' 082B'              	movf	gfx_hvLine@y1+1,w
 10520  0055' 3A80               	xorlw	128
 10521  0056' 00B2'              	movwf	??_gfx_hvLine
 10522  0057' 0801'              	movf	_HEIGHT+1,w
 10523  0058' 3A80               	xorlw	128
 10524  0059' 0232'              	subwf	??_gfx_hvLine,w
 10525  005A' 1D03               	skipz
 10526  005B' 2800'              	goto	u3635
 10527  005C' 0800'              	movf	_HEIGHT,w
 10528  005D' 022A'              	subwf	gfx_hvLine@y1,w
 10529  005E'                    u3635:	
 10530  005E' 1803               	skipnc
 10531  005F' 0008               	return
 10532  0060' 0020               	movlb	0	; select bank0
 10533  0061' 1BAF'              	btfsc	gfx_hvLine@y2+1,7
 10534  0062' 0008               	return
 10535  0063' 082F'              	movf	gfx_hvLine@y2+1,w
 10536  0064' 3A80               	xorlw	128
 10537  0065' 00B2'              	movwf	??_gfx_hvLine
 10538  0066' 0801'              	movf	_HEIGHT+1,w
 10539  0067' 3A80               	xorlw	128
 10540  0068' 0232'              	subwf	??_gfx_hvLine,w
 10541  0069' 1D03               	skipz
 10542  006A' 2800'              	goto	u3655
 10543  006B' 0800'              	movf	_HEIGHT,w
 10544  006C' 022E'              	subwf	gfx_hvLine@y2,w
 10545  006D'                    u3655:	
 10546  006D' 1803               	btfsc	3,0
 10547  006E' 0008               	return
 10548                           
 10549                           ;ssd1306.c: 381: if( x1 < 0 || x1 >= WIDTH || x2 < 0 || x2 >= WIDTH )
 10550                           
 10551                           ;ssd1306.c: 380: return;
 10552  006F' 0020               	movlb	0	; select bank0
 10553  0070' 1BA9'              	btfsc	gfx_hvLine@x1+1,7
 10554  0071' 0008               	return
 10555  0072' 0829'              	movf	gfx_hvLine@x1+1,w
 10556  0073' 3A80               	xorlw	128
 10557  0074' 00B2'              	movwf	??_gfx_hvLine
 10558  0075' 0801'              	movf	_WIDTH+1,w
 10559  0076' 3A80               	xorlw	128
 10560  0077' 0232'              	subwf	??_gfx_hvLine,w
 10561  0078' 1D03               	skipz
 10562  0079' 2800'              	goto	u3675
 10563  007A' 0800'              	movf	_WIDTH,w
 10564  007B' 0228'              	subwf	gfx_hvLine@x1,w
 10565  007C'                    u3675:	
 10566  007C' 1803               	skipnc
 10567  007D' 0008               	return
 10568  007E' 0020               	movlb	0	; select bank0
 10569  007F' 1BAD'              	btfsc	gfx_hvLine@x2+1,7
 10570  0080' 0008               	return
 10571  0081' 082D'              	movf	gfx_hvLine@x2+1,w
 10572  0082' 3A80               	xorlw	128
 10573  0083' 00B2'              	movwf	??_gfx_hvLine
 10574  0084' 0801'              	movf	_WIDTH+1,w
 10575  0085' 3A80               	xorlw	128
 10576  0086' 0232'              	subwf	??_gfx_hvLine,w
 10577  0087' 1D03               	skipz
 10578  0088' 2800'              	goto	u3695
 10579  0089' 0800'              	movf	_WIDTH,w
 10580  008A' 022C'              	subwf	gfx_hvLine@x2,w
 10581  008B'                    u3695:	
 10582  008B' 1803               	btfsc	3,0
 10583  008C' 0008               	return
 10584                           
 10585                           ;ssd1306.c: 383: }
 10586                           ;ssd1306.c: 385: gfx_rotation_adjust( &x1, &y1 );
 10587                           
 10588                           ;ssd1306.c: 382: return;
 10589  008D' 3000'              	movlw	(low (gfx_hvLine@y1| 0))& (0+255)
 10590  008E' 0020               	movlb	0	; select bank0
 10591  008F' 00B2'              	movwf	??_gfx_hvLine
 10592  0090' 0832'              	movf	??_gfx_hvLine,w
 10593  0091' 0080'              	movwf	gfx_rotation_adjust@py
 10594  0092' 3000'              	movlw	(low (gfx_hvLine@x1| 0))& (0+255)
 10595  0093' 3180' 2000' 3180'  	fcall	_gfx_rotation_adjust
 10596                           
 10597                           ;ssd1306.c: 386: gfx_rotation_adjust( &x2, &y2 );
 10598  0096' 3000'              	movlw	(low (gfx_hvLine@y2| 0))& (0+255)
 10599  0097' 0020               	movlb	0	; select bank0
 10600  0098' 00B2'              	movwf	??_gfx_hvLine
 10601  0099' 0832'              	movf	??_gfx_hvLine,w
 10602  009A' 0080'              	movwf	gfx_rotation_adjust@py
 10603  009B' 3000'              	movlw	(low (gfx_hvLine@x2| 0))& (0+255)
 10604  009C' 3180' 2000' 3180'  	fcall	_gfx_rotation_adjust
 10605                           
 10606                           ;ssd1306.c: 389: if( (x1 == x2 && y2 < y1) || (y1 == y2 && x2 < x1) ){
 10607  009F' 0020               	movlb	0	; select bank0
 10608  00A0' 082D'              	movf	gfx_hvLine@x2+1,w
 10609  00A1' 0629'              	xorwf	gfx_hvLine@x1+1,w
 10610  00A2' 1D03               	skipz
 10611  00A3' 2800'              	goto	u3705
 10612  00A4' 082C'              	movf	gfx_hvLine@x2,w
 10613  00A5' 0628'              	xorwf	gfx_hvLine@x1,w
 10614  00A6'                    u3705:	
 10615  00A6' 1D03               	skipz
 10616  00A7' 2800'              	goto	l3804
 10617  00A8' 082F'              	movf	gfx_hvLine@y2+1,w
 10618  00A9' 3A80               	xorlw	128
 10619  00AA' 00B2'              	movwf	??_gfx_hvLine
 10620  00AB' 082B'              	movf	gfx_hvLine@y1+1,w
 10621  00AC' 3A80               	xorlw	128
 10622  00AD' 0232'              	subwf	??_gfx_hvLine,w
 10623  00AE' 1D03               	skipz
 10624  00AF' 2800'              	goto	u3715
 10625  00B0' 082A'              	movf	gfx_hvLine@y1,w
 10626  00B1' 022E'              	subwf	gfx_hvLine@y2,w
 10627  00B2'                    u3715:	
 10628  00B2' 1C03               	skipc
 10629  00B3' 2800'              	goto	l3808
 10630  00B4'                    l3804:	
 10631  00B4' 0020               	movlb	0	; select bank0
 10632  00B5' 082F'              	movf	gfx_hvLine@y2+1,w
 10633  00B6' 062B'              	xorwf	gfx_hvLine@y1+1,w
 10634  00B7' 1D03               	skipz
 10635  00B8' 2800'              	goto	u3725
 10636  00B9' 082E'              	movf	gfx_hvLine@y2,w
 10637  00BA' 062A'              	xorwf	gfx_hvLine@y1,w
 10638  00BB'                    u3725:	
 10639  00BB' 1D03               	skipz
 10640  00BC' 2800'              	goto	l3810
 10641  00BD' 082D'              	movf	gfx_hvLine@x2+1,w
 10642  00BE' 3A80               	xorlw	128
 10643  00BF' 00B2'              	movwf	??_gfx_hvLine
 10644  00C0' 0829'              	movf	gfx_hvLine@x1+1,w
 10645  00C1' 3A80               	xorlw	128
 10646  00C2' 0232'              	subwf	??_gfx_hvLine,w
 10647  00C3' 1D03               	skipz
 10648  00C4' 2800'              	goto	u3735
 10649  00C5' 0828'              	movf	gfx_hvLine@x1,w
 10650  00C6' 022C'              	subwf	gfx_hvLine@x2,w
 10651  00C7'                    u3735:	
 10652  00C7' 1803               	skipnc
 10653  00C8' 2800'              	goto	l3810
 10654  00C9'                    l3808:	
 10655                           
 10656                           ;ssd1306.c: 391: int16_t t = x1; x1 = x2; x2 = t;
 10657  00C9' 0020               	movlb	0	; select bank0
 10658  00CA' 0829'              	movf	gfx_hvLine@x1+1,w
 10659  00CB' 00B4'              	movwf	gfx_hvLine@t+1
 10660  00CC' 0828'              	movf	gfx_hvLine@x1,w
 10661  00CD' 00B3'              	movwf	gfx_hvLine@t
 10662  00CE' 082D'              	movf	gfx_hvLine@x2+1,w
 10663  00CF' 00A9'              	movwf	gfx_hvLine@x1+1
 10664  00D0' 082C'              	movf	gfx_hvLine@x2,w
 10665  00D1' 00A8'              	movwf	gfx_hvLine@x1
 10666  00D2' 0834'              	movf	gfx_hvLine@t+1,w
 10667  00D3' 00AD'              	movwf	gfx_hvLine@x2+1
 10668  00D4' 0833'              	movf	gfx_hvLine@t,w
 10669  00D5' 00AC'              	movwf	gfx_hvLine@x2
 10670                           
 10671                           ;ssd1306.c: 392: t = y1; y1 = y2; y2 = t;
 10672  00D6' 082B'              	movf	gfx_hvLine@y1+1,w
 10673  00D7' 00B4'              	movwf	gfx_hvLine@t+1
 10674  00D8' 082A'              	movf	gfx_hvLine@y1,w
 10675  00D9' 00B3'              	movwf	gfx_hvLine@t
 10676  00DA' 082F'              	movf	gfx_hvLine@y2+1,w
 10677  00DB' 00AB'              	movwf	gfx_hvLine@y1+1
 10678  00DC' 082E'              	movf	gfx_hvLine@y2,w
 10679  00DD' 00AA'              	movwf	gfx_hvLine@y1
 10680  00DE' 0834'              	movf	gfx_hvLine@t+1,w
 10681  00DF' 00AF'              	movwf	gfx_hvLine@y2+1
 10682  00E0' 0833'              	movf	gfx_hvLine@t,w
 10683  00E1' 00AE'              	movwf	gfx_hvLine@y2
 10684  00E2'                    l3810:	
 10685                           
 10686                           ;ssd1306.c: 393: }
 10687                           ;ssd1306.c: 395: display_line( x1, y1, x2, y2, color );
 10688  00E2' 0020               	movlb	0	; select bank0
 10689  00E3' 0829'              	movf	gfx_hvLine@x1+1,w
 10690  00E4' 0087'              	movwf	display_line@x1+1
 10691  00E5' 0828'              	movf	gfx_hvLine@x1,w
 10692  00E6' 0086'              	movwf	display_line@x1
 10693  00E7' 082B'              	movf	gfx_hvLine@y1+1,w
 10694  00E8' 0089'              	movwf	display_line@y1+1
 10695  00E9' 082A'              	movf	gfx_hvLine@y1,w
 10696  00EA' 0088'              	movwf	display_line@y1
 10697  00EB' 082D'              	movf	gfx_hvLine@x2+1,w
 10698  00EC' 008B'              	movwf	display_line@x2+1
 10699  00ED' 082C'              	movf	gfx_hvLine@x2,w
 10700  00EE' 008A'              	movwf	display_line@x2
 10701  00EF' 082F'              	movf	gfx_hvLine@y2+1,w
 10702  00F0' 008D'              	movwf	display_line@y2+1
 10703  00F1' 082E'              	movf	gfx_hvLine@y2,w
 10704  00F2' 008C'              	movwf	display_line@y2
 10705  00F3' 0831'              	movf	gfx_hvLine@color+1,w
 10706  00F4' 008F'              	movwf	display_line@color+1
 10707  00F5' 0830'              	movf	gfx_hvLine@color,w
 10708  00F6' 008E'              	movwf	display_line@color
 10709  00F7' 3180' 2000'        	fcall	_display_line
 10710  00F9' 0008               	return
 10711  00FA'                    __end_of_gfx_hvLine:	
 10712                           
 10713                           	psect	text18
 10714  0000'                    __ptext18:	
 10715 ;; *************** function _display_line *****************
 10716 ;; Defined at:
 10717 ;;		line 167 in file "ssd1306.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;  x1              2    6[BANK0 ] int 
 10720 ;;  y1              2    8[BANK0 ] int 
 10721 ;;  x2              2   10[BANK0 ] int 
 10722 ;;  y2              2   12[BANK0 ] int 
 10723 ;;  color           2   14[BANK0 ] unsigned int 
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;  lbit            1   33[BANK0 ] unsigned char 
 10726 ;;  ubit            1   28[BANK0 ] unsigned char 
 10727 ;;  mask            1   35[BANK0 ] unsigned char 
 10728 ;;  ptr             2   36[BANK0 ] PTR unsigned char 
 10729 ;;		 -> frameBuff(1032), 
 10730 ;;  pstart          2   26[BANK0 ] PTR unsigned char 
 10731 ;;		 -> frameBuff(1032), 
 10732 ;;  pend            2   24[BANK0 ] PTR unsigned char 
 10733 ;;		 -> frameBuff(1032), 
 10734 ;;  pixmask         1   34[BANK0 ] unsigned char 
 10735 ;;  ptr             2   38[BANK0 ] PTR unsigned char 
 10736 ;;		 -> frameBuff(1032), 
 10737 ;;  pend            2   31[BANK0 ] PTR unsigned char 
 10738 ;;		 -> frameBuff(1032), 
 10739 ;;  pstart          2   29[BANK0 ] PTR unsigned char 
 10740 ;;		 -> frameBuff(1032), 
 10741 ;; Return value:  Size  Location     Type
 10742 ;;                  1    wreg      void 
 10743 ;; Registers used:
 10744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10745 ;; Tracked objects:
 10746 ;;		On entry : 0/0
 10747 ;;		On exit  : 0/0
 10748 ;;		Unchanged: 0/0
 10749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10750 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10751 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10752 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10753 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10754 ;;Total ram usage:       34 bytes
 10755 ;; Hardware stack levels used:    1
 10756 ;; Hardware stack levels required when called:    4
 10757 ;; This function calls:
 10758 ;;		___wmul
 10759 ;; This function is called by:
 10760 ;;		_gfx_hvLine
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           
 10765                           ;psect for function _display_line
 10766  0000'                    _display_line:	
 10767                           
 10768                           ;ssd1306.c: 169: if( x1 == x2 ){
 10769                           
 10770                           ;incstack = 0
 10771                           ; Regs used in _display_line: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10772  0000' 0020               	movlb	0	; select bank0
 10773  0001' 080B'              	movf	display_line@x2+1,w
 10774  0002' 0607'              	xorwf	display_line@x1+1,w
 10775  0003' 1D03               	skipz
 10776  0004' 2800'              	goto	u3345
 10777  0005' 080A'              	movf	display_line@x2,w
 10778  0006' 0606'              	xorwf	display_line@x1,w
 10779  0007'                    u3345:	
 10780  0007' 1D03               	skipz
 10781  0008' 2800'              	goto	l3722
 10782                           
 10783                           ;ssd1306.c: 171: uint8_t* pstart = (&frameBuff[y1 >> 3][x1 + 1]);
 10784  0009' 0809'              	movf	display_line@y1+1,w
 10785  000A' 0091'              	movwf	??_display_line+1
 10786  000B' 0808'              	movf	display_line@y1,w
 10787  000C' 0090'              	movwf	??_display_line
 10788  000D' 0D11'              	rlf	??_display_line+1,w
 10789  000E' 0C91'              	rrf	??_display_line+1,f
 10790  000F' 0C90'              	rrf	??_display_line,f
 10791  0010' 0D11'              	rlf	??_display_line+1,w
 10792  0011' 0C91'              	rrf	??_display_line+1,f
 10793  0012' 0C90'              	rrf	??_display_line,f
 10794  0013' 0D11'              	rlf	??_display_line+1,w
 10795  0014' 0C91'              	rrf	??_display_line+1,f
 10796  0015' 0C90'              	rrf	??_display_line,f
 10797  0016' 0810'              	movf	??_display_line,w
 10798  0017' 0080'              	movwf	___wmul@multiplier
 10799  0018' 0811'              	movf	??_display_line+1,w
 10800  0019' 0081'              	movwf	___wmul@multiplier+1
 10801  001A' 3081               	movlw	129
 10802  001B' 0082'              	movwf	___wmul@multiplicand
 10803  001C' 3000               	movlw	0
 10804  001D' 0083'              	movwf	___wmul@multiplicand+1
 10805  001E' 3180' 2000' 3180'  	fcall	___wmul
 10806  0021' 0020               	movlb	0	; select bank0
 10807  0022' 0806'              	movf	display_line@x1,w
 10808  0023' 3E01               	addlw	1
 10809  0024' 0092'              	movwf	??_display_line+2
 10810  0025' 3000               	movlw	0
 10811  0026' 3D07'              	addwfc	display_line@x1+1,w
 10812  0027' 0093'              	movwf	??_display_line+3
 10813  0028' 30E8               	movlw	232
 10814  0029' 0094'              	movwf	??_display_line+4
 10815  002A' 3023               	movlw	35
 10816  002B' 0095'              	movwf	??_display_line+5
 10817  002C' 0812'              	movf	??_display_line+2,w
 10818  002D' 0714'              	addwf	??_display_line+4,w
 10819  002E' 0096'              	movwf	??_display_line+6
 10820  002F' 0813'              	movf	??_display_line+3,w
 10821  0030' 3D15'              	addwfc	??_display_line+5,w
 10822  0031' 0097'              	movwf	??_display_line+7
 10823  0032' 0800'              	movf	?___wmul,w
 10824  0033' 0716'              	addwf	??_display_line+6,w
 10825  0034' 009D'              	movwf	display_line@pstart
 10826  0035' 0801'              	movf	?___wmul+1,w
 10827  0036' 3D17'              	addwfc	??_display_line+7,w
 10828  0037' 009E'              	movwf	display_line@pstart+1
 10829                           
 10830                           ;ssd1306.c: 172: uint8_t* pend = (&frameBuff[y2 >> 3][x2 + 1]);
 10831  0038' 080D'              	movf	display_line@y2+1,w
 10832  0039' 0091'              	movwf	??_display_line+1
 10833  003A' 080C'              	movf	display_line@y2,w
 10834  003B' 0090'              	movwf	??_display_line
 10835  003C' 0D11'              	rlf	??_display_line+1,w
 10836  003D' 0C91'              	rrf	??_display_line+1,f
 10837  003E' 0C90'              	rrf	??_display_line,f
 10838  003F' 0D11'              	rlf	??_display_line+1,w
 10839  0040' 0C91'              	rrf	??_display_line+1,f
 10840  0041' 0C90'              	rrf	??_display_line,f
 10841  0042' 0D11'              	rlf	??_display_line+1,w
 10842  0043' 0C91'              	rrf	??_display_line+1,f
 10843  0044' 0C90'              	rrf	??_display_line,f
 10844  0045' 0810'              	movf	??_display_line,w
 10845  0046' 0080'              	movwf	___wmul@multiplier
 10846  0047' 0811'              	movf	??_display_line+1,w
 10847  0048' 0081'              	movwf	___wmul@multiplier+1
 10848  0049' 3081               	movlw	129
 10849  004A' 0082'              	movwf	___wmul@multiplicand
 10850  004B' 3000               	movlw	0
 10851  004C' 0083'              	movwf	___wmul@multiplicand+1
 10852  004D' 3180' 2000' 3180'  	fcall	___wmul
 10853  0050' 0020               	movlb	0	; select bank0
 10854  0051' 080A'              	movf	display_line@x2,w
 10855  0052' 3E01               	addlw	1
 10856  0053' 0092'              	movwf	??_display_line+2
 10857  0054' 3000               	movlw	0
 10858  0055' 3D0B'              	addwfc	display_line@x2+1,w
 10859  0056' 0093'              	movwf	??_display_line+3
 10860  0057' 30E8               	movlw	232
 10861  0058' 0094'              	movwf	??_display_line+4
 10862  0059' 3023               	movlw	35
 10863  005A' 0095'              	movwf	??_display_line+5
 10864  005B' 0812'              	movf	??_display_line+2,w
 10865  005C' 0714'              	addwf	??_display_line+4,w
 10866  005D' 0096'              	movwf	??_display_line+6
 10867  005E' 0813'              	movf	??_display_line+3,w
 10868  005F' 3D15'              	addwfc	??_display_line+5,w
 10869  0060' 0097'              	movwf	??_display_line+7
 10870  0061' 0800'              	movf	?___wmul,w
 10871  0062' 0716'              	addwf	??_display_line+6,w
 10872  0063' 009F'              	movwf	display_line@pend
 10873  0064' 0801'              	movf	?___wmul+1,w
 10874  0065' 3D17'              	addwfc	??_display_line+7,w
 10875  0066' 00A0'              	movwf	display_line@pend+1
 10876                           
 10877                           ;ssd1306.c: 173: uint8_t* ptr = pstart;
 10878  0067' 081E'              	movf	display_line@pstart+1,w
 10879  0068' 00A7'              	movwf	display_line@ptr+1
 10880  0069' 081D'              	movf	display_line@pstart,w
 10881  006A' 00A6'              	movwf	display_line@ptr
 10882  006B'                    l441:	
 10883                           ;ssd1306.c: 175: while( ptr <= pend ){
 10884                           
 10885  006B' 0827'              	movf	display_line@ptr+1,w
 10886  006C' 0220'              	subwf	display_line@pend+1,w
 10887  006D' 1D03               	skipz
 10888  006E' 2800'              	goto	u3435
 10889  006F' 0826'              	movf	display_line@ptr,w
 10890  0070' 021F'              	subwf	display_line@pend,w
 10891  0071'                    u3435:	
 10892  0071' 1C03               	btfss	3,0
 10893  0072' 0008               	return
 10894                           
 10895                           ;ssd1306.c: 177: uint8_t mask;
 10896                           ;ssd1306.c: 178: if( ptr == pstart ){
 10897  0073' 081E'              	movf	display_line@pstart+1,w
 10898  0074' 0627'              	xorwf	display_line@ptr+1,w
 10899  0075' 1D03               	skipz
 10900  0076' 2800'              	goto	u3355
 10901  0077' 081D'              	movf	display_line@pstart,w
 10902  0078' 0626'              	xorwf	display_line@ptr,w
 10903  0079'                    u3355:	
 10904  0079' 1D03               	skipz
 10905  007A' 2800'              	goto	l3692
 10906                           
 10907                           ;ssd1306.c: 180: uint8_t lbit = y1 % 8;
 10908  007B' 0808'              	movf	display_line@y1,w
 10909  007C' 3907               	andlw	7
 10910  007D' 0090'              	movwf	??_display_line
 10911  007E' 0810'              	movf	??_display_line,w
 10912  007F' 00A1'              	movwf	display_line@lbit
 10913                           
 10914                           ;ssd1306.c: 182: uint8_t ubit = lbit + y2 - y1;
 10915  0080' 0308'              	decf	display_line@y1,w
 10916  0081' 3AFF               	xorlw	255
 10917  0082' 0721'              	addwf	display_line@lbit,w
 10918  0083' 070C'              	addwf	display_line@y2,w
 10919  0084' 0090'              	movwf	??_display_line
 10920  0085' 0810'              	movf	??_display_line,w
 10921  0086' 009C'              	movwf	display_line@ubit
 10922                           
 10923                           ;ssd1306.c: 183: if( ubit >= 7 )
 10924  0087' 3007               	movlw	7
 10925  0088' 021C'              	subwf	display_line@ubit,w
 10926  0089' 1C03               	skipc
 10927  008A' 2800'              	goto	l3690
 10928                           
 10929                           ;ssd1306.c: 184: ubit = 7;
 10930  008B' 3007               	movlw	7
 10931  008C' 0090'              	movwf	??_display_line
 10932  008D' 0810'              	movf	??_display_line,w
 10933  008E' 009C'              	movwf	display_line@ubit
 10934  008F'                    l3690:	
 10935                           
 10936                           ;ssd1306.c: 185: mask = ((1 << (ubit-lbit+1)) - 1) << lbit;
 10937  008F' 3001               	movlw	1
 10938  0090' 0090'              	movwf	??_display_line
 10939  0091' 0321'              	decf	display_line@lbit,w
 10940  0092' 3AFF               	xorlw	255
 10941  0093' 071C'              	addwf	display_line@ubit,w
 10942  0094' 3E01               	addlw	1
 10943  0095' 0A89               	incf	9,f
 10944  0096' 2800'              	goto	u3374
 10945  0097'                    u3375:	
 10946  0097' 3590'              	lslf	??_display_line,f
 10947  0098'                    u3374:	
 10948  0098' 0B89               	decfsz	9,f
 10949  0099' 2800'              	goto	u3375
 10950  009A' 0810'              	movf	??_display_line,w
 10951  009B' 3EFF               	addlw	255
 10952  009C' 0091'              	movwf	??_display_line+1
 10953  009D' 0A21'              	incf	display_line@lbit,w
 10954  009E' 2800'              	goto	u3384
 10955  009F'                    u3385:	
 10956  009F' 3591'              	lslf	??_display_line+1,f
 10957  00A0'                    u3384:	
 10958  00A0' 0B89               	decfsz	9,f
 10959  00A1' 2800'              	goto	u3385
 10960  00A2' 0811'              	movf	??_display_line+1,w
 10961  00A3' 0092'              	movwf	??_display_line+2
 10962  00A4' 0812'              	movf	??_display_line+2,w
 10963  00A5' 2800'              	goto	L8
 10964  00A6'                    l3692:	
 10965                           ;ssd1306.c: 186: }else if( ptr == pend ){
 10966                           
 10967  00A6' 0820'              	movf	display_line@pend+1,w
 10968  00A7' 0627'              	xorwf	display_line@ptr+1,w
 10969  00A8' 1D03               	skipz
 10970  00A9' 2800'              	goto	u3395
 10971  00AA' 081F'              	movf	display_line@pend,w
 10972  00AB' 0626'              	xorwf	display_line@ptr,w
 10973  00AC'                    u3395:	
 10974  00AC' 1D03               	skipz
 10975  00AD' 2800'              	goto	l3696
 10976                           
 10977                           ;ssd1306.c: 189: mask = (1 << (y2 % 8)) - 1;
 10978  00AE' 3001               	movlw	1
 10979  00AF' 0090'              	movwf	??_display_line
 10980  00B0' 080C'              	movf	display_line@y2,w
 10981  00B1' 3907               	andlw	7
 10982  00B2' 0A89               	incf	9,f
 10983  00B3' 2800'              	goto	u3404
 10984  00B4'                    u3405:	
 10985  00B4' 3590'              	lslf	??_display_line,f
 10986  00B5'                    u3404:	
 10987  00B5' 0B89               	decfsz	9,f
 10988  00B6' 2800'              	goto	u3405
 10989  00B7' 0810'              	movf	??_display_line,w
 10990  00B8' 3EFF               	addlw	255
 10991  00B9' 0091'              	movwf	??_display_line+1
 10992  00BA' 0811'              	movf	??_display_line+1,w
 10993  00BB'                    L8:	
 10994  00BB' 00A3'              	movwf	display_line@mask
 10995  00BC'                    l3696:	
 10996                           
 10997                           ;ssd1306.c: 190: }
 10998                           ;ssd1306.c: 192: if( ptr == pstart || ptr == pend ){
 10999  00BC' 081E'              	movf	display_line@pstart+1,w
 11000  00BD' 0627'              	xorwf	display_line@ptr+1,w
 11001  00BE' 1D03               	skipz
 11002  00BF' 2800'              	goto	u3415
 11003  00C0' 081D'              	movf	display_line@pstart,w
 11004  00C1' 0626'              	xorwf	display_line@ptr,w
 11005  00C2'                    u3415:	
 11006  00C2' 1903               	skipnz
 11007  00C3' 2800'              	goto	l3708
 11008  00C4' 0820'              	movf	display_line@pend+1,w
 11009  00C5' 0627'              	xorwf	display_line@ptr+1,w
 11010  00C6' 1D03               	skipz
 11011  00C7' 2800'              	goto	u3425
 11012  00C8' 081F'              	movf	display_line@pend,w
 11013  00C9' 0626'              	xorwf	display_line@ptr,w
 11014  00CA'                    u3425:	
 11015  00CA' 1903               	btfsc	3,2
 11016  00CB' 2800'              	goto	l3708
 11017  00CC' 2800'              	goto	l3718
 11018  00CD'                    l3700:	
 11019                           ;ssd1306.c: 194: case 1: *ptr |= mask; break;
 11020                           
 11021                           ;ssd1306.c: 193: switch( color ){
 11022                           
 11023  00CD' 0823'              	movf	display_line@mask,w
 11024  00CE' 0090'              	movwf	??_display_line
 11025  00CF' 0826'              	movf	display_line@ptr,w
 11026  00D0' 0086               	movwf	6
 11027  00D1' 0827'              	movf	display_line@ptr+1,w
 11028  00D2' 0087               	movwf	7
 11029  00D3' 0810'              	movf	??_display_line,w
 11030  00D4' 0481               	iorwf	1,f
 11031  00D5' 2800'              	goto	l3720
 11032  00D6'                    l3702:	
 11033                           ;ssd1306.c: 195: case 0: *ptr &= ~mask; break;
 11034                           
 11035  00D6' 0923'              	comf	display_line@mask,w
 11036  00D7' 0090'              	movwf	??_display_line
 11037  00D8' 0826'              	movf	display_line@ptr,w
 11038  00D9' 0086               	movwf	6
 11039  00DA' 0827'              	movf	display_line@ptr+1,w
 11040  00DB' 0087               	movwf	7
 11041  00DC' 0810'              	movf	??_display_line,w
 11042  00DD' 0581               	andwf	1,f
 11043  00DE' 2800'              	goto	l3720
 11044  00DF'                    l3704:	
 11045                           ;ssd1306.c: 196: case 2: *ptr ^= mask; break;
 11046                           
 11047  00DF' 0823'              	movf	display_line@mask,w
 11048  00E0' 2800'              	goto	L9
 11049  00E1'                    l3708:	
 11050                           ;ssd1306.c: 197: };
 11051                           
 11052                           
 11053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11054                           ; Switch size 1, requested type "space"
 11055                           ; Number of cases is 1, Range of values is 0 to 0
 11056                           ; switch strategies available:
 11057                           ; Name         Instructions Cycles
 11058                           ; simple_byte            4     3 (average)
 11059                           ; direct_byte            8     6 (fixed)
 11060                           ; jumptable            260     6 (fixed)
 11061                           ;	Chosen strategy is simple_byte
 11062  00E1' 080F'              	movf	display_line@color+1,w
 11063  00E2' 3A00               	xorlw	0	; case 0
 11064  00E3' 1903               	skipnz
 11065  00E4' 2800'              	goto	l4544
 11066  00E5' 2800'              	goto	l3720
 11067  00E6'                    l4544:	
 11068                           
 11069                           ; Switch size 1, requested type "space"
 11070                           ; Number of cases is 3, Range of values is 0 to 2
 11071                           ; switch strategies available:
 11072                           ; Name         Instructions Cycles
 11073                           ; simple_byte           10     6 (average)
 11074                           ; direct_byte           12     6 (fixed)
 11075                           ; jumptable            260     6 (fixed)
 11076                           ;	Chosen strategy is simple_byte
 11077  00E6' 080E'              	movf	display_line@color,w
 11078  00E7' 3A00               	xorlw	0	; case 0
 11079  00E8' 1903               	skipnz
 11080  00E9' 2800'              	goto	l3702
 11081  00EA' 3A01               	xorlw	1	; case 1
 11082  00EB' 1903               	skipnz
 11083  00EC' 2800'              	goto	l3700
 11084  00ED' 3A03               	xorlw	3	; case 2
 11085  00EE' 1903               	skipnz
 11086  00EF' 2800'              	goto	l3704
 11087  00F0' 2800'              	goto	l3720
 11088                           
 11089                           ;ssd1306.c: 198: }else{
 11090  00F1' 2800'              	goto	l3720
 11091  00F2'                    l3710:	
 11092                           ;ssd1306.c: 200: case 1: *ptr = 0xff; break;
 11093                           
 11094                           ;ssd1306.c: 199: switch( color ){
 11095                           
 11096  00F2' 0826'              	movf	display_line@ptr,w
 11097  00F3' 0086               	movwf	6
 11098  00F4' 0827'              	movf	display_line@ptr+1,w
 11099  00F5' 0087               	movwf	7
 11100  00F6' 30FF               	movlw	255
 11101  00F7' 0081               	movwf	1
 11102  00F8' 2800'              	goto	l3720
 11103  00F9'                    l3712:	
 11104                           ;ssd1306.c: 201: case 0: *ptr = 0x00; break;
 11105                           
 11106  00F9' 0826'              	movf	display_line@ptr,w
 11107  00FA' 0086               	movwf	6
 11108  00FB' 0827'              	movf	display_line@ptr+1,w
 11109  00FC' 0087               	movwf	7
 11110  00FD' 0181               	clrf	1
 11111  00FE' 2800'              	goto	l3720
 11112  00FF'                    l3714:	
 11113                           ;ssd1306.c: 202: case 2: *ptr ^= 0xff; break;
 11114                           
 11115  00FF' 30FF               	movlw	255
 11116  0100'                    L9:	
 11117  0100' 0090'              	movwf	??_display_line
 11118  0101' 0826'              	movf	display_line@ptr,w
 11119  0102' 0086               	movwf	6
 11120  0103' 0827'              	movf	display_line@ptr+1,w
 11121  0104' 0087               	movwf	7
 11122  0105' 0810'              	movf	??_display_line,w
 11123  0106' 0681               	xorwf	1,f
 11124                           
 11125                           ;ssd1306.c: 203: };
 11126  0107' 2800'              	goto	l3720
 11127  0108'                    l3718:	
 11128                           
 11129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11130                           ; Switch size 1, requested type "space"
 11131                           ; Number of cases is 1, Range of values is 0 to 0
 11132                           ; switch strategies available:
 11133                           ; Name         Instructions Cycles
 11134                           ; simple_byte            4     3 (average)
 11135                           ; direct_byte            8     6 (fixed)
 11136                           ; jumptable            260     6 (fixed)
 11137                           ;	Chosen strategy is simple_byte
 11138  0108' 080F'              	movf	display_line@color+1,w
 11139  0109' 3A00               	xorlw	0	; case 0
 11140  010A' 1903               	skipnz
 11141  010B' 2800'              	goto	l4546
 11142  010C' 2800'              	goto	l3720
 11143  010D'                    l4546:	
 11144                           
 11145                           ; Switch size 1, requested type "space"
 11146                           ; Number of cases is 3, Range of values is 0 to 2
 11147                           ; switch strategies available:
 11148                           ; Name         Instructions Cycles
 11149                           ; simple_byte           10     6 (average)
 11150                           ; direct_byte           12     6 (fixed)
 11151                           ; jumptable            260     6 (fixed)
 11152                           ;	Chosen strategy is simple_byte
 11153  010D' 080E'              	movf	display_line@color,w
 11154  010E' 3A00               	xorlw	0	; case 0
 11155  010F' 1903               	skipnz
 11156  0110' 2800'              	goto	l3712
 11157  0111' 3A01               	xorlw	1	; case 1
 11158  0112' 1903               	skipnz
 11159  0113' 2800'              	goto	l3710
 11160  0114' 3A03               	xorlw	3	; case 2
 11161  0115' 1903               	skipnz
 11162  0116' 2800'              	goto	l3714
 11163  0117' 2800'              	goto	l3720
 11164  0118'                    l3720:	
 11165                           
 11166                           ;ssd1306.c: 204: }
 11167                           ;ssd1306.c: 206: ptr += (128+1);
 11168  0118' 3081               	movlw	129
 11169  0119' 07A6'              	addwf	display_line@ptr,f
 11170  011A' 3000               	movlw	0
 11171  011B' 3DA7'              	addwfc	display_line@ptr+1,f
 11172  011C' 2800'              	goto	l441
 11173  011D'                    l3722:	
 11174                           ;ssd1306.c: 207: }
 11175                           ;ssd1306.c: 208: }else{
 11176                           
 11177                           
 11178                           ;ssd1306.c: 210: uint8_t* pstart = (&frameBuff[y1 >> 3][x1 + 1]);
 11179  011D' 0809'              	movf	display_line@y1+1,w
 11180  011E' 0091'              	movwf	??_display_line+1
 11181  011F' 0808'              	movf	display_line@y1,w
 11182  0120' 0090'              	movwf	??_display_line
 11183  0121' 0D11'              	rlf	??_display_line+1,w
 11184  0122' 0C91'              	rrf	??_display_line+1,f
 11185  0123' 0C90'              	rrf	??_display_line,f
 11186  0124' 0D11'              	rlf	??_display_line+1,w
 11187  0125' 0C91'              	rrf	??_display_line+1,f
 11188  0126' 0C90'              	rrf	??_display_line,f
 11189  0127' 0D11'              	rlf	??_display_line+1,w
 11190  0128' 0C91'              	rrf	??_display_line+1,f
 11191  0129' 0C90'              	rrf	??_display_line,f
 11192  012A' 0810'              	movf	??_display_line,w
 11193  012B' 0080'              	movwf	___wmul@multiplier
 11194  012C' 0811'              	movf	??_display_line+1,w
 11195  012D' 0081'              	movwf	___wmul@multiplier+1
 11196  012E' 3081               	movlw	129
 11197  012F' 0082'              	movwf	___wmul@multiplicand
 11198  0130' 3000               	movlw	0
 11199  0131' 0083'              	movwf	___wmul@multiplicand+1
 11200  0132' 3180' 2000' 3180'  	fcall	___wmul
 11201  0135' 0020               	movlb	0	; select bank0
 11202  0136' 0806'              	movf	display_line@x1,w
 11203  0137' 3E01               	addlw	1
 11204  0138' 0092'              	movwf	??_display_line+2
 11205  0139' 3000               	movlw	0
 11206  013A' 3D07'              	addwfc	display_line@x1+1,w
 11207  013B' 0093'              	movwf	??_display_line+3
 11208  013C' 30E8               	movlw	232
 11209  013D' 0094'              	movwf	??_display_line+4
 11210  013E' 3023               	movlw	35
 11211  013F' 0095'              	movwf	??_display_line+5
 11212  0140' 0812'              	movf	??_display_line+2,w
 11213  0141' 0714'              	addwf	??_display_line+4,w
 11214  0142' 0096'              	movwf	??_display_line+6
 11215  0143' 0813'              	movf	??_display_line+3,w
 11216  0144' 3D15'              	addwfc	??_display_line+5,w
 11217  0145' 0097'              	movwf	??_display_line+7
 11218  0146' 0800'              	movf	?___wmul,w
 11219  0147' 0716'              	addwf	??_display_line+6,w
 11220  0148' 009A'              	movwf	display_line@pstart_778
 11221  0149' 0801'              	movf	?___wmul+1,w
 11222  014A' 3D17'              	addwfc	??_display_line+7,w
 11223  014B' 009B'              	movwf	display_line@pstart_778+1
 11224                           
 11225                           ;ssd1306.c: 211: uint8_t* pend = pstart + x2 - x1;
 11226  014C' 0906'              	comf	display_line@x1,w
 11227  014D' 0090'              	movwf	??_display_line
 11228  014E' 0907'              	comf	display_line@x1+1,w
 11229  014F' 0091'              	movwf	??_display_line+1
 11230  0150' 0A90'              	incf	??_display_line,f
 11231  0151' 1903               	skipnz
 11232  0152' 0A91'              	incf	??_display_line+1,f
 11233  0153' 0810'              	movf	??_display_line,w
 11234  0154' 071A'              	addwf	display_line@pstart_778,w
 11235  0155' 0092'              	movwf	??_display_line+2
 11236  0156' 0811'              	movf	??_display_line+1,w
 11237  0157' 3D1B'              	addwfc	display_line@pstart_778+1,w
 11238  0158' 0093'              	movwf	??_display_line+3
 11239  0159' 080A'              	movf	display_line@x2,w
 11240  015A' 0712'              	addwf	??_display_line+2,w
 11241  015B' 0098'              	movwf	display_line@pend_779
 11242  015C' 080B'              	movf	display_line@x2+1,w
 11243  015D' 3D13'              	addwfc	??_display_line+3,w
 11244  015E' 0099'              	movwf	display_line@pend_779+1
 11245                           
 11246                           ;ssd1306.c: 212: uint8_t pixmask = (1 << ((y1)&0x07));
 11247  015F' 3001               	movlw	1
 11248  0160' 0090'              	movwf	??_display_line
 11249  0161' 0808'              	movf	display_line@y1,w
 11250  0162' 3907               	andlw	7
 11251  0163' 0A89               	incf	9,f
 11252  0164' 2800'              	goto	u3444
 11253  0165'                    u3445:	
 11254  0165' 3590'              	lslf	??_display_line,f
 11255  0166'                    u3444:	
 11256  0166' 0B89               	decfsz	9,f
 11257  0167' 2800'              	goto	u3445
 11258  0168' 0810'              	movf	??_display_line,w
 11259  0169' 0091'              	movwf	??_display_line+1
 11260  016A' 0811'              	movf	??_display_line+1,w
 11261  016B' 00A2'              	movwf	display_line@pixmask
 11262                           
 11263                           ;ssd1306.c: 214: uint8_t* ptr = pstart;
 11264  016C' 081B'              	movf	display_line@pstart_778+1,w
 11265  016D' 00A5'              	movwf	display_line@ptr_781+1
 11266  016E' 081A'              	movf	display_line@pstart_778,w
 11267  016F' 00A4'              	movwf	display_line@ptr_781
 11268                           
 11269                           ;ssd1306.c: 215: while( ptr <= pend ){
 11270  0170' 2800'              	goto	l463
 11271  0171'                    l3730:	
 11272                           ;ssd1306.c: 217: case 1: *ptr |= pixmask; break;
 11273                           
 11274                           ;ssd1306.c: 216: switch( color ){
 11275                           
 11276  0171' 0822'              	movf	display_line@pixmask,w
 11277  0172' 0090'              	movwf	??_display_line
 11278  0173' 0824'              	movf	display_line@ptr_781,w
 11279  0174' 0086               	movwf	6
 11280  0175' 0825'              	movf	display_line@ptr_781+1,w
 11281  0176' 0087               	movwf	7
 11282  0177' 0810'              	movf	??_display_line,w
 11283  0178' 0481               	iorwf	1,f
 11284  0179' 2800'              	goto	l3740
 11285  017A'                    l3732:	
 11286                           ;ssd1306.c: 218: case 0: *ptr &= ~pixmask; break;
 11287                           
 11288  017A' 0922'              	comf	display_line@pixmask,w
 11289  017B' 0090'              	movwf	??_display_line
 11290  017C' 0824'              	movf	display_line@ptr_781,w
 11291  017D' 0086               	movwf	6
 11292  017E' 0825'              	movf	display_line@ptr_781+1,w
 11293  017F' 0087               	movwf	7
 11294  0180' 0810'              	movf	??_display_line,w
 11295  0181' 0581               	andwf	1,f
 11296  0182' 2800'              	goto	l3740
 11297  0183'                    l3734:	
 11298                           ;ssd1306.c: 219: case 2: *ptr ^= pixmask; break;
 11299                           
 11300  0183' 0822'              	movf	display_line@pixmask,w
 11301  0184' 0090'              	movwf	??_display_line
 11302  0185' 0824'              	movf	display_line@ptr_781,w
 11303  0186' 0086               	movwf	6
 11304  0187' 0825'              	movf	display_line@ptr_781+1,w
 11305  0188' 0087               	movwf	7
 11306  0189' 0810'              	movf	??_display_line,w
 11307  018A' 0681               	xorwf	1,f
 11308  018B'                    l3740:	
 11309                           ;ssd1306.c: 220: };
 11310                           
 11311                           
 11312                           ;ssd1306.c: 221: ptr++;
 11313  018B' 3001               	movlw	1
 11314  018C' 07A4'              	addwf	display_line@ptr_781,f
 11315  018D' 3000               	movlw	0
 11316  018E' 3DA5'              	addwfc	display_line@ptr_781+1,f
 11317  018F'                    l463:	
 11318  018F' 0825'              	movf	display_line@ptr_781+1,w
 11319  0190' 0219'              	subwf	display_line@pend_779+1,w
 11320  0191' 1D03               	skipz
 11321  0192' 2800'              	goto	u3455
 11322  0193' 0824'              	movf	display_line@ptr_781,w
 11323  0194' 0218'              	subwf	display_line@pend_779,w
 11324  0195'                    u3455:	
 11325  0195' 1C03               	btfss	3,0
 11326  0196' 0008               	return
 11327                           
 11328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11329                           ; Switch size 1, requested type "space"
 11330                           ; Number of cases is 1, Range of values is 0 to 0
 11331                           ; switch strategies available:
 11332                           ; Name         Instructions Cycles
 11333                           ; simple_byte            4     3 (average)
 11334                           ; direct_byte            8     6 (fixed)
 11335                           ; jumptable            260     6 (fixed)
 11336                           ;	Chosen strategy is simple_byte
 11337  0197' 080F'              	movf	display_line@color+1,w
 11338  0198' 3A00               	xorlw	0	; case 0
 11339  0199' 1903               	skipnz
 11340  019A' 2800'              	goto	l4548
 11341  019B' 2800'              	goto	l3740
 11342  019C'                    l4548:	
 11343                           
 11344                           ; Switch size 1, requested type "space"
 11345                           ; Number of cases is 3, Range of values is 0 to 2
 11346                           ; switch strategies available:
 11347                           ; Name         Instructions Cycles
 11348                           ; simple_byte           10     6 (average)
 11349                           ; direct_byte           12     6 (fixed)
 11350                           ; jumptable            260     6 (fixed)
 11351                           ;	Chosen strategy is simple_byte
 11352  019C' 080E'              	movf	display_line@color,w
 11353  019D' 3A00               	xorlw	0	; case 0
 11354  019E' 1903               	skipnz
 11355  019F' 2800'              	goto	l3732
 11356  01A0' 3A01               	xorlw	1	; case 1
 11357  01A1' 1903               	skipnz
 11358  01A2' 2800'              	goto	l3730
 11359  01A3' 3A03               	xorlw	3	; case 2
 11360  01A4' 1903               	skipnz
 11361  01A5' 2800'              	goto	l3734
 11362  01A6' 2800'              	goto	l3740
 11363  01A7' 2800'              	goto	l3740
 11364  01A8'                    __end_of_display_line:	
 11365                           
 11366                           	psect	text19
 11367  0000'                    __ptext19:	
 11368 ;; *************** function ___awdiv *****************
 11369 ;; Defined at:
 11370 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;  divisor         2    2[BANK0 ] int 
 11373 ;;  dividend        2    4[BANK0 ] int 
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  quotient        2    9[BANK0 ] int 
 11376 ;;  sign            1    8[BANK0 ] unsigned char 
 11377 ;;  counter         1    7[BANK0 ] unsigned char 
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  2    2[BANK0 ] int 
 11380 ;; Registers used:
 11381 ;;		wreg, status,2, status,0
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11388 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11390 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11391 ;;Total ram usage:        9 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    3
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_main
 11398 ;;		_gfx_drawLine
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           
 11403                           ;psect for function ___awdiv
 11404  0000'                    ___awdiv:	
 11405                           
 11406                           ;incstack = 0
 11407                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11408  0000' 0020               	movlb	0	; select bank0
 11409  0001' 0188'              	clrf	___awdiv@sign
 11410  0002' 1F83'              	btfss	___awdiv@divisor+1,7
 11411  0003' 2800'              	goto	l2598
 11412  0004' 0982'              	comf	___awdiv@divisor,f
 11413  0005' 0983'              	comf	___awdiv@divisor+1,f
 11414  0006' 0A82'              	incf	___awdiv@divisor,f
 11415  0007' 1903               	skipnz
 11416  0008' 0A83'              	incf	___awdiv@divisor+1,f
 11417  0009' 0188'              	clrf	___awdiv@sign
 11418  000A' 0A88'              	incf	___awdiv@sign,f
 11419  000B'                    l2598:	
 11420  000B' 1F85'              	btfss	___awdiv@dividend+1,7
 11421  000C' 2800'              	goto	l2604
 11422  000D' 0984'              	comf	___awdiv@dividend,f
 11423  000E' 0985'              	comf	___awdiv@dividend+1,f
 11424  000F' 0A84'              	incf	___awdiv@dividend,f
 11425  0010' 1903               	skipnz
 11426  0011' 0A85'              	incf	___awdiv@dividend+1,f
 11427  0012' 3001               	movlw	1
 11428  0013' 0086'              	movwf	??___awdiv
 11429  0014' 0806'              	movf	??___awdiv,w
 11430  0015' 0688'              	xorwf	___awdiv@sign,f
 11431  0016'                    l2604:	
 11432  0016' 0189'              	clrf	___awdiv@quotient
 11433  0017' 018A'              	clrf	___awdiv@quotient+1
 11434  0018' 0802'              	movf	___awdiv@divisor,w
 11435  0019' 0403'              	iorwf	___awdiv@divisor+1,w
 11436  001A' 1903               	btfsc	3,2
 11437  001B' 2800'              	goto	l2626
 11438  001C' 0187'              	clrf	___awdiv@counter
 11439  001D' 0A87'              	incf	___awdiv@counter,f
 11440  001E'                    l2614:	
 11441  001E' 1B83'              	btfsc	___awdiv@divisor+1,7
 11442  001F' 2800'              	goto	l2616
 11443  0020' 3001               	movlw	1
 11444  0021'                    u2175:	
 11445  0021' 3582'              	lslf	___awdiv@divisor,f
 11446  0022' 0D83'              	rlf	___awdiv@divisor+1,f
 11447  0023' 0B89               	decfsz	9,f
 11448  0024' 2800'              	goto	u2175
 11449  0025' 3001               	movlw	1
 11450  0026' 0086'              	movwf	??___awdiv
 11451  0027' 0806'              	movf	??___awdiv,w
 11452  0028' 0787'              	addwf	___awdiv@counter,f
 11453  0029' 2800'              	goto	l2614
 11454  002A'                    l2616:	
 11455  002A' 3001               	movlw	1
 11456  002B'                    u2195:	
 11457  002B' 3589'              	lslf	___awdiv@quotient,f
 11458  002C' 0D8A'              	rlf	___awdiv@quotient+1,f
 11459  002D' 0B89               	decfsz	9,f
 11460  002E' 2800'              	goto	u2195
 11461  002F' 0803'              	movf	___awdiv@divisor+1,w
 11462  0030' 0205'              	subwf	___awdiv@dividend+1,w
 11463  0031' 1D03               	skipz
 11464  0032' 2800'              	goto	u2205
 11465  0033' 0802'              	movf	___awdiv@divisor,w
 11466  0034' 0204'              	subwf	___awdiv@dividend,w
 11467  0035'                    u2205:	
 11468  0035' 1C03               	skipc
 11469  0036' 2800'              	goto	l2622
 11470  0037' 0802'              	movf	___awdiv@divisor,w
 11471  0038' 0284'              	subwf	___awdiv@dividend,f
 11472  0039' 0803'              	movf	___awdiv@divisor+1,w
 11473  003A' 3B85'              	subwfb	___awdiv@dividend+1,f
 11474  003B' 1409'              	bsf	___awdiv@quotient,0
 11475  003C'                    l2622:	
 11476  003C' 3001               	movlw	1
 11477  003D'                    u2215:	
 11478  003D' 3683'              	lsrf	___awdiv@divisor+1,f
 11479  003E' 0C82'              	rrf	___awdiv@divisor,f
 11480  003F' 0B89               	decfsz	9,f
 11481  0040' 2800'              	goto	u2215
 11482  0041' 3001               	movlw	1
 11483  0042' 0287'              	subwf	___awdiv@counter,f
 11484  0043' 1D03               	btfss	3,2
 11485  0044' 2800'              	goto	l2616
 11486  0045'                    l2626:	
 11487  0045' 0808'              	movf	___awdiv@sign,w
 11488  0046' 1903               	btfsc	3,2
 11489  0047' 2800'              	goto	l2630
 11490  0048' 0989'              	comf	___awdiv@quotient,f
 11491  0049' 098A'              	comf	___awdiv@quotient+1,f
 11492  004A' 0A89'              	incf	___awdiv@quotient,f
 11493  004B' 1903               	skipnz
 11494  004C' 0A8A'              	incf	___awdiv@quotient+1,f
 11495  004D'                    l2630:	
 11496  004D' 080A'              	movf	___awdiv@quotient+1,w
 11497  004E' 0083'              	movwf	?___awdiv+1
 11498  004F' 0809'              	movf	___awdiv@quotient,w
 11499  0050' 0082'              	movwf	?___awdiv
 11500  0051' 0008               	return
 11501  0052'                    __end_of___awdiv:	
 11502                           
 11503                           	psect	text20
 11504  0000'                    __ptext20:	
 11505 ;; *************** function _gfx_drawCircle *****************
 11506 ;; Defined at:
 11507 ;;		line 473 in file "ssd1306.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  x0              2   29[BANK0 ] int 
 11510 ;;  y0              2   31[BANK0 ] int 
 11511 ;;  r               2   33[BANK0 ] int 
 11512 ;;  color           2   35[BANK0 ] unsigned int 
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;  y               2   49[BANK0 ] int 
 11515 ;;  x               2   47[BANK0 ] int 
 11516 ;;  f               2   45[BANK0 ] int 
 11517 ;;  ddF_y           2   43[BANK0 ] int 
 11518 ;;  ddF_x           2   41[BANK0 ] int 
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      void 
 11521 ;; Registers used:
 11522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11528 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11529 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11530 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11531 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11532 ;;Total ram usage:       22 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; Hardware stack levels required when called:    6
 11535 ;; This function calls:
 11536 ;;		_gfx_drawPixel
 11537 ;; This function is called by:
 11538 ;;		_main
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           
 11543                           ;psect for function _gfx_drawCircle
 11544  0000'                    _gfx_drawCircle:	
 11545                           
 11546                           ;ssd1306.c: 475: int16_t f = 1 - r;
 11547                           
 11548                           ;incstack = 0
 11549                           ; Regs used in _gfx_drawCircle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11550  0000' 0020               	movlb	0	; select bank0
 11551  0001' 0921'              	comf	gfx_drawCircle@r,w
 11552  0002' 00A5'              	movwf	??_gfx_drawCircle
 11553  0003' 0922'              	comf	gfx_drawCircle@r+1,w
 11554  0004' 00A6'              	movwf	??_gfx_drawCircle+1
 11555  0005' 0AA5'              	incf	??_gfx_drawCircle,f
 11556  0006' 1903               	skipnz
 11557  0007' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11558  0008' 0825'              	movf	??_gfx_drawCircle,w
 11559  0009' 3E01               	addlw	1
 11560  000A' 00AD'              	movwf	gfx_drawCircle@f
 11561  000B' 3000               	movlw	0
 11562  000C' 3D26'              	addwfc	??_gfx_drawCircle+1,w
 11563  000D' 00AE'              	movwf	gfx_drawCircle@f+1
 11564                           
 11565                           ;ssd1306.c: 476: int16_t ddF_x = 1;
 11566  000E' 3001               	movlw	1
 11567  000F' 00A9'              	movwf	gfx_drawCircle@ddF_x
 11568  0010' 3000               	movlw	0
 11569  0011' 00AA'              	movwf	gfx_drawCircle@ddF_x+1
 11570                           
 11571                           ;ssd1306.c: 477: int16_t ddF_y = -2 * r;
 11572  0012' 0822'              	movf	gfx_drawCircle@r+1,w
 11573  0013' 00A6'              	movwf	??_gfx_drawCircle+1
 11574  0014' 0821'              	movf	gfx_drawCircle@r,w
 11575  0015' 00A5'              	movwf	??_gfx_drawCircle
 11576  0016' 35A5'              	lslf	??_gfx_drawCircle,f
 11577  0017' 0DA6'              	rlf	??_gfx_drawCircle+1,f
 11578  0018' 09A5'              	comf	??_gfx_drawCircle,f
 11579  0019' 09A6'              	comf	??_gfx_drawCircle+1,f
 11580  001A' 0AA5'              	incf	??_gfx_drawCircle,f
 11581  001B' 1903               	skipnz
 11582  001C' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11583  001D' 0825'              	movf	??_gfx_drawCircle,w
 11584  001E' 00AB'              	movwf	gfx_drawCircle@ddF_y
 11585  001F' 0826'              	movf	??_gfx_drawCircle+1,w
 11586  0020' 00AC'              	movwf	gfx_drawCircle@ddF_y+1
 11587                           
 11588                           ;ssd1306.c: 478: int16_t x = 0;
 11589  0021' 01AF'              	clrf	gfx_drawCircle@x
 11590  0022' 01B0'              	clrf	gfx_drawCircle@x+1
 11591                           
 11592                           ;ssd1306.c: 479: int16_t y = r;
 11593  0023' 0822'              	movf	gfx_drawCircle@r+1,w
 11594  0024' 00B2'              	movwf	gfx_drawCircle@y+1
 11595  0025' 0821'              	movf	gfx_drawCircle@r,w
 11596  0026' 00B1'              	movwf	gfx_drawCircle@y
 11597                           
 11598                           ;ssd1306.c: 480: gfx_drawPixel( x0 , y0+r, color );
 11599  0027' 081E'              	movf	gfx_drawCircle@x0+1,w
 11600  0028' 0097'              	movwf	gfx_drawPixel@x+1
 11601  0029' 081D'              	movf	gfx_drawCircle@x0,w
 11602  002A' 0096'              	movwf	gfx_drawPixel@x
 11603  002B' 0821'              	movf	gfx_drawCircle@r,w
 11604  002C' 071F'              	addwf	gfx_drawCircle@y0,w
 11605  002D' 0098'              	movwf	gfx_drawPixel@y
 11606  002E' 0822'              	movf	gfx_drawCircle@r+1,w
 11607  002F' 3D20'              	addwfc	gfx_drawCircle@y0+1,w
 11608  0030' 0099'              	movwf	gfx_drawPixel@y+1
 11609  0031' 0824'              	movf	gfx_drawCircle@color+1,w
 11610  0032' 009B'              	movwf	gfx_drawPixel@color+1
 11611  0033' 0823'              	movf	gfx_drawCircle@color,w
 11612  0034' 009A'              	movwf	gfx_drawPixel@color
 11613  0035' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11614                           
 11615                           ;ssd1306.c: 481: gfx_drawPixel( x0 , y0-r, color );
 11616  0038' 0020               	movlb	0	; select bank0
 11617  0039' 081E'              	movf	gfx_drawCircle@x0+1,w
 11618  003A' 0097'              	movwf	gfx_drawPixel@x+1
 11619  003B' 081D'              	movf	gfx_drawCircle@x0,w
 11620  003C' 0096'              	movwf	gfx_drawPixel@x
 11621  003D' 0921'              	comf	gfx_drawCircle@r,w
 11622  003E' 00A5'              	movwf	??_gfx_drawCircle
 11623  003F' 0922'              	comf	gfx_drawCircle@r+1,w
 11624  0040' 00A6'              	movwf	??_gfx_drawCircle+1
 11625  0041' 0AA5'              	incf	??_gfx_drawCircle,f
 11626  0042' 1903               	skipnz
 11627  0043' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11628  0044' 081F'              	movf	gfx_drawCircle@y0,w
 11629  0045' 0725'              	addwf	??_gfx_drawCircle,w
 11630  0046' 0098'              	movwf	gfx_drawPixel@y
 11631  0047' 0820'              	movf	gfx_drawCircle@y0+1,w
 11632  0048' 3D26'              	addwfc	??_gfx_drawCircle+1,w
 11633  0049' 0099'              	movwf	gfx_drawPixel@y+1
 11634  004A' 0824'              	movf	gfx_drawCircle@color+1,w
 11635  004B' 009B'              	movwf	gfx_drawPixel@color+1
 11636  004C' 0823'              	movf	gfx_drawCircle@color,w
 11637  004D' 009A'              	movwf	gfx_drawPixel@color
 11638  004E' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11639                           
 11640                           ;ssd1306.c: 482: gfx_drawPixel( x0+r, y0 , color );
 11641  0051' 0020               	movlb	0	; select bank0
 11642  0052' 0821'              	movf	gfx_drawCircle@r,w
 11643  0053' 071D'              	addwf	gfx_drawCircle@x0,w
 11644  0054' 0096'              	movwf	gfx_drawPixel@x
 11645  0055' 0822'              	movf	gfx_drawCircle@r+1,w
 11646  0056' 3D1E'              	addwfc	gfx_drawCircle@x0+1,w
 11647  0057' 0097'              	movwf	gfx_drawPixel@x+1
 11648  0058' 0820'              	movf	gfx_drawCircle@y0+1,w
 11649  0059' 0099'              	movwf	gfx_drawPixel@y+1
 11650  005A' 081F'              	movf	gfx_drawCircle@y0,w
 11651  005B' 0098'              	movwf	gfx_drawPixel@y
 11652  005C' 0824'              	movf	gfx_drawCircle@color+1,w
 11653  005D' 009B'              	movwf	gfx_drawPixel@color+1
 11654  005E' 0823'              	movf	gfx_drawCircle@color,w
 11655  005F' 009A'              	movwf	gfx_drawPixel@color
 11656  0060' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11657                           
 11658                           ;ssd1306.c: 483: gfx_drawPixel( x0-r, y0 , color );
 11659  0063' 0020               	movlb	0	; select bank0
 11660  0064' 0921'              	comf	gfx_drawCircle@r,w
 11661  0065' 00A5'              	movwf	??_gfx_drawCircle
 11662  0066' 0922'              	comf	gfx_drawCircle@r+1,w
 11663  0067' 00A6'              	movwf	??_gfx_drawCircle+1
 11664  0068' 0AA5'              	incf	??_gfx_drawCircle,f
 11665  0069' 1903               	skipnz
 11666  006A' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11667  006B' 081D'              	movf	gfx_drawCircle@x0,w
 11668  006C' 0725'              	addwf	??_gfx_drawCircle,w
 11669  006D' 0096'              	movwf	gfx_drawPixel@x
 11670  006E' 081E'              	movf	gfx_drawCircle@x0+1,w
 11671  006F' 3D26'              	addwfc	??_gfx_drawCircle+1,w
 11672  0070' 0097'              	movwf	gfx_drawPixel@x+1
 11673  0071' 0820'              	movf	gfx_drawCircle@y0+1,w
 11674  0072' 0099'              	movwf	gfx_drawPixel@y+1
 11675  0073' 081F'              	movf	gfx_drawCircle@y0,w
 11676  0074' 0098'              	movwf	gfx_drawPixel@y
 11677  0075'                    L10:	
 11678  0075' 0824'              	movf	gfx_drawCircle@color+1,w
 11679  0076' 009B'              	movwf	gfx_drawPixel@color+1
 11680  0077' 0823'              	movf	gfx_drawCircle@color,w
 11681  0078' 009A'              	movwf	gfx_drawPixel@color
 11682  0079' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11683  007C' 0020               	movlb	0	; select bank0
 11684  007D' 0830'              	movf	gfx_drawCircle@x+1,w
 11685  007E' 3A80               	xorlw	128
 11686  007F' 00A5'              	movwf	??_gfx_drawCircle
 11687  0080' 0832'              	movf	gfx_drawCircle@y+1,w
 11688  0081' 3A80               	xorlw	128
 11689  0082' 0225'              	subwf	??_gfx_drawCircle,w
 11690  0083' 1D03               	skipz
 11691  0084' 2800'              	goto	u4165
 11692  0085' 0831'              	movf	gfx_drawCircle@y,w
 11693  0086' 022F'              	subwf	gfx_drawCircle@x,w
 11694  0087'                    u4165:	
 11695  0087' 1803               	btfsc	3,0
 11696  0088' 0008               	return
 11697                           
 11698                           ;ssd1306.c: 485: if( f >= 0 ){
 11699                           
 11700                           ;ssd1306.c: 484: while( x < y ){
 11701  0089' 0020               	movlb	0	; select bank0
 11702  008A' 1BAE'              	btfsc	gfx_drawCircle@f+1,7
 11703  008B' 2800'              	goto	l621
 11704                           
 11705                           ;ssd1306.c: 486: y--;
 11706  008C' 30FF               	movlw	255
 11707  008D' 07B1'              	addwf	gfx_drawCircle@y,f
 11708  008E' 30FF               	movlw	255
 11709  008F' 3DB2'              	addwfc	gfx_drawCircle@y+1,f
 11710                           
 11711                           ;ssd1306.c: 487: ddF_y += 2;
 11712  0090' 3002               	movlw	2
 11713  0091' 07AB'              	addwf	gfx_drawCircle@ddF_y,f
 11714  0092' 3000               	movlw	0
 11715  0093' 3DAC'              	addwfc	gfx_drawCircle@ddF_y+1,f
 11716                           
 11717                           ;ssd1306.c: 488: f += ddF_y;
 11718  0094' 082B'              	movf	gfx_drawCircle@ddF_y,w
 11719  0095' 07AD'              	addwf	gfx_drawCircle@f,f
 11720  0096' 082C'              	movf	gfx_drawCircle@ddF_y+1,w
 11721  0097' 3DAE'              	addwfc	gfx_drawCircle@f+1,f
 11722  0098'                    l621:	
 11723                           
 11724                           ;ssd1306.c: 489: }
 11725                           ;ssd1306.c: 490: x++;
 11726  0098' 3001               	movlw	1
 11727  0099' 07AF'              	addwf	gfx_drawCircle@x,f
 11728  009A' 3000               	movlw	0
 11729  009B' 3DB0'              	addwfc	gfx_drawCircle@x+1,f
 11730                           
 11731                           ;ssd1306.c: 491: ddF_x += 2;
 11732  009C' 3002               	movlw	2
 11733  009D' 07A9'              	addwf	gfx_drawCircle@ddF_x,f
 11734  009E' 3000               	movlw	0
 11735  009F' 3DAA'              	addwfc	gfx_drawCircle@ddF_x+1,f
 11736                           
 11737                           ;ssd1306.c: 492: f += ddF_x;
 11738  00A0' 0829'              	movf	gfx_drawCircle@ddF_x,w
 11739  00A1' 07AD'              	addwf	gfx_drawCircle@f,f
 11740  00A2' 082A'              	movf	gfx_drawCircle@ddF_x+1,w
 11741  00A3' 3DAE'              	addwfc	gfx_drawCircle@f+1,f
 11742                           
 11743                           ;ssd1306.c: 493: gfx_drawPixel( x0 + x, y0 + y, color );
 11744  00A4' 082F'              	movf	gfx_drawCircle@x,w
 11745  00A5' 071D'              	addwf	gfx_drawCircle@x0,w
 11746  00A6' 0096'              	movwf	gfx_drawPixel@x
 11747  00A7' 0830'              	movf	gfx_drawCircle@x+1,w
 11748  00A8' 3D1E'              	addwfc	gfx_drawCircle@x0+1,w
 11749  00A9' 0097'              	movwf	gfx_drawPixel@x+1
 11750  00AA' 0831'              	movf	gfx_drawCircle@y,w
 11751  00AB' 071F'              	addwf	gfx_drawCircle@y0,w
 11752  00AC' 0098'              	movwf	gfx_drawPixel@y
 11753  00AD' 0832'              	movf	gfx_drawCircle@y+1,w
 11754  00AE' 3D20'              	addwfc	gfx_drawCircle@y0+1,w
 11755  00AF' 0099'              	movwf	gfx_drawPixel@y+1
 11756  00B0' 0824'              	movf	gfx_drawCircle@color+1,w
 11757  00B1' 009B'              	movwf	gfx_drawPixel@color+1
 11758  00B2' 0823'              	movf	gfx_drawCircle@color,w
 11759  00B3' 009A'              	movwf	gfx_drawPixel@color
 11760  00B4' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11761                           
 11762                           ;ssd1306.c: 494: gfx_drawPixel( x0 - x, y0 + y, color );
 11763  00B7' 0020               	movlb	0	; select bank0
 11764  00B8' 092F'              	comf	gfx_drawCircle@x,w
 11765  00B9' 00A5'              	movwf	??_gfx_drawCircle
 11766  00BA' 0930'              	comf	gfx_drawCircle@x+1,w
 11767  00BB' 00A6'              	movwf	??_gfx_drawCircle+1
 11768  00BC' 0AA5'              	incf	??_gfx_drawCircle,f
 11769  00BD' 1903               	skipnz
 11770  00BE' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11771  00BF' 081D'              	movf	gfx_drawCircle@x0,w
 11772  00C0' 0725'              	addwf	??_gfx_drawCircle,w
 11773  00C1' 0096'              	movwf	gfx_drawPixel@x
 11774  00C2' 081E'              	movf	gfx_drawCircle@x0+1,w
 11775  00C3' 3D26'              	addwfc	??_gfx_drawCircle+1,w
 11776  00C4' 0097'              	movwf	gfx_drawPixel@x+1
 11777  00C5' 0831'              	movf	gfx_drawCircle@y,w
 11778  00C6' 071F'              	addwf	gfx_drawCircle@y0,w
 11779  00C7' 0098'              	movwf	gfx_drawPixel@y
 11780  00C8' 0832'              	movf	gfx_drawCircle@y+1,w
 11781  00C9' 3D20'              	addwfc	gfx_drawCircle@y0+1,w
 11782  00CA' 0099'              	movwf	gfx_drawPixel@y+1
 11783  00CB' 0824'              	movf	gfx_drawCircle@color+1,w
 11784  00CC' 009B'              	movwf	gfx_drawPixel@color+1
 11785  00CD' 0823'              	movf	gfx_drawCircle@color,w
 11786  00CE' 009A'              	movwf	gfx_drawPixel@color
 11787  00CF' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11788                           
 11789                           ;ssd1306.c: 495: gfx_drawPixel( x0 + x, y0 - y, color );
 11790  00D2' 0020               	movlb	0	; select bank0
 11791  00D3' 082F'              	movf	gfx_drawCircle@x,w
 11792  00D4' 071D'              	addwf	gfx_drawCircle@x0,w
 11793  00D5' 0096'              	movwf	gfx_drawPixel@x
 11794  00D6' 0830'              	movf	gfx_drawCircle@x+1,w
 11795  00D7' 3D1E'              	addwfc	gfx_drawCircle@x0+1,w
 11796  00D8' 0097'              	movwf	gfx_drawPixel@x+1
 11797  00D9' 0931'              	comf	gfx_drawCircle@y,w
 11798  00DA' 00A5'              	movwf	??_gfx_drawCircle
 11799  00DB' 0932'              	comf	gfx_drawCircle@y+1,w
 11800  00DC' 00A6'              	movwf	??_gfx_drawCircle+1
 11801  00DD' 0AA5'              	incf	??_gfx_drawCircle,f
 11802  00DE' 1903               	skipnz
 11803  00DF' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11804  00E0' 081F'              	movf	gfx_drawCircle@y0,w
 11805  00E1' 0725'              	addwf	??_gfx_drawCircle,w
 11806  00E2' 0098'              	movwf	gfx_drawPixel@y
 11807  00E3' 0820'              	movf	gfx_drawCircle@y0+1,w
 11808  00E4' 3D26'              	addwfc	??_gfx_drawCircle+1,w
 11809  00E5' 0099'              	movwf	gfx_drawPixel@y+1
 11810  00E6' 0824'              	movf	gfx_drawCircle@color+1,w
 11811  00E7' 009B'              	movwf	gfx_drawPixel@color+1
 11812  00E8' 0823'              	movf	gfx_drawCircle@color,w
 11813  00E9' 009A'              	movwf	gfx_drawPixel@color
 11814  00EA' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11815                           
 11816                           ;ssd1306.c: 496: gfx_drawPixel( x0 - x, y0 - y, color );
 11817  00ED' 0020               	movlb	0	; select bank0
 11818  00EE' 092F'              	comf	gfx_drawCircle@x,w
 11819  00EF' 00A5'              	movwf	??_gfx_drawCircle
 11820  00F0' 0930'              	comf	gfx_drawCircle@x+1,w
 11821  00F1' 00A6'              	movwf	??_gfx_drawCircle+1
 11822  00F2' 0AA5'              	incf	??_gfx_drawCircle,f
 11823  00F3' 1903               	skipnz
 11824  00F4' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11825  00F5' 081D'              	movf	gfx_drawCircle@x0,w
 11826  00F6' 0725'              	addwf	??_gfx_drawCircle,w
 11827  00F7' 0096'              	movwf	gfx_drawPixel@x
 11828  00F8' 081E'              	movf	gfx_drawCircle@x0+1,w
 11829  00F9' 3D26'              	addwfc	??_gfx_drawCircle+1,w
 11830  00FA' 0097'              	movwf	gfx_drawPixel@x+1
 11831  00FB' 0931'              	comf	gfx_drawCircle@y,w
 11832  00FC' 00A7'              	movwf	??_gfx_drawCircle+2
 11833  00FD' 0932'              	comf	gfx_drawCircle@y+1,w
 11834  00FE' 00A8'              	movwf	??_gfx_drawCircle+3
 11835  00FF' 0AA7'              	incf	??_gfx_drawCircle+2,f
 11836  0100' 1903               	skipnz
 11837  0101' 0AA8'              	incf	??_gfx_drawCircle+3,f
 11838  0102' 081F'              	movf	gfx_drawCircle@y0,w
 11839  0103' 0727'              	addwf	??_gfx_drawCircle+2,w
 11840  0104' 0098'              	movwf	gfx_drawPixel@y
 11841  0105' 0820'              	movf	gfx_drawCircle@y0+1,w
 11842  0106' 3D28'              	addwfc	??_gfx_drawCircle+3,w
 11843  0107' 0099'              	movwf	gfx_drawPixel@y+1
 11844  0108' 0824'              	movf	gfx_drawCircle@color+1,w
 11845  0109' 009B'              	movwf	gfx_drawPixel@color+1
 11846  010A' 0823'              	movf	gfx_drawCircle@color,w
 11847  010B' 009A'              	movwf	gfx_drawPixel@color
 11848  010C' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11849                           
 11850                           ;ssd1306.c: 497: gfx_drawPixel( x0 + y, y0 + x, color );
 11851  010F' 0020               	movlb	0	; select bank0
 11852  0110' 0831'              	movf	gfx_drawCircle@y,w
 11853  0111' 071D'              	addwf	gfx_drawCircle@x0,w
 11854  0112' 0096'              	movwf	gfx_drawPixel@x
 11855  0113' 0832'              	movf	gfx_drawCircle@y+1,w
 11856  0114' 3D1E'              	addwfc	gfx_drawCircle@x0+1,w
 11857  0115' 0097'              	movwf	gfx_drawPixel@x+1
 11858  0116' 082F'              	movf	gfx_drawCircle@x,w
 11859  0117' 071F'              	addwf	gfx_drawCircle@y0,w
 11860  0118' 0098'              	movwf	gfx_drawPixel@y
 11861  0119' 0830'              	movf	gfx_drawCircle@x+1,w
 11862  011A' 3D20'              	addwfc	gfx_drawCircle@y0+1,w
 11863  011B' 0099'              	movwf	gfx_drawPixel@y+1
 11864  011C' 0824'              	movf	gfx_drawCircle@color+1,w
 11865  011D' 009B'              	movwf	gfx_drawPixel@color+1
 11866  011E' 0823'              	movf	gfx_drawCircle@color,w
 11867  011F' 009A'              	movwf	gfx_drawPixel@color
 11868  0120' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11869                           
 11870                           ;ssd1306.c: 498: gfx_drawPixel( x0 - y, y0 + x, color );
 11871  0123' 0020               	movlb	0	; select bank0
 11872  0124' 0931'              	comf	gfx_drawCircle@y,w
 11873  0125' 00A5'              	movwf	??_gfx_drawCircle
 11874  0126' 0932'              	comf	gfx_drawCircle@y+1,w
 11875  0127' 00A6'              	movwf	??_gfx_drawCircle+1
 11876  0128' 0AA5'              	incf	??_gfx_drawCircle,f
 11877  0129' 1903               	skipnz
 11878  012A' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11879  012B' 081D'              	movf	gfx_drawCircle@x0,w
 11880  012C' 0725'              	addwf	??_gfx_drawCircle,w
 11881  012D' 0096'              	movwf	gfx_drawPixel@x
 11882  012E' 081E'              	movf	gfx_drawCircle@x0+1,w
 11883  012F' 3D26'              	addwfc	??_gfx_drawCircle+1,w
 11884  0130' 0097'              	movwf	gfx_drawPixel@x+1
 11885  0131' 082F'              	movf	gfx_drawCircle@x,w
 11886  0132' 071F'              	addwf	gfx_drawCircle@y0,w
 11887  0133' 0098'              	movwf	gfx_drawPixel@y
 11888  0134' 0830'              	movf	gfx_drawCircle@x+1,w
 11889  0135' 3D20'              	addwfc	gfx_drawCircle@y0+1,w
 11890  0136' 0099'              	movwf	gfx_drawPixel@y+1
 11891  0137' 0824'              	movf	gfx_drawCircle@color+1,w
 11892  0138' 009B'              	movwf	gfx_drawPixel@color+1
 11893  0139' 0823'              	movf	gfx_drawCircle@color,w
 11894  013A' 009A'              	movwf	gfx_drawPixel@color
 11895  013B' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11896                           
 11897                           ;ssd1306.c: 499: gfx_drawPixel( x0 + y, y0 - x, color );
 11898  013E' 0020               	movlb	0	; select bank0
 11899  013F' 0831'              	movf	gfx_drawCircle@y,w
 11900  0140' 071D'              	addwf	gfx_drawCircle@x0,w
 11901  0141' 0096'              	movwf	gfx_drawPixel@x
 11902  0142' 0832'              	movf	gfx_drawCircle@y+1,w
 11903  0143' 3D1E'              	addwfc	gfx_drawCircle@x0+1,w
 11904  0144' 0097'              	movwf	gfx_drawPixel@x+1
 11905  0145' 092F'              	comf	gfx_drawCircle@x,w
 11906  0146' 00A5'              	movwf	??_gfx_drawCircle
 11907  0147' 0930'              	comf	gfx_drawCircle@x+1,w
 11908  0148' 00A6'              	movwf	??_gfx_drawCircle+1
 11909  0149' 0AA5'              	incf	??_gfx_drawCircle,f
 11910  014A' 1903               	skipnz
 11911  014B' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11912  014C' 081F'              	movf	gfx_drawCircle@y0,w
 11913  014D' 0725'              	addwf	??_gfx_drawCircle,w
 11914  014E' 0098'              	movwf	gfx_drawPixel@y
 11915  014F' 0820'              	movf	gfx_drawCircle@y0+1,w
 11916  0150' 3D26'              	addwfc	??_gfx_drawCircle+1,w
 11917  0151' 0099'              	movwf	gfx_drawPixel@y+1
 11918  0152' 0824'              	movf	gfx_drawCircle@color+1,w
 11919  0153' 009B'              	movwf	gfx_drawPixel@color+1
 11920  0154' 0823'              	movf	gfx_drawCircle@color,w
 11921  0155' 009A'              	movwf	gfx_drawPixel@color
 11922  0156' 3180' 2000' 3180'  	fcall	_gfx_drawPixel
 11923                           
 11924                           ;ssd1306.c: 500: gfx_drawPixel( x0 - y, y0 - x, color );
 11925  0159' 0020               	movlb	0	; select bank0
 11926  015A' 0931'              	comf	gfx_drawCircle@y,w
 11927  015B' 00A5'              	movwf	??_gfx_drawCircle
 11928  015C' 0932'              	comf	gfx_drawCircle@y+1,w
 11929  015D' 00A6'              	movwf	??_gfx_drawCircle+1
 11930  015E' 0AA5'              	incf	??_gfx_drawCircle,f
 11931  015F' 1903               	skipnz
 11932  0160' 0AA6'              	incf	??_gfx_drawCircle+1,f
 11933  0161' 081D'              	movf	gfx_drawCircle@x0,w
 11934  0162' 0725'              	addwf	??_gfx_drawCircle,w
 11935  0163' 0096'              	movwf	gfx_drawPixel@x
 11936  0164' 081E'              	movf	gfx_drawCircle@x0+1,w
 11937  0165' 3D26'              	addwfc	??_gfx_drawCircle+1,w
 11938  0166' 0097'              	movwf	gfx_drawPixel@x+1
 11939  0167' 092F'              	comf	gfx_drawCircle@x,w
 11940  0168' 00A7'              	movwf	??_gfx_drawCircle+2
 11941  0169' 0930'              	comf	gfx_drawCircle@x+1,w
 11942  016A' 00A8'              	movwf	??_gfx_drawCircle+3
 11943  016B' 0AA7'              	incf	??_gfx_drawCircle+2,f
 11944  016C' 1903               	skipnz
 11945  016D' 0AA8'              	incf	??_gfx_drawCircle+3,f
 11946  016E' 081F'              	movf	gfx_drawCircle@y0,w
 11947  016F' 0727'              	addwf	??_gfx_drawCircle+2,w
 11948  0170' 0098'              	movwf	gfx_drawPixel@y
 11949  0171' 0820'              	movf	gfx_drawCircle@y0+1,w
 11950  0172' 3D28'              	addwfc	??_gfx_drawCircle+3,w
 11951  0173' 0099'              	movwf	gfx_drawPixel@y+1
 11952  0174' 2800'              	goto	L10
 11953  0175'                    __end_of_gfx_drawCircle:	
 11954                           
 11955                           	psect	text21
 11956  0000'                    __ptext21:	
 11957 ;; *************** function _gfx_drawPixel *****************
 11958 ;; Defined at:
 11959 ;;		line 354 in file "ssd1306.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  x               2   22[BANK0 ] int 
 11962 ;;  y               2   24[BANK0 ] int 
 11963 ;;  color           2   26[BANK0 ] unsigned int 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;		None
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  1    wreg      void 
 11968 ;; Registers used:
 11969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11975 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11978 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11979 ;;Total ram usage:        7 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; Hardware stack levels required when called:    5
 11982 ;; This function calls:
 11983 ;;		_display_setPixel
 11984 ;;		_gfx_rotation_adjust
 11985 ;; This function is called by:
 11986 ;;		_main
 11987 ;;		_gfx_drawLine
 11988 ;;		_gfx_drawCircle
 11989 ;;		_gfx_drawChar
 11990 ;; This function uses a non-reentrant model
 11991 ;;
 11992                           
 11993                           
 11994                           ;psect for function _gfx_drawPixel
 11995  0000'                    _gfx_drawPixel:	
 11996                           
 11997                           ;ssd1306.c: 356: if( (x < 0) || (x >= _width) || (y < 0) || (y >= _height) )
 11998                           
 11999                           ;incstack = 0
 12000                           ; Regs used in _gfx_drawPixel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12001  0000' 0020               	movlb	0	; select bank0
 12002  0001' 1B97'              	btfsc	gfx_drawPixel@x+1,7
 12003  0002' 0008               	return
 12004  0003' 0817'              	movf	gfx_drawPixel@x+1,w
 12005  0004' 3A80               	xorlw	128
 12006  0005' 009C'              	movwf	??_gfx_drawPixel
 12007  0006' 0021               	movlb	1	; select bank1
 12008  0007' 0800'              	movf	(__width+1)^(0+128),w
 12009  0008' 3A80               	xorlw	128
 12010  0009' 0020               	movlb	0	; select bank0
 12011  000A' 021C'              	subwf	??_gfx_drawPixel,w
 12012  000B' 1D03               	skipz
 12013  000C' 2800'              	goto	u3475
 12014  000D' 0021               	movlb	1	; select bank1
 12015  000E' 0800'              	movf	__width^(0+128),w
 12016  000F' 0020               	movlb	0	; select bank0
 12017  0010' 0216'              	subwf	gfx_drawPixel@x,w
 12018  0011'                    u3475:	
 12019  0011' 1803               	skipnc
 12020  0012' 0008               	return
 12021  0013' 0020               	movlb	0	; select bank0
 12022  0014' 1B99'              	btfsc	gfx_drawPixel@y+1,7
 12023  0015' 0008               	return
 12024  0016' 0819'              	movf	gfx_drawPixel@y+1,w
 12025  0017' 3A80               	xorlw	128
 12026  0018' 009C'              	movwf	??_gfx_drawPixel
 12027  0019' 0022               	movlb	2	; select bank2
 12028  001A' 0800'              	movf	(__height+1)^(0+256),w
 12029  001B' 3A80               	xorlw	128
 12030  001C' 0020               	movlb	0	; select bank0
 12031  001D' 021C'              	subwf	??_gfx_drawPixel,w
 12032  001E' 1D03               	skipz
 12033  001F' 2800'              	goto	u3495
 12034  0020' 0022               	movlb	2	; select bank2
 12035  0021' 0800'              	movf	__height^(0+256),w
 12036  0022' 0020               	movlb	0	; select bank0
 12037  0023' 0218'              	subwf	gfx_drawPixel@y,w
 12038  0024'                    u3495:	
 12039  0024' 1803               	btfsc	3,0
 12040  0025' 0008               	return
 12041                           
 12042                           ;ssd1306.c: 359: gfx_rotation_adjust( &x, &y );
 12043                           
 12044                           ;ssd1306.c: 357: return;
 12045  0026' 3000'              	movlw	(low (gfx_drawPixel@y| 0))& (0+255)
 12046  0027' 0020               	movlb	0	; select bank0
 12047  0028' 009C'              	movwf	??_gfx_drawPixel
 12048  0029' 081C'              	movf	??_gfx_drawPixel,w
 12049  002A' 0080'              	movwf	gfx_rotation_adjust@py
 12050  002B' 3000'              	movlw	(low (gfx_drawPixel@x| 0))& (0+255)
 12051  002C' 3180' 2000' 3180'  	fcall	_gfx_rotation_adjust
 12052                           
 12053                           ;ssd1306.c: 361: display_setPixel(x,y,color);
 12054  002F' 0020               	movlb	0	; select bank0
 12055  0030' 0817'              	movf	gfx_drawPixel@x+1,w
 12056  0031' 0087'              	movwf	display_setPixel@x+1
 12057  0032' 0816'              	movf	gfx_drawPixel@x,w
 12058  0033' 0086'              	movwf	display_setPixel@x
 12059  0034' 0819'              	movf	gfx_drawPixel@y+1,w
 12060  0035' 0089'              	movwf	display_setPixel@y+1
 12061  0036' 0818'              	movf	gfx_drawPixel@y,w
 12062  0037' 0088'              	movwf	display_setPixel@y
 12063  0038' 081B'              	movf	gfx_drawPixel@color+1,w
 12064  0039' 008B'              	movwf	display_setPixel@color+1
 12065  003A' 081A'              	movf	gfx_drawPixel@color,w
 12066  003B' 008A'              	movwf	display_setPixel@color
 12067  003C' 3180' 2000'        	fcall	_display_setPixel
 12068  003E' 0008               	return
 12069  003F'                    __end_of_gfx_drawPixel:	
 12070                           
 12071                           	psect	text22
 12072  0000'                    __ptext22:	
 12073 ;; *************** function _gfx_rotation_adjust *****************
 12074 ;; Defined at:
 12075 ;;		line 334 in file "ssd1306.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;  px              1    wreg     PTR int 
 12078 ;;		 -> gfx_hvLine@x2(2), gfx_hvLine@x1(2), gfx_drawPixel@x(2), 
 12079 ;;  py              1    0[BANK0 ] PTR int 
 12080 ;;		 -> gfx_hvLine@y2(2), gfx_hvLine@y1(2), gfx_drawPixel@y(2), 
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;  px              1    9[BANK0 ] PTR int 
 12083 ;;		 -> gfx_hvLine@x2(2), gfx_hvLine@x1(2), gfx_drawPixel@x(2), 
 12084 ;;  y0              2    7[BANK0 ] int 
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  1    wreg      void 
 12087 ;; Registers used:
 12088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12094 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12095 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12096 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12097 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12098 ;;Total ram usage:       10 bytes
 12099 ;; Hardware stack levels used:    1
 12100 ;; Hardware stack levels required when called:    3
 12101 ;; This function calls:
 12102 ;;		Nothing
 12103 ;; This function is called by:
 12104 ;;		_gfx_drawPixel
 12105 ;;		_gfx_hvLine
 12106 ;; This function uses a non-reentrant model
 12107 ;;
 12108                           
 12109                           
 12110                           ;psect for function _gfx_rotation_adjust
 12111  0000'                    _gfx_rotation_adjust:	
 12112                           
 12113                           ;incstack = 0
 12114                           ; Regs used in _gfx_rotation_adjust: [wreg-fsr1h+status,2+status,0]
 12115                           ;gfx_rotation_adjust@px stored from wreg
 12116  0000' 0020               	movlb	0	; select bank0
 12117  0001' 0089'              	movwf	gfx_rotation_adjust@px
 12118                           
 12119                           ;ssd1306.c: 336: int16_t y0 = *py;
 12120  0002' 0800'              	movf	gfx_rotation_adjust@py,w
 12121  0003' 0086               	movwf	6
 12122  0004' 0187               	clrf	7
 12123  0005' 3F40               	moviw [0]fsr1
 12124  0006' 0087'              	movwf	gfx_rotation_adjust@y0
 12125  0007' 3F41               	moviw [1]fsr1
 12126  0008' 0088'              	movwf	gfx_rotation_adjust@y0+1
 12127                           
 12128                           ;ssd1306.c: 338: switch( rotation ){
 12129  0009' 2800'              	goto	l2524
 12130  000A'                    l2512:	
 12131                           ;ssd1306.c: 339: case 1:
 12132                           
 12133                           
 12134                           ;ssd1306.c: 340: *py = *px;
 12135  000A' 0809'              	movf	gfx_rotation_adjust@px,w
 12136  000B' 0086               	movwf	6
 12137  000C' 0187               	clrf	7
 12138  000D' 0800'              	movf	gfx_rotation_adjust@py,w
 12139  000E' 0084               	movwf	4
 12140  000F' 0185               	clrf	5
 12141  0010' 3F40               	moviw [0]fsr1
 12142  0011' 3F80               	movwi [0]fsr0
 12143  0012' 3F41               	moviw [1]fsr1
 12144  0013' 3F81               	movwi [1]fsr0
 12145                           
 12146                           ;ssd1306.c: 341: *px = WIDTH - y0 - 1;
 12147  0014' 0807'              	movf	gfx_rotation_adjust@y0,w
 12148  0015' 3E01               	addlw	1
 12149  0016' 0081'              	movwf	??_gfx_rotation_adjust
 12150  0017' 3000               	movlw	0
 12151  0018' 3D08'              	addwfc	gfx_rotation_adjust@y0+1,w
 12152  0019' 0082'              	movwf	??_gfx_rotation_adjust+1
 12153  001A' 0981'              	comf	??_gfx_rotation_adjust,f
 12154  001B' 0982'              	comf	??_gfx_rotation_adjust+1,f
 12155  001C' 0A81'              	incf	??_gfx_rotation_adjust,f
 12156  001D' 1903               	skipnz
 12157  001E' 0A82'              	incf	??_gfx_rotation_adjust+1,f
 12158  001F' 0800'              	movf	_WIDTH,w
 12159  0020' 0701'              	addwf	??_gfx_rotation_adjust,w
 12160  0021' 0083'              	movwf	??_gfx_rotation_adjust+2
 12161  0022' 0801'              	movf	_WIDTH+1,w
 12162  0023' 3D02'              	addwfc	??_gfx_rotation_adjust+1,w
 12163  0024' 0084'              	movwf	??_gfx_rotation_adjust+3
 12164  0025' 0809'              	movf	gfx_rotation_adjust@px,w
 12165  0026' 0086               	movwf	6
 12166  0027' 0187               	clrf	7
 12167  0028' 0803'              	movf	??_gfx_rotation_adjust+2,w
 12168  0029' 3FC0               	movwi [0]fsr1
 12169  002A' 0804'              	movf	??_gfx_rotation_adjust+3,w
 12170  002B' 3FC1               	movwi [1]fsr1
 12171                           
 12172                           ;ssd1306.c: 342: break;
 12173  002C' 0008               	return
 12174  002D'                    l2516:	
 12175                           ;ssd1306.c: 343: case 2:
 12176                           
 12177                           
 12178                           ;ssd1306.c: 344: *px = WIDTH - *px - 1;
 12179  002D' 0809'              	movf	gfx_rotation_adjust@px,w
 12180  002E' 0086               	movwf	6
 12181  002F' 0187               	clrf	7
 12182  0030' 3F40               	moviw [0]fsr1
 12183  0031' 0081'              	movwf	??_gfx_rotation_adjust
 12184  0032' 3F41               	moviw [1]fsr1
 12185  0033' 0082'              	movwf	??_gfx_rotation_adjust+1
 12186  0034' 0801'              	movf	??_gfx_rotation_adjust,w
 12187  0035' 3E01               	addlw	1
 12188  0036' 0083'              	movwf	??_gfx_rotation_adjust+2
 12189  0037' 3000               	movlw	0
 12190  0038' 3D02'              	addwfc	??_gfx_rotation_adjust+1,w
 12191  0039' 0084'              	movwf	??_gfx_rotation_adjust+3
 12192  003A' 0983'              	comf	??_gfx_rotation_adjust+2,f
 12193  003B' 0984'              	comf	??_gfx_rotation_adjust+3,f
 12194  003C' 0A83'              	incf	??_gfx_rotation_adjust+2,f
 12195  003D' 1903               	skipnz
 12196  003E' 0A84'              	incf	??_gfx_rotation_adjust+3,f
 12197  003F' 0800'              	movf	_WIDTH,w
 12198  0040' 0703'              	addwf	??_gfx_rotation_adjust+2,w
 12199  0041' 0085'              	movwf	??_gfx_rotation_adjust+4
 12200  0042' 0801'              	movf	_WIDTH+1,w
 12201  0043' 3D04'              	addwfc	??_gfx_rotation_adjust+3,w
 12202  0044' 0086'              	movwf	??_gfx_rotation_adjust+5
 12203  0045' 0809'              	movf	gfx_rotation_adjust@px,w
 12204  0046' 0086               	movwf	6
 12205  0047' 0187               	clrf	7
 12206  0048' 0805'              	movf	??_gfx_rotation_adjust+4,w
 12207  0049' 3FC0               	movwi [0]fsr1
 12208  004A' 0806'              	movf	??_gfx_rotation_adjust+5,w
 12209  004B' 3FC1               	movwi [1]fsr1
 12210                           
 12211                           ;ssd1306.c: 345: *py = HEIGHT - *py - 1;
 12212  004C' 0800'              	movf	gfx_rotation_adjust@py,w
 12213  004D' 0086               	movwf	6
 12214  004E' 0187               	clrf	7
 12215  004F' 3F40               	moviw [0]fsr1
 12216  0050' 0081'              	movwf	??_gfx_rotation_adjust
 12217  0051' 3F41               	moviw [1]fsr1
 12218  0052' 0082'              	movwf	??_gfx_rotation_adjust+1
 12219  0053' 0801'              	movf	??_gfx_rotation_adjust,w
 12220  0054' 3E01               	addlw	1
 12221  0055' 0083'              	movwf	??_gfx_rotation_adjust+2
 12222  0056' 3000               	movlw	0
 12223  0057' 3D02'              	addwfc	??_gfx_rotation_adjust+1,w
 12224  0058' 0084'              	movwf	??_gfx_rotation_adjust+3
 12225  0059' 0983'              	comf	??_gfx_rotation_adjust+2,f
 12226  005A' 0984'              	comf	??_gfx_rotation_adjust+3,f
 12227  005B' 0A83'              	incf	??_gfx_rotation_adjust+2,f
 12228  005C' 1903               	skipnz
 12229  005D' 0A84'              	incf	??_gfx_rotation_adjust+3,f
 12230  005E' 0800'              	movf	_HEIGHT,w
 12231  005F' 0703'              	addwf	??_gfx_rotation_adjust+2,w
 12232  0060' 0085'              	movwf	??_gfx_rotation_adjust+4
 12233  0061' 0801'              	movf	_HEIGHT+1,w
 12234  0062' 3D04'              	addwfc	??_gfx_rotation_adjust+3,w
 12235  0063' 0086'              	movwf	??_gfx_rotation_adjust+5
 12236  0064' 0800'              	movf	gfx_rotation_adjust@py,w
 12237  0065' 0086               	movwf	6
 12238  0066' 0187               	clrf	7
 12239  0067' 0805'              	movf	??_gfx_rotation_adjust+4,w
 12240  0068' 3FC0               	movwi [0]fsr1
 12241  0069' 0806'              	movf	??_gfx_rotation_adjust+5,w
 12242  006A' 3FC1               	movwi [1]fsr1
 12243                           
 12244                           ;ssd1306.c: 346: break;
 12245  006B' 0008               	return
 12246  006C'                    l2518:	
 12247                           ;ssd1306.c: 347: case 3:
 12248                           
 12249                           
 12250                           ;ssd1306.c: 348: *py = HEIGHT - *px - 1;
 12251  006C' 0809'              	movf	gfx_rotation_adjust@px,w
 12252  006D' 0086               	movwf	6
 12253  006E' 0187               	clrf	7
 12254  006F' 3F40               	moviw [0]fsr1
 12255  0070' 0081'              	movwf	??_gfx_rotation_adjust
 12256  0071' 3F41               	moviw [1]fsr1
 12257  0072' 0082'              	movwf	??_gfx_rotation_adjust+1
 12258  0073' 0801'              	movf	??_gfx_rotation_adjust,w
 12259  0074' 3E01               	addlw	1
 12260  0075' 0083'              	movwf	??_gfx_rotation_adjust+2
 12261  0076' 3000               	movlw	0
 12262  0077' 3D02'              	addwfc	??_gfx_rotation_adjust+1,w
 12263  0078' 0084'              	movwf	??_gfx_rotation_adjust+3
 12264  0079' 0983'              	comf	??_gfx_rotation_adjust+2,f
 12265  007A' 0984'              	comf	??_gfx_rotation_adjust+3,f
 12266  007B' 0A83'              	incf	??_gfx_rotation_adjust+2,f
 12267  007C' 1903               	skipnz
 12268  007D' 0A84'              	incf	??_gfx_rotation_adjust+3,f
 12269  007E' 0800'              	movf	_HEIGHT,w
 12270  007F' 0703'              	addwf	??_gfx_rotation_adjust+2,w
 12271  0080' 0085'              	movwf	??_gfx_rotation_adjust+4
 12272  0081' 0801'              	movf	_HEIGHT+1,w
 12273  0082' 3D04'              	addwfc	??_gfx_rotation_adjust+3,w
 12274  0083' 0086'              	movwf	??_gfx_rotation_adjust+5
 12275  0084' 0800'              	movf	gfx_rotation_adjust@py,w
 12276  0085' 0086               	movwf	6
 12277  0086' 0187               	clrf	7
 12278  0087' 0805'              	movf	??_gfx_rotation_adjust+4,w
 12279  0088' 3FC0               	movwi [0]fsr1
 12280  0089' 0806'              	movf	??_gfx_rotation_adjust+5,w
 12281  008A' 3FC1               	movwi [1]fsr1
 12282                           
 12283                           ;ssd1306.c: 349: *px = y0;
 12284  008B' 0809'              	movf	gfx_rotation_adjust@px,w
 12285  008C' 0086               	movwf	6
 12286  008D' 0187               	clrf	7
 12287  008E' 0807'              	movf	gfx_rotation_adjust@y0,w
 12288  008F' 3FC0               	movwi [0]fsr1
 12289  0090' 0808'              	movf	gfx_rotation_adjust@y0+1,w
 12290  0091' 3FC1               	movwi [1]fsr1
 12291                           
 12292                           ;ssd1306.c: 351: }
 12293                           
 12294                           ;ssd1306.c: 350: break;
 12295  0092' 0008               	return
 12296  0093'                    l2524:	
 12297  0093' 0802'              	movf	_rotation,w
 12298                           
 12299                           ; Switch size 1, requested type "space"
 12300                           ; Number of cases is 3, Range of values is 1 to 3
 12301                           ; switch strategies available:
 12302                           ; Name         Instructions Cycles
 12303                           ; simple_byte           10     6 (average)
 12304                           ; direct_byte           15     9 (fixed)
 12305                           ; jumptable            263     9 (fixed)
 12306                           ;	Chosen strategy is simple_byte
 12307  0094' 3A01               	xorlw	1	; case 1
 12308  0095' 1903               	skipnz
 12309  0096' 2800'              	goto	l2512
 12310  0097' 3A03               	xorlw	3	; case 2
 12311  0098' 1903               	skipnz
 12312  0099' 2800'              	goto	l2516
 12313  009A' 3A01               	xorlw	1	; case 3
 12314  009B' 1903               	skipnz
 12315  009C' 2800'              	goto	l2518
 12316  009D' 2800'              	goto	l551
 12317  009E'                    l551:	
 12318  009E' 0008               	return
 12319  009F'                    __end_of_gfx_rotation_adjust:	
 12320                           
 12321                           	psect	text23
 12322  0000'                    __ptext23:	
 12323 ;; *************** function _display_setPixel *****************
 12324 ;; Defined at:
 12325 ;;		line 98 in file "ssd1306.c"
 12326 ;; Parameters:    Size  Location     Type
 12327 ;;  x               2    6[BANK0 ] int 
 12328 ;;  y               2    8[BANK0 ] int 
 12329 ;;  color           2   10[BANK0 ] unsigned int 
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;		None
 12332 ;; Return value:  Size  Location     Type
 12333 ;;                  1    wreg      void 
 12334 ;; Registers used:
 12335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12336 ;; Tracked objects:
 12337 ;;		On entry : 0/0
 12338 ;;		On exit  : 0/0
 12339 ;;		Unchanged: 0/0
 12340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12341 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12343 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12344 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12345 ;;Total ram usage:       16 bytes
 12346 ;; Hardware stack levels used:    1
 12347 ;; Hardware stack levels required when called:    4
 12348 ;; This function calls:
 12349 ;;		___wmul
 12350 ;; This function is called by:
 12351 ;;		_gfx_drawPixel
 12352 ;; This function uses a non-reentrant model
 12353 ;;
 12354                           
 12355                           
 12356                           ;psect for function _display_setPixel
 12357  0000'                    _display_setPixel:	
 12358                           
 12359                           ;ssd1306.c: 100: if( (x < 0) || (x >= 128) || (y < 0) || (y >= 64) )
 12360                           
 12361                           ;incstack = 0
 12362                           ; Regs used in _display_setPixel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12363  0000' 0020               	movlb	0	; select bank0
 12364  0001' 1B87'              	btfsc	display_setPixel@x+1,7
 12365  0002' 0008               	return
 12366  0003' 0807'              	movf	display_setPixel@x+1,w
 12367  0004' 3A80               	xorlw	128
 12368  0005' 008C'              	movwf	??_display_setPixel
 12369  0006' 3080               	movlw	128
 12370  0007' 020C'              	subwf	??_display_setPixel,w
 12371  0008' 1D03               	skipz
 12372  0009' 2800'              	goto	u3285
 12373  000A' 3080               	movlw	128
 12374  000B' 0206'              	subwf	display_setPixel@x,w
 12375  000C'                    u3285:	
 12376  000C' 1803               	skipnc
 12377  000D' 0008               	return
 12378  000E' 0020               	movlb	0	; select bank0
 12379  000F' 1B89'              	btfsc	display_setPixel@y+1,7
 12380  0010' 0008               	return
 12381  0011' 0809'              	movf	display_setPixel@y+1,w
 12382  0012' 3A80               	xorlw	128
 12383  0013' 008C'              	movwf	??_display_setPixel
 12384  0014' 3080               	movlw	128
 12385  0015' 020C'              	subwf	??_display_setPixel,w
 12386  0016' 1D03               	skipz
 12387  0017' 2800'              	goto	u3305
 12388  0018' 3040               	movlw	64
 12389  0019' 0208'              	subwf	display_setPixel@y,w
 12390  001A'                    u3305:	
 12391  001A' 1803               	btfsc	3,0
 12392  001B' 0008               	return
 12393  001C' 2800'              	goto	l3668
 12394  001D'                    l3660:	
 12395                           ;ssd1306.c: 104: case 1:
 12396                           
 12397                           ;ssd1306.c: 103: switch( color ){
 12398                           
 12399                           ;ssd1306.c: 101: return;
 12400                           
 12401                           
 12402                           ;ssd1306.c: 105: (*(&frameBuff[y >> 3][x + 1]) |= (1 << ((y)&0x07)));
 12403  001D' 3001               	movlw	1
 12404  001E' 0020               	movlb	0	; select bank0
 12405  001F' 008C'              	movwf	??_display_setPixel
 12406  0020' 0808'              	movf	display_setPixel@y,w
 12407  0021' 3907               	andlw	7
 12408  0022' 0A89               	incf	9,f
 12409  0023' 2800'              	goto	u3314
 12410  0024'                    u3315:	
 12411  0024' 358C'              	lslf	??_display_setPixel,f
 12412  0025'                    u3314:	
 12413  0025' 0B89               	decfsz	9,f
 12414  0026' 2800'              	goto	u3315
 12415  0027' 080C'              	movf	??_display_setPixel,w
 12416  0028' 008D'              	movwf	??_display_setPixel+1
 12417  0029' 0809'              	movf	display_setPixel@y+1,w
 12418  002A' 008F'              	movwf	??_display_setPixel+3
 12419  002B' 0808'              	movf	display_setPixel@y,w
 12420  002C' 008E'              	movwf	??_display_setPixel+2
 12421  002D' 0D0F'              	rlf	??_display_setPixel+3,w
 12422  002E' 0C8F'              	rrf	??_display_setPixel+3,f
 12423  002F' 0C8E'              	rrf	??_display_setPixel+2,f
 12424  0030' 0D0F'              	rlf	??_display_setPixel+3,w
 12425  0031' 0C8F'              	rrf	??_display_setPixel+3,f
 12426  0032' 0C8E'              	rrf	??_display_setPixel+2,f
 12427  0033' 0D0F'              	rlf	??_display_setPixel+3,w
 12428  0034' 0C8F'              	rrf	??_display_setPixel+3,f
 12429  0035' 0C8E'              	rrf	??_display_setPixel+2,f
 12430  0036' 080E'              	movf	??_display_setPixel+2,w
 12431  0037' 0080'              	movwf	___wmul@multiplier
 12432  0038' 080F'              	movf	??_display_setPixel+3,w
 12433  0039' 0081'              	movwf	___wmul@multiplier+1
 12434  003A' 3081               	movlw	129
 12435  003B' 0082'              	movwf	___wmul@multiplicand
 12436  003C' 3000               	movlw	0
 12437  003D' 0083'              	movwf	___wmul@multiplicand+1
 12438  003E' 3180' 2000'        	fcall	___wmul
 12439  0040' 0020               	movlb	0	; select bank0
 12440  0041' 0806'              	movf	display_setPixel@x,w
 12441  0042' 3E01               	addlw	1
 12442  0043' 0090'              	movwf	??_display_setPixel+4
 12443  0044' 3000               	movlw	0
 12444  0045' 3D07'              	addwfc	display_setPixel@x+1,w
 12445  0046' 0091'              	movwf	??_display_setPixel+5
 12446  0047' 30E8               	movlw	232
 12447  0048' 0092'              	movwf	??_display_setPixel+6
 12448  0049' 3023               	movlw	35
 12449  004A' 0093'              	movwf	??_display_setPixel+7
 12450  004B' 0810'              	movf	??_display_setPixel+4,w
 12451  004C' 0712'              	addwf	??_display_setPixel+6,w
 12452  004D' 0094'              	movwf	??_display_setPixel+8
 12453  004E' 0811'              	movf	??_display_setPixel+5,w
 12454  004F' 3D13'              	addwfc	??_display_setPixel+7,w
 12455  0050' 0095'              	movwf	??_display_setPixel+9
 12456  0051' 0800'              	movf	?___wmul,w
 12457  0052' 0714'              	addwf	??_display_setPixel+8,w
 12458  0053' 0086               	movwf	6
 12459  0054' 0801'              	movf	?___wmul+1,w
 12460  0055' 3D15'              	addwfc	??_display_setPixel+9,w
 12461  0056' 0087               	movwf	7
 12462  0057' 080D'              	movf	??_display_setPixel+1,w
 12463  0058' 0481               	iorwf	1,f
 12464                           
 12465                           ;ssd1306.c: 106: break;
 12466  0059' 0008               	return
 12467  005A'                    l3662:	
 12468                           ;ssd1306.c: 107: case 0:
 12469                           
 12470                           
 12471                           ;ssd1306.c: 108: (*(&frameBuff[y >> 3][x + 1]) &= ~(1 << ((y)&0x07)));
 12472  005A' 3001               	movlw	1
 12473  005B' 008C'              	movwf	??_display_setPixel
 12474  005C' 0808'              	movf	display_setPixel@y,w
 12475  005D' 3907               	andlw	7
 12476  005E' 0A89               	incf	9,f
 12477  005F' 2800'              	goto	u3324
 12478  0060'                    u3325:	
 12479  0060' 358C'              	lslf	??_display_setPixel,f
 12480  0061'                    u3324:	
 12481  0061' 0B89               	decfsz	9,f
 12482  0062' 2800'              	goto	u3325
 12483  0063' 080C'              	movf	??_display_setPixel,w
 12484  0064' 3AFF               	xorlw	255
 12485  0065' 008D'              	movwf	??_display_setPixel+1
 12486  0066' 0809'              	movf	display_setPixel@y+1,w
 12487  0067' 008F'              	movwf	??_display_setPixel+3
 12488  0068' 0808'              	movf	display_setPixel@y,w
 12489  0069' 008E'              	movwf	??_display_setPixel+2
 12490  006A' 0D0F'              	rlf	??_display_setPixel+3,w
 12491  006B' 0C8F'              	rrf	??_display_setPixel+3,f
 12492  006C' 0C8E'              	rrf	??_display_setPixel+2,f
 12493  006D' 0D0F'              	rlf	??_display_setPixel+3,w
 12494  006E' 0C8F'              	rrf	??_display_setPixel+3,f
 12495  006F' 0C8E'              	rrf	??_display_setPixel+2,f
 12496  0070' 0D0F'              	rlf	??_display_setPixel+3,w
 12497  0071' 0C8F'              	rrf	??_display_setPixel+3,f
 12498  0072' 0C8E'              	rrf	??_display_setPixel+2,f
 12499  0073' 080E'              	movf	??_display_setPixel+2,w
 12500  0074' 0080'              	movwf	___wmul@multiplier
 12501  0075' 080F'              	movf	??_display_setPixel+3,w
 12502  0076' 0081'              	movwf	___wmul@multiplier+1
 12503  0077' 3081               	movlw	129
 12504  0078' 0082'              	movwf	___wmul@multiplicand
 12505  0079' 3000               	movlw	0
 12506  007A' 0083'              	movwf	___wmul@multiplicand+1
 12507  007B' 3180' 2000'        	fcall	___wmul
 12508  007D' 0020               	movlb	0	; select bank0
 12509  007E' 0806'              	movf	display_setPixel@x,w
 12510  007F' 3E01               	addlw	1
 12511  0080' 0090'              	movwf	??_display_setPixel+4
 12512  0081' 3000               	movlw	0
 12513  0082' 3D07'              	addwfc	display_setPixel@x+1,w
 12514  0083' 0091'              	movwf	??_display_setPixel+5
 12515  0084' 30E8               	movlw	232
 12516  0085' 0092'              	movwf	??_display_setPixel+6
 12517  0086' 3023               	movlw	35
 12518  0087' 0093'              	movwf	??_display_setPixel+7
 12519  0088' 0810'              	movf	??_display_setPixel+4,w
 12520  0089' 0712'              	addwf	??_display_setPixel+6,w
 12521  008A' 0094'              	movwf	??_display_setPixel+8
 12522  008B' 0811'              	movf	??_display_setPixel+5,w
 12523  008C' 3D13'              	addwfc	??_display_setPixel+7,w
 12524  008D' 0095'              	movwf	??_display_setPixel+9
 12525  008E' 0800'              	movf	?___wmul,w
 12526  008F' 0714'              	addwf	??_display_setPixel+8,w
 12527  0090' 0086               	movwf	6
 12528  0091' 0801'              	movf	?___wmul+1,w
 12529  0092' 3D15'              	addwfc	??_display_setPixel+9,w
 12530  0093' 0087               	movwf	7
 12531  0094' 080D'              	movf	??_display_setPixel+1,w
 12532  0095' 0581               	andwf	1,f
 12533                           
 12534                           ;ssd1306.c: 109: break;
 12535  0096' 0008               	return
 12536  0097'                    l3664:	
 12537                           ;ssd1306.c: 110: case 2:
 12538                           
 12539                           
 12540                           ;ssd1306.c: 111: (*(&frameBuff[y >> 3][x + 1]) ^= (1 << ((y)&0x07)));
 12541  0097' 3001               	movlw	1
 12542  0098' 008C'              	movwf	??_display_setPixel
 12543  0099' 0808'              	movf	display_setPixel@y,w
 12544  009A' 3907               	andlw	7
 12545  009B' 0A89               	incf	9,f
 12546  009C' 2800'              	goto	u3334
 12547  009D'                    u3335:	
 12548  009D' 358C'              	lslf	??_display_setPixel,f
 12549  009E'                    u3334:	
 12550  009E' 0B89               	decfsz	9,f
 12551  009F' 2800'              	goto	u3335
 12552  00A0' 080C'              	movf	??_display_setPixel,w
 12553  00A1' 008D'              	movwf	??_display_setPixel+1
 12554  00A2' 0809'              	movf	display_setPixel@y+1,w
 12555  00A3' 008F'              	movwf	??_display_setPixel+3
 12556  00A4' 0808'              	movf	display_setPixel@y,w
 12557  00A5' 008E'              	movwf	??_display_setPixel+2
 12558  00A6' 0D0F'              	rlf	??_display_setPixel+3,w
 12559  00A7' 0C8F'              	rrf	??_display_setPixel+3,f
 12560  00A8' 0C8E'              	rrf	??_display_setPixel+2,f
 12561  00A9' 0D0F'              	rlf	??_display_setPixel+3,w
 12562  00AA' 0C8F'              	rrf	??_display_setPixel+3,f
 12563  00AB' 0C8E'              	rrf	??_display_setPixel+2,f
 12564  00AC' 0D0F'              	rlf	??_display_setPixel+3,w
 12565  00AD' 0C8F'              	rrf	??_display_setPixel+3,f
 12566  00AE' 0C8E'              	rrf	??_display_setPixel+2,f
 12567  00AF' 080E'              	movf	??_display_setPixel+2,w
 12568  00B0' 0080'              	movwf	___wmul@multiplier
 12569  00B1' 080F'              	movf	??_display_setPixel+3,w
 12570  00B2' 0081'              	movwf	___wmul@multiplier+1
 12571  00B3' 3081               	movlw	129
 12572  00B4' 0082'              	movwf	___wmul@multiplicand
 12573  00B5' 3000               	movlw	0
 12574  00B6' 0083'              	movwf	___wmul@multiplicand+1
 12575  00B7' 3180' 2000'        	fcall	___wmul
 12576  00B9' 0020               	movlb	0	; select bank0
 12577  00BA' 0806'              	movf	display_setPixel@x,w
 12578  00BB' 3E01               	addlw	1
 12579  00BC' 0090'              	movwf	??_display_setPixel+4
 12580  00BD' 3000               	movlw	0
 12581  00BE' 3D07'              	addwfc	display_setPixel@x+1,w
 12582  00BF' 0091'              	movwf	??_display_setPixel+5
 12583  00C0' 30E8               	movlw	232
 12584  00C1' 0092'              	movwf	??_display_setPixel+6
 12585  00C2' 3023               	movlw	35
 12586  00C3' 0093'              	movwf	??_display_setPixel+7
 12587  00C4' 0810'              	movf	??_display_setPixel+4,w
 12588  00C5' 0712'              	addwf	??_display_setPixel+6,w
 12589  00C6' 0094'              	movwf	??_display_setPixel+8
 12590  00C7' 0811'              	movf	??_display_setPixel+5,w
 12591  00C8' 3D13'              	addwfc	??_display_setPixel+7,w
 12592  00C9' 0095'              	movwf	??_display_setPixel+9
 12593  00CA' 0800'              	movf	?___wmul,w
 12594  00CB' 0714'              	addwf	??_display_setPixel+8,w
 12595  00CC' 0086               	movwf	6
 12596  00CD' 0801'              	movf	?___wmul+1,w
 12597  00CE' 3D15'              	addwfc	??_display_setPixel+9,w
 12598  00CF' 0087               	movwf	7
 12599  00D0' 080D'              	movf	??_display_setPixel+1,w
 12600  00D1' 0681               	xorwf	1,f
 12601                           
 12602                           ;ssd1306.c: 113: }
 12603                           
 12604                           ;ssd1306.c: 112: break;
 12605  00D2' 0008               	return
 12606  00D3'                    l3668:	
 12607                           
 12608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12609                           ; Switch size 1, requested type "space"
 12610                           ; Number of cases is 1, Range of values is 0 to 0
 12611                           ; switch strategies available:
 12612                           ; Name         Instructions Cycles
 12613                           ; simple_byte            4     3 (average)
 12614                           ; direct_byte            8     6 (fixed)
 12615                           ; jumptable            260     6 (fixed)
 12616                           ;	Chosen strategy is simple_byte
 12617  00D3' 0020               	movlb	0	; select bank0
 12618  00D4' 080B'              	movf	display_setPixel@color+1,w
 12619  00D5' 3A00               	xorlw	0	; case 0
 12620  00D6' 1903               	skipnz
 12621  00D7' 2800'              	goto	l4550
 12622  00D8' 2800'              	goto	l404
 12623  00D9'                    l4550:	
 12624                           
 12625                           ; Switch size 1, requested type "space"
 12626                           ; Number of cases is 3, Range of values is 0 to 2
 12627                           ; switch strategies available:
 12628                           ; Name         Instructions Cycles
 12629                           ; simple_byte           10     6 (average)
 12630                           ; direct_byte           12     6 (fixed)
 12631                           ; jumptable            260     6 (fixed)
 12632                           ;	Chosen strategy is simple_byte
 12633  00D9' 080A'              	movf	display_setPixel@color,w
 12634  00DA' 3A00               	xorlw	0	; case 0
 12635  00DB' 1903               	skipnz
 12636  00DC' 2800'              	goto	l3662
 12637  00DD' 3A01               	xorlw	1	; case 1
 12638  00DE' 1903               	skipnz
 12639  00DF' 2800'              	goto	l3660
 12640  00E0' 3A03               	xorlw	3	; case 2
 12641  00E1' 1903               	skipnz
 12642  00E2' 2800'              	goto	l3664
 12643  00E3' 2800'              	goto	l404
 12644  00E4'                    l404:	
 12645  00E4' 0008               	return
 12646  00E5'                    __end_of_display_setPixel:	
 12647                           
 12648                           	psect	text24
 12649  0000'                    __ptext24:	
 12650 ;; *************** function _display_update *****************
 12651 ;; Defined at:
 12652 ;;		line 148 in file "ssd1306.c"
 12653 ;; Parameters:    Size  Location     Type
 12654 ;;		None
 12655 ;; Auto vars:     Size  Location     Type
 12656 ;;  page            1   17[BANK0 ] unsigned char 
 12657 ;;  cmdbuf          5   12[BANK0 ] unsigned char [5]
 12658 ;; Return value:  Size  Location     Type
 12659 ;;                  1    wreg      void 
 12660 ;; Registers used:
 12661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12662 ;; Tracked objects:
 12663 ;;		On entry : 0/0
 12664 ;;		On exit  : 0/0
 12665 ;;		Unchanged: 0/0
 12666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12668 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12669 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12670 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12671 ;;Total ram usage:       12 bytes
 12672 ;; Hardware stack levels used:    1
 12673 ;; Hardware stack levels required when called:    4
 12674 ;; This function calls:
 12675 ;;		___wmul
 12676 ;;		_oled_sendCmd
 12677 ;; This function is called by:
 12678 ;;		_main
 12679 ;; This function uses a non-reentrant model
 12680 ;;
 12681                           
 12682                           
 12683                           ;psect for function _display_update
 12684  0000'                    _display_update:	
 12685                           
 12686                           ;ssd1306.c: 149: uint8_t cmdbuf[] = {
 12687                           ;ssd1306.c: 150: (0b00000000),
 12688                           ;ssd1306.c: 151: 0x21,
 12689                           ;ssd1306.c: 152: 0,
 12690                           ;ssd1306.c: 153: 128-1,
 12691                           ;ssd1306.c: 154: 0xB0
 12692                           ;ssd1306.c: 155: };
 12693                           
 12694                           ;incstack = 0
 12695                           ; Regs used in _display_update: [allreg]
 12696  0000' 3000'              	movlw	low display_update@F7624
 12697  0001' 0086               	movwf	6
 12698  0002' 3000'              	movlw	high display_update@F7624
 12699  0003' 0087               	movwf	7
 12700  0004' 3000'              	movlw	low display_update@cmdbuf
 12701  0005' 0084               	movwf	4
 12702  0006' 3000'              	movlw	high display_update@cmdbuf
 12703  0007' 0085               	movwf	5
 12704  0008' 3005               	movlw	5
 12705  0009' 0020               	movlb	0	; select bank0
 12706  000A' 0086'              	movwf	??_display_update
 12707  000B'                    u4110:	
 12708  000B' 0016               	moviw fsr1++
 12709  000C' 001A               	movwi fsr0++
 12710  000D' 0B86'              	decfsz	??_display_update,f
 12711  000E' 2800'              	goto	u4110
 12712                           
 12713                           ;ssd1306.c: 156: for(uint8_t page = 0; page < 8; page++){
 12714  000F' 0191'              	clrf	display_update@page
 12715  0010'                    L11:	
 12716  0010' 3008               	movlw	8
 12717  0011' 0211'              	subwf	display_update@page,w
 12718  0012' 1803               	btfsc	3,0
 12719  0013' 0008               	return
 12720                           
 12721                           ;ssd1306.c: 157: cmdbuf[4] = 0xB0 | page;
 12722  0014' 0811'              	movf	display_update@page,w
 12723  0015' 38B0               	iorlw	176
 12724  0016' 0086'              	movwf	??_display_update
 12725  0017' 0806'              	movf	??_display_update,w
 12726  0018' 0090'              	movwf	display_update@cmdbuf+4
 12727                           
 12728                           ;ssd1306.c: 158: oled_sendCmd(cmdbuf, sizeof(cmdbuf));
 12729  0019' 3000'              	movlw	low display_update@cmdbuf
 12730  001A' 0080'              	movwf	_oled_sendCmd$0
 12731  001B' 3000'              	movlw	high display_update@cmdbuf
 12732  001C' 0081'              	movwf	_oled_sendCmd$0+1
 12733  001D' 3005               	movlw	5
 12734  001E' 0086'              	movwf	??_display_update
 12735  001F' 0806'              	movf	??_display_update,w
 12736  0020' 0082'              	movwf	_oled_sendCmd$1
 12737  0021' 3180' 2000' 3180'  	fcall	_oled_sendCmd
 12738                           
 12739                           ;ssd1306.c: 159: frameBuff[page][0] = (0b01000000);
 12740  0024' 0020               	movlb	0	; select bank0
 12741  0025' 0811'              	movf	display_update@page,w
 12742  0026' 0086'              	movwf	??_display_update
 12743  0027' 0187'              	clrf	??_display_update+1
 12744  0028' 0806'              	movf	??_display_update,w
 12745  0029' 0080'              	movwf	___wmul@multiplier
 12746  002A' 0807'              	movf	??_display_update+1,w
 12747  002B' 0081'              	movwf	___wmul@multiplier+1
 12748  002C' 3081               	movlw	129
 12749  002D' 0082'              	movwf	___wmul@multiplicand
 12750  002E' 3000               	movlw	0
 12751  002F' 0083'              	movwf	___wmul@multiplicand+1
 12752  0030' 3180' 2000' 3180'  	fcall	___wmul
 12753  0033' 30E8               	movlw	232
 12754  0034' 0020               	movlb	0	; select bank0
 12755  0035' 0088'              	movwf	??_display_update+2
 12756  0036' 3023               	movlw	35
 12757  0037' 0089'              	movwf	??_display_update+3
 12758  0038' 0800'              	movf	?___wmul,w
 12759  0039' 0708'              	addwf	??_display_update+2,w
 12760  003A' 008A'              	movwf	??_display_update+4
 12761  003B' 0801'              	movf	?___wmul+1,w
 12762  003C' 3D09'              	addwfc	??_display_update+3,w
 12763  003D' 008B'              	movwf	??_display_update+5
 12764  003E' 080A'              	movf	??_display_update+4,w
 12765  003F' 0086               	movwf	6
 12766  0040' 080B'              	movf	??_display_update+5,w
 12767  0041' 0087               	movwf	7
 12768  0042' 3040               	movlw	64
 12769  0043' 0081               	movwf	1
 12770                           
 12771                           ;ssd1306.c: 160: oled_sendCmd(frameBuff[page], sizeof(frameBuff[1]));
 12772  0044' 0811'              	movf	display_update@page,w
 12773  0045' 0086'              	movwf	??_display_update
 12774  0046' 0187'              	clrf	??_display_update+1
 12775  0047' 0806'              	movf	??_display_update,w
 12776  0048' 0080'              	movwf	___wmul@multiplier
 12777  0049' 0807'              	movf	??_display_update+1,w
 12778  004A' 0081'              	movwf	___wmul@multiplier+1
 12779  004B' 3081               	movlw	129
 12780  004C' 0082'              	movwf	___wmul@multiplicand
 12781  004D' 3000               	movlw	0
 12782  004E' 0083'              	movwf	___wmul@multiplicand+1
 12783  004F' 3180' 2000' 3180'  	fcall	___wmul
 12784  0052' 30E8               	movlw	232
 12785  0053' 0020               	movlb	0	; select bank0
 12786  0054' 0088'              	movwf	??_display_update+2
 12787  0055' 3023               	movlw	35
 12788  0056' 0089'              	movwf	??_display_update+3
 12789  0057' 0800'              	movf	?___wmul,w
 12790  0058' 0708'              	addwf	??_display_update+2,w
 12791  0059' 0080'              	movwf	_oled_sendCmd$0
 12792  005A' 0801'              	movf	?___wmul+1,w
 12793  005B' 3D09'              	addwfc	??_display_update+3,w
 12794  005C' 0081'              	movwf	_oled_sendCmd$0+1
 12795  005D' 3081               	movlw	129
 12796  005E' 008A'              	movwf	??_display_update+4
 12797  005F' 080A'              	movf	??_display_update+4,w
 12798  0060' 0082'              	movwf	_oled_sendCmd$1
 12799  0061' 3180' 2000' 3180'  	fcall	_oled_sendCmd
 12800  0064' 3001               	movlw	1
 12801  0065' 0020               	movlb	0	; select bank0
 12802  0066' 0086'              	movwf	??_display_update
 12803  0067' 0806'              	movf	??_display_update,w
 12804  0068' 0791'              	addwf	display_update@page,f
 12805  0069' 2800'              	goto	L11
 12806  006A'                    __end_of_display_update:	
 12807                           
 12808                           	psect	text25
 12809  0000'                    __ptext25:	
 12810 ;; *************** function _display_stopscroll *****************
 12811 ;; Defined at:
 12812 ;;		line 226 in file "ssd1306.c"
 12813 ;; Parameters:    Size  Location     Type
 12814 ;;		None
 12815 ;; Auto vars:     Size  Location     Type
 12816 ;;  cmdbuf          2    1[BANK0 ] unsigned char [2]
 12817 ;; Return value:  Size  Location     Type
 12818 ;;                  1    wreg      void 
 12819 ;; Registers used:
 12820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12821 ;; Tracked objects:
 12822 ;;		On entry : 0/0
 12823 ;;		On exit  : 0/0
 12824 ;;		Unchanged: 0/0
 12825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12829 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12830 ;;Total ram usage:        3 bytes
 12831 ;; Hardware stack levels used:    1
 12832 ;; Hardware stack levels required when called:    4
 12833 ;; This function calls:
 12834 ;;		_oled_sendCmd
 12835 ;; This function is called by:
 12836 ;;		_main
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           
 12841                           ;psect for function _display_stopscroll
 12842  0000'                    _display_stopscroll:	
 12843                           
 12844                           ;ssd1306.c: 228: uint8_t cmdbuf[] = {
 12845                           ;ssd1306.c: 229: (0b00000000),
 12846                           ;ssd1306.c: 230: 0x2E
 12847                           ;ssd1306.c: 231: };
 12848                           
 12849                           ;incstack = 0
 12850                           ; Regs used in _display_stopscroll: [allreg]
 12851  0000' 0022               	movlb	2	; select bank2
 12852  0001' 0800'              	movf	(display_stopscroll@F7644+1)^(0+256),w
 12853  0002' 0020               	movlb	0	; select bank0
 12854  0003' 0082'              	movwf	display_stopscroll@cmdbuf+1
 12855  0004' 0022               	movlb	2	; select bank2
 12856  0005' 0800'              	movf	display_stopscroll@F7644^(0+256),w
 12857  0006' 0020               	movlb	0	; select bank0
 12858  0007' 0081'              	movwf	display_stopscroll@cmdbuf
 12859                           
 12860                           ;ssd1306.c: 232: oled_sendCmd(cmdbuf, sizeof(cmdbuf));
 12861  0008' 3000'              	movlw	low display_stopscroll@cmdbuf
 12862  0009' 0080'              	movwf	_oled_sendCmd$0
 12863  000A' 3000'              	movlw	high display_stopscroll@cmdbuf
 12864  000B' 0081'              	movwf	_oled_sendCmd$0+1
 12865  000C' 3002               	movlw	2
 12866  000D' 0080'              	movwf	??_display_stopscroll
 12867  000E' 0800'              	movf	??_display_stopscroll,w
 12868  000F' 0082'              	movwf	_oled_sendCmd$1
 12869  0010' 3180' 2000' 3180'  	fcall	_oled_sendCmd
 12870  0013' 0008               	return
 12871  0014'                    __end_of_display_stopscroll:	
 12872                           
 12873                           	psect	text26
 12874  0000'                    __ptext26:	
 12875 ;; *************** function _display_scroll *****************
 12876 ;; Defined at:
 12877 ;;		line 235 in file "ssd1306.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;  start           1    wreg     enum E7504
 12880 ;;  end             1    0[BANK0 ] enum E7504
 12881 ;;  dir             1    1[BANK0 ] enum E7490
 12882 ;;  speed           1    2[BANK0 ] enum E7494
 12883 ;; Auto vars:     Size  Location     Type
 12884 ;;  start           1   13[BANK0 ] enum E7504
 12885 ;;  cmdbuf          9    4[BANK0 ] unsigned char [9]
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      void 
 12888 ;; Registers used:
 12889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12895 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12896 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12898 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12899 ;;Total ram usage:       14 bytes
 12900 ;; Hardware stack levels used:    1
 12901 ;; Hardware stack levels required when called:    4
 12902 ;; This function calls:
 12903 ;;		_oled_sendCmd
 12904 ;; This function is called by:
 12905 ;;		_main
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909                           
 12910                           ;psect for function _display_scroll
 12911  0000'                    _display_scroll:	
 12912                           
 12913                           ;incstack = 0
 12914                           ; Regs used in _display_scroll: [allreg]
 12915                           ;display_scroll@start stored from wreg
 12916  0000' 0020               	movlb	0	; select bank0
 12917  0001' 008D'              	movwf	display_scroll@start
 12918                           
 12919                           ;ssd1306.c: 237: uint8_t cmdbuf[] = {
 12920                           ;ssd1306.c: 238: (0b00000000),
 12921                           ;ssd1306.c: 239: 0,
 12922                           ;ssd1306.c: 240: 0x00,
 12923                           ;ssd1306.c: 241: 0,
 12924                           ;ssd1306.c: 242: 0,
 12925                           ;ssd1306.c: 243: 0,
 12926                           ;ssd1306.c: 244: 0x00,
 12927                           ;ssd1306.c: 245: 0xFF,
 12928                           ;ssd1306.c: 246: 0x2F
 12929                           ;ssd1306.c: 247: };
 12930  0002' 3000'              	movlw	low display_scroll@F7650
 12931  0003' 0086               	movwf	6
 12932  0004' 3000'              	movlw	high display_scroll@F7650
 12933  0005' 0087               	movwf	7
 12934  0006' 3000'              	movlw	low display_scroll@cmdbuf
 12935  0007' 0084               	movwf	4
 12936  0008' 3000'              	movlw	high display_scroll@cmdbuf
 12937  0009' 0085               	movwf	5
 12938  000A' 3009               	movlw	9
 12939  000B' 0083'              	movwf	??_display_scroll
 12940  000C'                    u4140:	
 12941  000C' 0016               	moviw fsr1++
 12942  000D' 001A               	movwi fsr0++
 12943  000E' 0B83'              	decfsz	??_display_scroll,f
 12944  000F' 2800'              	goto	u4140
 12945                           
 12946                           ;ssd1306.c: 248: cmdbuf[1] = dir;
 12947  0010' 0801'              	movf	display_scroll@dir,w
 12948  0011' 0083'              	movwf	??_display_scroll
 12949  0012' 0803'              	movf	??_display_scroll,w
 12950  0013' 0085'              	movwf	display_scroll@cmdbuf+1
 12951                           
 12952                           ;ssd1306.c: 249: cmdbuf[3] = start;
 12953  0014' 080D'              	movf	display_scroll@start,w
 12954  0015' 0083'              	movwf	??_display_scroll
 12955  0016' 0803'              	movf	??_display_scroll,w
 12956  0017' 0087'              	movwf	display_scroll@cmdbuf+3
 12957                           
 12958                           ;ssd1306.c: 250: cmdbuf[4] = speed;
 12959  0018' 0802'              	movf	display_scroll@speed,w
 12960  0019' 0083'              	movwf	??_display_scroll
 12961  001A' 0803'              	movf	??_display_scroll,w
 12962  001B' 0088'              	movwf	display_scroll@cmdbuf+4
 12963                           
 12964                           ;ssd1306.c: 251: cmdbuf[5] = end;
 12965  001C' 0800'              	movf	display_scroll@end,w
 12966  001D' 0083'              	movwf	??_display_scroll
 12967  001E' 0803'              	movf	??_display_scroll,w
 12968  001F' 0089'              	movwf	display_scroll@cmdbuf+5
 12969                           
 12970                           ;ssd1306.c: 252: oled_sendCmd(cmdbuf, sizeof(cmdbuf));
 12971  0020' 3000'              	movlw	low display_scroll@cmdbuf
 12972  0021' 0080'              	movwf	_oled_sendCmd$0
 12973  0022' 3000'              	movlw	high display_scroll@cmdbuf
 12974  0023' 0081'              	movwf	_oled_sendCmd$0+1
 12975  0024' 3009               	movlw	9
 12976  0025' 0083'              	movwf	??_display_scroll
 12977  0026' 0803'              	movf	??_display_scroll,w
 12978  0027' 0082'              	movwf	_oled_sendCmd$1
 12979  0028' 3180' 2000' 3180'  	fcall	_oled_sendCmd
 12980  002B' 0008               	return
 12981  002C'                    __end_of_display_scroll:	
 12982                           
 12983                           	psect	text27
 12984  0000'                    __ptext27:	
 12985 ;; *************** function _display_invert *****************
 12986 ;; Defined at:
 12987 ;;		line 138 in file "ssd1306.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;  invert          1    wreg     unsigned char 
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;  invert          1    1[BANK0 ] unsigned char 
 12992 ;;  cmdbuf          2    2[BANK0 ] unsigned char [2]
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  1    wreg      void 
 12995 ;; Registers used:
 12996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13003 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13004 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13005 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13006 ;;Total ram usage:        6 bytes
 13007 ;; Hardware stack levels used:    1
 13008 ;; Hardware stack levels required when called:    4
 13009 ;; This function calls:
 13010 ;;		_oled_sendCmd
 13011 ;; This function is called by:
 13012 ;;		_main
 13013 ;; This function uses a non-reentrant model
 13014 ;;
 13015                           
 13016                           
 13017                           ;psect for function _display_invert
 13018  0000'                    _display_invert:	
 13019                           
 13020                           ;incstack = 0
 13021                           ; Regs used in _display_invert: [allreg]
 13022                           ;display_invert@invert stored from wreg
 13023  0000' 0020               	movlb	0	; select bank0
 13024  0001' 0081'              	movwf	display_invert@invert
 13025                           
 13026                           ;ssd1306.c: 140: uint8_t cmdbuf[] = {
 13027                           ;ssd1306.c: 141: (0b00000000),
 13028                           ;ssd1306.c: 142: 0
 13029                           ;ssd1306.c: 143: };
 13030  0002' 0022               	movlb	2	; select bank2
 13031  0003' 0800'              	movf	(display_invert@F7621+1)^(0+256),w
 13032  0004' 0020               	movlb	0	; select bank0
 13033  0005' 0083'              	movwf	display_invert@cmdbuf+1
 13034  0006' 0022               	movlb	2	; select bank2
 13035  0007' 0800'              	movf	display_invert@F7621^(0+256),w
 13036  0008' 0020               	movlb	0	; select bank0
 13037  0009' 0082'              	movwf	display_invert@cmdbuf
 13038                           
 13039                           ;ssd1306.c: 144: cmdbuf[1] = invert ? 0xA7 : 0xA6;
 13040  000A' 0801'              	movf	display_invert@invert,w
 13041  000B' 1D03               	btfss	3,2
 13042  000C' 2800'              	goto	l4134
 13043  000D' 30A6               	movlw	166
 13044  000E' 2800'              	goto	L12
 13045  000F'                    l4134:	
 13046  000F' 30A7               	movlw	167
 13047  0010'                    L12:	
 13048  0010' 0084'              	movwf	_display_invert$761
 13049  0011' 3000               	movlw	0
 13050  0012' 0085'              	movwf	_display_invert$761+1
 13051  0013' 0804'              	movf	_display_invert$761,w
 13052  0014' 0080'              	movwf	??_display_invert
 13053  0015' 0800'              	movf	??_display_invert,w
 13054  0016' 0083'              	movwf	display_invert@cmdbuf+1
 13055                           
 13056                           ;ssd1306.c: 145: oled_sendCmd(cmdbuf, sizeof(cmdbuf));
 13057  0017' 3000'              	movlw	low display_invert@cmdbuf
 13058  0018' 0080'              	movwf	_oled_sendCmd$0
 13059  0019' 3000'              	movlw	high display_invert@cmdbuf
 13060  001A' 0081'              	movwf	_oled_sendCmd$0+1
 13061  001B' 3002               	movlw	2
 13062  001C' 0080'              	movwf	??_display_invert
 13063  001D' 0800'              	movf	??_display_invert,w
 13064  001E' 0082'              	movwf	_oled_sendCmd$1
 13065  001F' 3180' 2000' 3180'  	fcall	_oled_sendCmd
 13066  0022' 0008               	return
 13067  0023'                    __end_of_display_invert:	
 13068                           
 13069                           	psect	text28
 13070  0000'                    __ptext28:	
 13071 ;; *************** function _display_init *****************
 13072 ;; Defined at:
 13073 ;;		line 42 in file "ssd1306.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;		None
 13076 ;; Auto vars:     Size  Location     Type
 13077 ;;  cmdbuf         26    5[BANK0 ] unsigned char [26]
 13078 ;; Return value:  Size  Location     Type
 13079 ;;                  1    wreg      void 
 13080 ;; Registers used:
 13081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13082 ;; Tracked objects:
 13083 ;;		On entry : 0/0
 13084 ;;		On exit  : 0/0
 13085 ;;		Unchanged: 0/0
 13086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13088 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13089 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13090 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13091 ;;Total ram usage:       27 bytes
 13092 ;; Hardware stack levels used:    1
 13093 ;; Hardware stack levels required when called:    4
 13094 ;; This function calls:
 13095 ;;		_gfx_init
 13096 ;;		_oled_sendCmd
 13097 ;; This function is called by:
 13098 ;;		_main
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102                           
 13103                           ;psect for function _display_init
 13104  0000'                    _display_init:	
 13105                           
 13106                           ;ssd1306.c: 45: gfx_init( 128, 64 );
 13107                           
 13108                           ;incstack = 0
 13109                           ; Regs used in _display_init: [allreg]
 13110  0000' 3080               	movlw	128
 13111  0001' 0020               	movlb	0	; select bank0
 13112  0002' 0080'              	movwf	gfx_init@width
 13113  0003' 3000               	movlw	0
 13114  0004' 0081'              	movwf	gfx_init@width+1
 13115  0005' 3040               	movlw	64
 13116  0006' 0082'              	movwf	gfx_init@height
 13117  0007' 3000               	movlw	0
 13118  0008' 0083'              	movwf	gfx_init@height+1
 13119  0009' 3180' 2000' 3180'  	fcall	_gfx_init
 13120                           
 13121                           ;ssd1306.c: 47: uint8_t cmdbuf[] = {
 13122                           ;ssd1306.c: 48: 0x00,
 13123                           ;ssd1306.c: 49: 0xAE,
 13124                           ;ssd1306.c: 50: 0xD5,
 13125                           ;ssd1306.c: 51: 0x80,
 13126                           ;ssd1306.c: 52: 0xA8,
 13127                           ;ssd1306.c: 53: 0x3f,
 13128                           ;ssd1306.c: 54: 0xD3,
 13129                           ;ssd1306.c: 55: 0x00,
 13130                           ;ssd1306.c: 56: 0x40 | 0x0,
 13131                           ;ssd1306.c: 57: 0x8D,
 13132                           ;ssd1306.c: 58: 0x14,
 13133                           ;ssd1306.c: 59: 0x20,
 13134                           ;ssd1306.c: 60: 0x00,
 13135                           ;ssd1306.c: 61: 0xA0 | 0x1,
 13136                           ;ssd1306.c: 62: 0xC8,
 13137                           ;ssd1306.c: 63: 0xDA,
 13138                           ;ssd1306.c: 64: 0x12,
 13139                           ;ssd1306.c: 65: 0x81,
 13140                           ;ssd1306.c: 66: 0xcf,
 13141                           ;ssd1306.c: 67: 0xD9,
 13142                           ;ssd1306.c: 68: 0xf1,
 13143                           ;ssd1306.c: 69: 0xDB,
 13144  000C' 3000'              	movlw	low display_init@F7608
 13145  000D' 0086               	movwf	6
 13146  000E' 3000'              	movlw	high display_init@F7608
 13147  000F' 0087               	movwf	7
 13148  0010' 3000'              	movlw	low display_init@cmdbuf
 13149  0011' 0084               	movwf	4
 13150  0012' 3000'              	movlw	high display_init@cmdbuf
 13151  0013' 0085               	movwf	5
 13152  0014' 301A               	movlw	26
 13153  0015' 0020               	movlb	0	; select bank0
 13154  0016' 0084'              	movwf	??_display_init
 13155  0017'                    u4060:	
 13156  0017' 0016               	moviw fsr1++
 13157  0018' 001A               	movwi fsr0++
 13158  0019' 0B84'              	decfsz	??_display_init,f
 13159  001A' 2800'              	goto	u4060
 13160                           
 13161                           ;ssd1306.c: 76: oled_sendCmd(cmdbuf, sizeof(cmdbuf));
 13162  001B' 3000'              	movlw	low display_init@cmdbuf
 13163  001C' 0080'              	movwf	_oled_sendCmd$0
 13164  001D' 3000'              	movlw	high display_init@cmdbuf
 13165  001E' 0081'              	movwf	_oled_sendCmd$0+1
 13166  001F' 301A               	movlw	26
 13167  0020' 0084'              	movwf	??_display_init
 13168  0021' 0804'              	movf	??_display_init,w
 13169  0022' 0082'              	movwf	_oled_sendCmd$1
 13170  0023' 3180' 2000' 3180'  	fcall	_oled_sendCmd
 13171  0026' 0008               	return
 13172  0027'                    __end_of_display_init:	
 13173                           
 13174                           	psect	text29
 13175  0000'                    __ptext29:	
 13176 ;; *************** function _gfx_init *****************
 13177 ;; Defined at:
 13178 ;;		line 268 in file "ssd1306.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;  width           2    0[BANK0 ] int 
 13181 ;;  height          2    2[BANK0 ] int 
 13182 ;; Auto vars:     Size  Location     Type
 13183 ;;		None
 13184 ;; Return value:  Size  Location     Type
 13185 ;;                  1    wreg      void 
 13186 ;; Registers used:
 13187 ;;		wreg, status,2
 13188 ;; Tracked objects:
 13189 ;;		On entry : 0/0
 13190 ;;		On exit  : 0/0
 13191 ;;		Unchanged: 0/0
 13192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13197 ;;Total ram usage:        4 bytes
 13198 ;; Hardware stack levels used:    1
 13199 ;; Hardware stack levels required when called:    3
 13200 ;; This function calls:
 13201 ;;		Nothing
 13202 ;; This function is called by:
 13203 ;;		_display_init
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           
 13208                           ;psect for function _gfx_init
 13209  0000'                    _gfx_init:	
 13210                           
 13211                           ;ssd1306.c: 269: WIDTH = width;
 13212                           
 13213                           ;incstack = 0
 13214                           ; Regs used in _gfx_init: [wreg+status,2]
 13215  0000' 0020               	movlb	0	; select bank0
 13216  0001' 0801'              	movf	gfx_init@width+1,w
 13217  0002' 0081'              	movwf	_WIDTH+1
 13218  0003' 0800'              	movf	gfx_init@width,w
 13219  0004' 0080'              	movwf	_WIDTH
 13220                           
 13221                           ;ssd1306.c: 270: HEIGHT = height;
 13222  0005' 0803'              	movf	gfx_init@height+1,w
 13223  0006' 0081'              	movwf	_HEIGHT+1
 13224  0007' 0802'              	movf	gfx_init@height,w
 13225  0008' 0080'              	movwf	_HEIGHT
 13226                           
 13227                           ;ssd1306.c: 271: _width = WIDTH;
 13228  0009' 0801'              	movf	_WIDTH+1,w
 13229  000A' 0021               	movlb	1	; select bank1
 13230  000B' 0080'              	movwf	(__width+1)^(0+128)
 13231  000C' 0020               	movlb	0	; select bank0
 13232  000D' 0800'              	movf	_WIDTH,w
 13233  000E' 0021               	movlb	1	; select bank1
 13234  000F' 0080'              	movwf	__width^(0+128)
 13235                           
 13236                           ;ssd1306.c: 272: _height = HEIGHT;
 13237  0010' 0801'              	movf	_HEIGHT+1,w
 13238  0011' 0022               	movlb	2	; select bank2
 13239  0012' 0080'              	movwf	(__height+1)^(0+256)
 13240  0013' 0800'              	movf	_HEIGHT,w
 13241  0014' 0080'              	movwf	__height^(0+256)
 13242                           
 13243                           ;ssd1306.c: 274: rotation = 0;
 13244  0015' 0182'              	clrf	_rotation
 13245                           
 13246                           ;ssd1306.c: 275: cursor_y = cursor_x = 0;
 13247  0016' 0180'              	clrf	_cursor_x^(0+256)
 13248  0017' 0180'              	clrf	(_cursor_x+1)^(0+256)
 13249  0018' 0180'              	clrf	_cursor_y^(0+256)
 13250  0019' 0180'              	clrf	(_cursor_y+1)^(0+256)
 13251                           
 13252                           ;ssd1306.c: 276: textsize = 1;
 13253  001A' 0021               	movlb	1	; select bank1
 13254  001B' 0180'              	clrf	_textsize^(0+128)
 13255  001C' 0A80'              	incf	_textsize^(0+128),f
 13256                           
 13257                           ;ssd1306.c: 277: textcolor = textbgcolor = 0xFFFF;
 13258  001D' 30FF               	movlw	255
 13259  001E' 0022               	movlb	2	; select bank2
 13260  001F' 0080'              	movwf	_textbgcolor^(0+256)
 13261  0020' 30FF               	movlw	255
 13262  0021' 0081'              	movwf	(_textbgcolor^(0+256)+1)
 13263  0022' 0800'              	movf	(_textbgcolor+1)^(0+256),w
 13264  0023' 0080'              	movwf	(_textcolor+1)^(0+256)
 13265  0024' 0800'              	movf	_textbgcolor^(0+256),w
 13266  0025' 0080'              	movwf	_textcolor^(0+256)
 13267                           
 13268                           ;ssd1306.c: 278: wrap = 1;
 13269  0026' 0180'              	clrf	_wrap^(0+256)
 13270  0027' 0A80'              	incf	_wrap^(0+256),f
 13271  0028' 0008               	return
 13272  0029'                    __end_of_gfx_init:	
 13273                           
 13274                           	psect	text30
 13275  0000'                    __ptext30:	
 13276 ;; *************** function _display_contrast *****************
 13277 ;; Defined at:
 13278 ;;		line 126 in file "ssd1306.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;  contrast        1    wreg     unsigned char 
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;  contrast        1    4[BANK0 ] unsigned char 
 13283 ;;  cmdbuf          3    1[BANK0 ] unsigned char [3]
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      void 
 13286 ;; Registers used:
 13287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13294 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13295 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13296 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13297 ;;Total ram usage:        5 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:    4
 13300 ;; This function calls:
 13301 ;;		_oled_sendCmd
 13302 ;; This function is called by:
 13303 ;;		_main
 13304 ;; This function uses a non-reentrant model
 13305 ;;
 13306                           
 13307                           
 13308                           ;psect for function _display_contrast
 13309  0000'                    _display_contrast:	
 13310                           
 13311                           ;incstack = 0
 13312                           ; Regs used in _display_contrast: [allreg]
 13313                           ;display_contrast@contrast stored from wreg
 13314  0000' 0020               	movlb	0	; select bank0
 13315  0001' 0084'              	movwf	display_contrast@contrast
 13316                           
 13317                           ;ssd1306.c: 128: uint8_t cmdbuf[] = {
 13318                           ;ssd1306.c: 129: (0b00000000),
 13319                           ;ssd1306.c: 130: 0x81,
 13320                           ;ssd1306.c: 131: 0
 13321                           ;ssd1306.c: 132: };
 13322  0002' 0022               	movlb	2	; select bank2
 13323  0003' 0800'              	movf	display_contrast@F7618^(0+256),w
 13324  0004' 0020               	movlb	0	; select bank0
 13325  0005' 0081'              	movwf	display_contrast@cmdbuf
 13326  0006' 0022               	movlb	2	; select bank2
 13327  0007' 0800'              	movf	(display_contrast@F7618+1)^(0+256),w
 13328  0008' 0020               	movlb	0	; select bank0
 13329  0009' 0082'              	movwf	display_contrast@cmdbuf+1
 13330  000A' 0022               	movlb	2	; select bank2
 13331  000B' 0800'              	movf	(display_contrast@F7618+2)^(0+256),w
 13332  000C' 0020               	movlb	0	; select bank0
 13333  000D' 0083'              	movwf	display_contrast@cmdbuf+2
 13334                           
 13335                           ;ssd1306.c: 133: cmdbuf[2] = contrast;
 13336  000E' 0804'              	movf	display_contrast@contrast,w
 13337  000F' 0080'              	movwf	??_display_contrast
 13338  0010' 0800'              	movf	??_display_contrast,w
 13339  0011' 0083'              	movwf	display_contrast@cmdbuf+2
 13340                           
 13341                           ;ssd1306.c: 134: oled_sendCmd(cmdbuf, sizeof(cmdbuf));
 13342  0012' 3000'              	movlw	low display_contrast@cmdbuf
 13343  0013' 0080'              	movwf	_oled_sendCmd$0
 13344  0014' 3000'              	movlw	high display_contrast@cmdbuf
 13345  0015' 0081'              	movwf	_oled_sendCmd$0+1
 13346  0016' 3003               	movlw	3
 13347  0017' 0080'              	movwf	??_display_contrast
 13348  0018' 0800'              	movf	??_display_contrast,w
 13349  0019' 0082'              	movwf	_oled_sendCmd$1
 13350  001A' 3180' 2000' 3180'  	fcall	_oled_sendCmd
 13351  001D' 0008               	return
 13352  001E'                    __end_of_display_contrast:	
 13353                           
 13354                           	psect	text31
 13355  0000'                    __ptext31:	
 13356 ;; *************** function _display_clear *****************
 13357 ;; Defined at:
 13358 ;;		line 116 in file "ssd1306.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;		None
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;  x               1   14[BANK0 ] unsigned char 
 13363 ;;  page            1   15[BANK0 ] unsigned char 
 13364 ;; Return value:  Size  Location     Type
 13365 ;;                  1    wreg      void 
 13366 ;; Registers used:
 13367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13368 ;; Tracked objects:
 13369 ;;		On entry : 0/0
 13370 ;;		On exit  : 0/0
 13371 ;;		Unchanged: 0/0
 13372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13374 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13375 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13376 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13377 ;;Total ram usage:       10 bytes
 13378 ;; Hardware stack levels used:    1
 13379 ;; Hardware stack levels required when called:    4
 13380 ;; This function calls:
 13381 ;;		___wmul
 13382 ;; This function is called by:
 13383 ;;		_main
 13384 ;; This function uses a non-reentrant model
 13385 ;;
 13386                           
 13387                           
 13388                           ;psect for function _display_clear
 13389  0000'                    _display_clear:	
 13390                           
 13391                           ;ssd1306.c: 117: for(uint8_t page = 0; page < 8; page++){
 13392                           
 13393                           ;incstack = 0
 13394                           ; Regs used in _display_clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13395  0000' 0020               	movlb	0	; select bank0
 13396  0001' 018F'              	clrf	display_clear@page
 13397  0002'                    L13:	
 13398  0002' 3008               	movlw	8
 13399  0003' 020F'              	subwf	display_clear@page,w
 13400  0004' 1803               	btfsc	3,0
 13401  0005' 0008               	return
 13402                           
 13403                           ;ssd1306.c: 118: for(uint8_t x = 1; x < 129; x++){
 13404  0006' 018E'              	clrf	display_clear@x
 13405  0007' 0A8E'              	incf	display_clear@x,f
 13406  0008' 3081               	movlw	129
 13407  0009' 020E'              	subwf	display_clear@x,w
 13408  000A' 1803               	btfsc	3,0
 13409  000B' 2800'              	goto	l4032
 13410  000C'                    l4026:	
 13411                           
 13412                           ;ssd1306.c: 119: frameBuff[page][x] = 0;
 13413  000C' 080E'              	movf	display_clear@x,w
 13414  000D' 0086'              	movwf	??_display_clear
 13415  000E' 0187'              	clrf	??_display_clear+1
 13416  000F' 080F'              	movf	display_clear@page,w
 13417  0010' 0088'              	movwf	??_display_clear+2
 13418  0011' 0189'              	clrf	??_display_clear+3
 13419  0012' 0808'              	movf	??_display_clear+2,w
 13420  0013' 0080'              	movwf	___wmul@multiplier
 13421  0014' 0809'              	movf	??_display_clear+3,w
 13422  0015' 0081'              	movwf	___wmul@multiplier+1
 13423  0016' 3081               	movlw	129
 13424  0017' 0082'              	movwf	___wmul@multiplicand
 13425  0018' 3000               	movlw	0
 13426  0019' 0083'              	movwf	___wmul@multiplicand+1
 13427  001A' 3180' 2000' 3180'  	fcall	___wmul
 13428  001D' 30E8               	movlw	232
 13429  001E' 0020               	movlb	0	; select bank0
 13430  001F' 008A'              	movwf	??_display_clear+4
 13431  0020' 3023               	movlw	35
 13432  0021' 008B'              	movwf	??_display_clear+5
 13433  0022' 0800'              	movf	?___wmul,w
 13434  0023' 070A'              	addwf	??_display_clear+4,w
 13435  0024' 008C'              	movwf	??_display_clear+6
 13436  0025' 0801'              	movf	?___wmul+1,w
 13437  0026' 3D0B'              	addwfc	??_display_clear+5,w
 13438  0027' 008D'              	movwf	??_display_clear+7
 13439  0028' 0806'              	movf	??_display_clear,w
 13440  0029' 070C'              	addwf	??_display_clear+6,w
 13441  002A' 0086               	movwf	6
 13442  002B' 0807'              	movf	??_display_clear+1,w
 13443  002C' 3D0D'              	addwfc	??_display_clear+7,w
 13444  002D' 0087               	movwf	7
 13445  002E' 0181               	clrf	1
 13446  002F' 3001               	movlw	1
 13447  0030' 0086'              	movwf	??_display_clear
 13448  0031' 0806'              	movf	??_display_clear,w
 13449  0032' 078E'              	addwf	display_clear@x,f
 13450  0033' 3081               	movlw	129
 13451  0034' 020E'              	subwf	display_clear@x,w
 13452  0035' 1C03               	skipc
 13453  0036' 2800'              	goto	l4026
 13454  0037'                    l4032:	
 13455                           
 13456                           ;ssd1306.c: 120: }
 13457                           ;ssd1306.c: 121: frameBuff[page][0] = (0b01000000);
 13458  0037' 080F'              	movf	display_clear@page,w
 13459  0038' 0086'              	movwf	??_display_clear
 13460  0039' 0187'              	clrf	??_display_clear+1
 13461  003A' 0806'              	movf	??_display_clear,w
 13462  003B' 0080'              	movwf	___wmul@multiplier
 13463  003C' 0807'              	movf	??_display_clear+1,w
 13464  003D' 0081'              	movwf	___wmul@multiplier+1
 13465  003E' 3081               	movlw	129
 13466  003F' 0082'              	movwf	___wmul@multiplicand
 13467  0040' 3000               	movlw	0
 13468  0041' 0083'              	movwf	___wmul@multiplicand+1
 13469  0042' 3180' 2000' 3180'  	fcall	___wmul
 13470  0045' 30E8               	movlw	232
 13471  0046' 0020               	movlb	0	; select bank0
 13472  0047' 0088'              	movwf	??_display_clear+2
 13473  0048' 3023               	movlw	35
 13474  0049' 0089'              	movwf	??_display_clear+3
 13475  004A' 0800'              	movf	?___wmul,w
 13476  004B' 0708'              	addwf	??_display_clear+2,w
 13477  004C' 008A'              	movwf	??_display_clear+4
 13478  004D' 0801'              	movf	?___wmul+1,w
 13479  004E' 3D09'              	addwfc	??_display_clear+3,w
 13480  004F' 008B'              	movwf	??_display_clear+5
 13481  0050' 080A'              	movf	??_display_clear+4,w
 13482  0051' 0086               	movwf	6
 13483  0052' 080B'              	movf	??_display_clear+5,w
 13484  0053' 0087               	movwf	7
 13485  0054' 3040               	movlw	64
 13486  0055' 0081               	movwf	1
 13487  0056' 3001               	movlw	1
 13488  0057' 0086'              	movwf	??_display_clear
 13489  0058' 0806'              	movf	??_display_clear,w
 13490  0059' 078F'              	addwf	display_clear@page,f
 13491  005A' 2800'              	goto	L13
 13492  005B'                    __end_of_display_clear:	
 13493                           
 13494                           	psect	text32
 13495  0000'                    __ptext32:	
 13496 ;; *************** function ___wmul *****************
 13497 ;; Defined at:
 13498 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13501 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;  product         2    4[BANK0 ] unsigned int 
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  2    0[BANK0 ] unsigned int 
 13506 ;; Registers used:
 13507 ;;		wreg, status,2, status,0
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13513 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13514 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13517 ;;Total ram usage:        6 bytes
 13518 ;; Hardware stack levels used:    1
 13519 ;; Hardware stack levels required when called:    3
 13520 ;; This function calls:
 13521 ;;		Nothing
 13522 ;; This function is called by:
 13523 ;;		_display_setPixel
 13524 ;;		_display_clear
 13525 ;;		_display_update
 13526 ;;		_display_line
 13527 ;;		_gfx_drawChar
 13528 ;;		_gfx_write
 13529 ;; This function uses a non-reentrant model
 13530 ;;
 13531                           
 13532                           
 13533                           ;psect for function ___wmul
 13534  0000'                    ___wmul:	
 13535                           
 13536                           ;incstack = 0
 13537                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13538  0000' 0020               	movlb	0	; select bank0
 13539  0001' 0184'              	clrf	___wmul@product
 13540  0002' 0185'              	clrf	___wmul@product+1
 13541  0003'                    l3640:	
 13542  0003' 1C00'              	btfss	___wmul@multiplier,0
 13543  0004' 2800'              	goto	l750
 13544  0005' 0802'              	movf	___wmul@multiplicand,w
 13545  0006' 0784'              	addwf	___wmul@product,f
 13546  0007' 0803'              	movf	___wmul@multiplicand+1,w
 13547  0008' 3D85'              	addwfc	___wmul@product+1,f
 13548  0009'                    l750:	
 13549  0009' 3001               	movlw	1
 13550  000A'                    u3245:	
 13551  000A' 3582'              	lslf	___wmul@multiplicand,f
 13552  000B' 0D83'              	rlf	___wmul@multiplicand+1,f
 13553  000C' 0B89               	decfsz	9,f
 13554  000D' 2800'              	goto	u3245
 13555  000E' 3001               	movlw	1
 13556  000F'                    u3255:	
 13557  000F' 3681'              	lsrf	___wmul@multiplier+1,f
 13558  0010' 0C80'              	rrf	___wmul@multiplier,f
 13559  0011' 0B89               	decfsz	9,f
 13560  0012' 2800'              	goto	u3255
 13561  0013' 0800'              	movf	___wmul@multiplier,w
 13562  0014' 0401'              	iorwf	___wmul@multiplier+1,w
 13563  0015' 1D03               	btfss	3,2
 13564  0016' 2800'              	goto	l3640
 13565  0017' 0805'              	movf	___wmul@product+1,w
 13566  0018' 0081'              	movwf	?___wmul+1
 13567  0019' 0804'              	movf	___wmul@product,w
 13568  001A' 0080'              	movwf	?___wmul
 13569  001B' 0008               	return
 13570  001C'                    __end_of___wmul:	
 13571                           
 13572                           	psect	text33
 13573  0000'                    __ptext33:	
 13574 ;; *************** function _SYSTEM_Initialize *****************
 13575 ;; Defined at:
 13576 ;;		line 77 in file "mcc_generated_files/mcc.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;		None
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;		None
 13581 ;; Return value:  Size  Location     Type
 13582 ;;                  1    wreg      void 
 13583 ;; Registers used:
 13584 ;;		wreg, status,2, status,0, pclath, cstack
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 0/0
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13594 ;;Total ram usage:        0 bytes
 13595 ;; Hardware stack levels used:    1
 13596 ;; Hardware stack levels required when called:    4
 13597 ;; This function calls:
 13598 ;;		_I2C1_Initialize
 13599 ;;		_OSCILLATOR_Initialize
 13600 ;;		_PIN_MANAGER_Initialize
 13601 ;;		_PMD_Initialize
 13602 ;;		_WDT_Initialize
 13603 ;; This function is called by:
 13604 ;;		_main
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608                           
 13609                           ;psect for function _SYSTEM_Initialize
 13610  0000'                    _SYSTEM_Initialize:	
 13611                           
 13612                           ;mcc.c: 80: PMD_Initialize();
 13613                           
 13614                           ;incstack = 0
 13615                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13616  0000' 3180' 2000' 3180'  	fcall	_PMD_Initialize
 13617                           
 13618                           ;mcc.c: 81: PIN_MANAGER_Initialize();
 13619  0003' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
 13620                           
 13621                           ;mcc.c: 82: OSCILLATOR_Initialize();
 13622  0006' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
 13623                           
 13624                           ;mcc.c: 83: WDT_Initialize();
 13625  0009' 3180' 2000' 3180'  	fcall	_WDT_Initialize
 13626                           
 13627                           ;mcc.c: 84: I2C1_Initialize();
 13628  000C' 3180' 2000'        	fcall	_I2C1_Initialize
 13629  000E' 0008               	return
 13630  000F'                    __end_of_SYSTEM_Initialize:	
 13631                           
 13632                           	psect	text34
 13633  0000'                    __ptext34:	
 13634 ;; *************** function _WDT_Initialize *****************
 13635 ;; Defined at:
 13636 ;;		line 105 in file "mcc_generated_files/mcc.c"
 13637 ;; Parameters:    Size  Location     Type
 13638 ;;		None
 13639 ;; Auto vars:     Size  Location     Type
 13640 ;;		None
 13641 ;; Return value:  Size  Location     Type
 13642 ;;                  1    wreg      void 
 13643 ;; Registers used:
 13644 ;;		wreg
 13645 ;; Tracked objects:
 13646 ;;		On entry : 0/0
 13647 ;;		On exit  : 0/0
 13648 ;;		Unchanged: 0/0
 13649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13654 ;;Total ram usage:        0 bytes
 13655 ;; Hardware stack levels used:    1
 13656 ;; Hardware stack levels required when called:    3
 13657 ;; This function calls:
 13658 ;;		Nothing
 13659 ;; This function is called by:
 13660 ;;		_SYSTEM_Initialize
 13661 ;; This function uses a non-reentrant model
 13662 ;;
 13663                           
 13664                           
 13665                           ;psect for function _WDT_Initialize
 13666  0000'                    _WDT_Initialize:	
 13667                           
 13668                           ;mcc.c: 108: WDTCON = 0x16;
 13669                           
 13670                           ;incstack = 0
 13671                           ; Regs used in _WDT_Initialize: [wreg]
 13672  0000' 3016               	movlw	22
 13673  0001' 0021               	movlb	1	; select bank1
 13674  0002' 0097               	movwf	23	;volatile
 13675  0003' 0008               	return
 13676  0004'                    __end_of_WDT_Initialize:	
 13677                           
 13678                           	psect	text35
 13679  0000'                    __ptext35:	
 13680 ;; *************** function _PMD_Initialize *****************
 13681 ;; Defined at:
 13682 ;;		line 111 in file "mcc_generated_files/mcc.c"
 13683 ;; Parameters:    Size  Location     Type
 13684 ;;		None
 13685 ;; Auto vars:     Size  Location     Type
 13686 ;;		None
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  1    wreg      void 
 13689 ;; Registers used:
 13690 ;;		status,2
 13691 ;; Tracked objects:
 13692 ;;		On entry : 0/0
 13693 ;;		On exit  : 0/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13700 ;;Total ram usage:        0 bytes
 13701 ;; Hardware stack levels used:    1
 13702 ;; Hardware stack levels required when called:    3
 13703 ;; This function calls:
 13704 ;;		Nothing
 13705 ;; This function is called by:
 13706 ;;		_SYSTEM_Initialize
 13707 ;; This function uses a non-reentrant model
 13708 ;;
 13709                           
 13710                           
 13711                           ;psect for function _PMD_Initialize
 13712  0000'                    _PMD_Initialize:	
 13713                           
 13714                           ;mcc.c: 114: PMD0 = 0x00;
 13715                           
 13716                           ;incstack = 0
 13717                           ; Regs used in _PMD_Initialize: [status,2]
 13718  0000' 0032               	movlb	18	; select bank18
 13719  0001' 0191               	clrf	17	;volatile
 13720                           
 13721                           ;mcc.c: 116: PMD1 = 0x00;
 13722  0002' 0192               	clrf	18	;volatile
 13723                           
 13724                           ;mcc.c: 118: PMD2 = 0x00;
 13725  0003' 0193               	clrf	19	;volatile
 13726                           
 13727                           ;mcc.c: 120: PMD3 = 0x00;
 13728  0004' 0194               	clrf	20	;volatile
 13729                           
 13730                           ;mcc.c: 122: PMD4 = 0x00;
 13731  0005' 0195               	clrf	21	;volatile
 13732                           
 13733                           ;mcc.c: 124: PMD5 = 0x00;
 13734  0006' 0196               	clrf	22	;volatile
 13735  0007' 0008               	return
 13736  0008'                    __end_of_PMD_Initialize:	
 13737                           
 13738                           	psect	text36
 13739  0000'                    __ptext36:	
 13740 ;; *************** function _PIN_MANAGER_Initialize *****************
 13741 ;; Defined at:
 13742 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 13743 ;; Parameters:    Size  Location     Type
 13744 ;;		None
 13745 ;; Auto vars:     Size  Location     Type
 13746 ;;		None
 13747 ;; Return value:  Size  Location     Type
 13748 ;;                  1    wreg      void 
 13749 ;; Registers used:
 13750 ;;		wreg, status,2, status,0
 13751 ;; Tracked objects:
 13752 ;;		On entry : 0/0
 13753 ;;		On exit  : 0/0
 13754 ;;		Unchanged: 0/0
 13755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13760 ;;Total ram usage:        0 bytes
 13761 ;; Hardware stack levels used:    1
 13762 ;; Hardware stack levels required when called:    3
 13763 ;; This function calls:
 13764 ;;		Nothing
 13765 ;; This function is called by:
 13766 ;;		_SYSTEM_Initialize
 13767 ;; This function uses a non-reentrant model
 13768 ;;
 13769                           
 13770                           
 13771                           ;psect for function _PIN_MANAGER_Initialize
 13772  0000'                    _PIN_MANAGER_Initialize:	
 13773                           
 13774                           ;pin_manager.c: 57: LATA = 0x00;
 13775                           
 13776                           ;incstack = 0
 13777                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 13778  0000' 0022               	movlb	2	; select bank2
 13779  0001' 018C               	clrf	12	;volatile
 13780                           
 13781                           ;pin_manager.c: 58: LATC = 0x00;
 13782  0002' 018E               	clrf	14	;volatile
 13783                           
 13784                           ;pin_manager.c: 63: TRISA = 0x37;
 13785  0003' 3037               	movlw	55
 13786  0004' 0021               	movlb	1	; select bank1
 13787  0005' 008C               	movwf	12	;volatile
 13788                           
 13789                           ;pin_manager.c: 64: TRISC = 0x3F;
 13790  0006' 303F               	movlw	63
 13791  0007' 008E               	movwf	14	;volatile
 13792                           
 13793                           ;pin_manager.c: 69: ANSELC = 0x0F;
 13794  0008' 300F               	movlw	15
 13795  0009' 0023               	movlb	3	; select bank3
 13796  000A' 008E               	movwf	14	;volatile
 13797                           
 13798                           ;pin_manager.c: 70: ANSELA = 0x37;
 13799  000B' 3037               	movlw	55
 13800  000C' 008C               	movwf	12	;volatile
 13801                           
 13802                           ;pin_manager.c: 75: WPUA = 0x00;
 13803  000D' 0024               	movlb	4	; select bank4
 13804  000E' 018C               	clrf	12	;volatile
 13805                           
 13806                           ;pin_manager.c: 76: WPUC = 0x00;
 13807  000F' 018E               	clrf	14	;volatile
 13808                           
 13809                           ;pin_manager.c: 81: ODCONA = 0x00;
 13810  0010' 0025               	movlb	5	; select bank5
 13811  0011' 018C               	clrf	12	;volatile
 13812                           
 13813                           ;pin_manager.c: 82: ODCONC = 0x00;
 13814  0012' 018E               	clrf	14	;volatile
 13815                           
 13816                           ;pin_manager.c: 89: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
 13817  0013' 003C               	movlb	28	; select bank28
 13818  0014' 0820               	movf	32,w	;volatile
 13819  0015' 39E0               	andlw	-32
 13820  0016' 3814               	iorlw	20
 13821  0017' 00A0               	movwf	32	;volatile
 13822                           
 13823                           ;pin_manager.c: 90: SSP1DATPPSbits.SSP1DATPPS = 0x15;
 13824  0018' 0821               	movf	33,w	;volatile
 13825  0019' 39E0               	andlw	-32
 13826  001A' 3815               	iorlw	21
 13827  001B' 00A1               	movwf	33	;volatile
 13828                           
 13829                           ;pin_manager.c: 91: RC4PPSbits.RC4PPS = 0x18;
 13830  001C' 003D               	movlb	29	; select bank29
 13831  001D' 0824               	movf	36,w	;volatile
 13832  001E' 39E0               	andlw	-32
 13833  001F' 3818               	iorlw	24
 13834  0020' 00A4               	movwf	36	;volatile
 13835                           
 13836                           ;pin_manager.c: 92: RC5PPSbits.RC5PPS = 0x19;
 13837  0021' 0825               	movf	37,w	;volatile
 13838  0022' 39E0               	andlw	-32
 13839  0023' 3819               	iorlw	25
 13840  0024' 00A5               	movwf	37	;volatile
 13841  0025' 0008               	return
 13842  0026'                    __end_of_PIN_MANAGER_Initialize:	
 13843                           
 13844                           	psect	text37
 13845  0000'                    __ptext37:	
 13846 ;; *************** function _OSCILLATOR_Initialize *****************
 13847 ;; Defined at:
 13848 ;;		line 87 in file "mcc_generated_files/mcc.c"
 13849 ;; Parameters:    Size  Location     Type
 13850 ;;		None
 13851 ;; Auto vars:     Size  Location     Type
 13852 ;;		None
 13853 ;; Return value:  Size  Location     Type
 13854 ;;                  1    wreg      void 
 13855 ;; Registers used:
 13856 ;;		wreg, status,2
 13857 ;; Tracked objects:
 13858 ;;		On entry : 0/0
 13859 ;;		On exit  : 0/0
 13860 ;;		Unchanged: 0/0
 13861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13866 ;;Total ram usage:        0 bytes
 13867 ;; Hardware stack levels used:    1
 13868 ;; Hardware stack levels required when called:    3
 13869 ;; This function calls:
 13870 ;;		Nothing
 13871 ;; This function is called by:
 13872 ;;		_SYSTEM_Initialize
 13873 ;; This function uses a non-reentrant model
 13874 ;;
 13875                           
 13876                           
 13877                           ;psect for function _OSCILLATOR_Initialize
 13878  0000'                    _OSCILLATOR_Initialize:	
 13879                           
 13880                           ;mcc.c: 90: OSCCON1 = 0x01;
 13881                           
 13882                           ;incstack = 0
 13883                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13884  0000' 3001               	movlw	1
 13885  0001' 0032               	movlb	18	; select bank18
 13886  0002' 0099               	movwf	25	;volatile
 13887                           
 13888                           ;mcc.c: 92: OSCCON3 = 0x00;
 13889  0003' 019B               	clrf	27	;volatile
 13890                           
 13891                           ;mcc.c: 94: OSCEN = 0x00;
 13892  0004' 019D               	clrf	29	;volatile
 13893                           
 13894                           ;mcc.c: 96: OSCFRQ = 0x06;
 13895  0005' 3006               	movlw	6
 13896  0006' 009F               	movwf	31	;volatile
 13897                           
 13898                           ;mcc.c: 98: OSCTUNE = 0x20;
 13899  0007' 3020               	movlw	32
 13900  0008' 009E               	movwf	30	;volatile
 13901  0009'                    l76:	
 13902                           ;mcc.c: 101: {
 13903                           
 13904                           ;mcc.c: 100: while(PLLR == 0)
 13905                           
 13906  0009' 181C               	btfsc	28,0	;volatile
 13907  000A' 0008               	return
 13908  000B' 2800'              	goto	l76
 13909  000C'                    __end_of_OSCILLATOR_Initialize:	
 13910                           
 13911                           	psect	text38
 13912  0000'                    __ptext38:	
 13913 ;; *************** function _I2C1_Initialize *****************
 13914 ;; Defined at:
 13915 ;;		line 196 in file "mcc_generated_files/i2c1.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;		None
 13918 ;; Auto vars:     Size  Location     Type
 13919 ;;		None
 13920 ;; Return value:  Size  Location     Type
 13921 ;;                  1    wreg      void 
 13922 ;; Registers used:
 13923 ;;		wreg, status,2
 13924 ;; Tracked objects:
 13925 ;;		On entry : 0/0
 13926 ;;		On exit  : 0/0
 13927 ;;		Unchanged: 0/0
 13928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13932 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13933 ;;Total ram usage:        1 bytes
 13934 ;; Hardware stack levels used:    1
 13935 ;; Hardware stack levels required when called:    3
 13936 ;; This function calls:
 13937 ;;		Nothing
 13938 ;; This function is called by:
 13939 ;;		_SYSTEM_Initialize
 13940 ;; This function uses a non-reentrant model
 13941 ;;
 13942                           
 13943                           
 13944                           ;psect for function _I2C1_Initialize
 13945  0000'                    _I2C1_Initialize:	
 13946                           
 13947                           ;i2c1.c: 198: i2c1_object.pTrHead = i2c1_tr_queue;
 13948                           
 13949                           ;incstack = 0
 13950                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 13951  0000' 3000'              	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 13952  0001' 0020               	movlb	0	; select bank0
 13953  0002' 0080'              	movwf	??_I2C1_Initialize
 13954  0003' 0800'              	movf	??_I2C1_Initialize,w
 13955  0004' 0021               	movlb	1	; select bank1
 13956  0005' 0080'              	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 13957                           
 13958                           ;i2c1.c: 199: i2c1_object.pTrTail = i2c1_tr_queue;
 13959  0006' 3000'              	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 13960  0007' 0020               	movlb	0	; select bank0
 13961  0008' 0080'              	movwf	??_I2C1_Initialize
 13962  0009' 0800'              	movf	??_I2C1_Initialize,w
 13963  000A' 0021               	movlb	1	; select bank1
 13964  000B' 0080'              	movwf	_i2c1_object^(0+128)
 13965                           
 13966                           ;i2c1.c: 200: i2c1_object.trStatus.s.empty = 1;
 13967  000C' 1482'              	bsf	(_i2c1_object^(0+128)+2),1
 13968                           
 13969                           ;i2c1.c: 201: i2c1_object.trStatus.s.full = 0;
 13970  000D' 1002'              	bcf	(_i2c1_object^(0+128)+2),0
 13971                           
 13972                           ;i2c1.c: 203: i2c1_object.i2cErrors = 0;
 13973  000E' 0184'              	clrf	(_i2c1_object^(0+128)+4)
 13974                           
 13975                           ;i2c1.c: 206: SSP1STAT = 0x00;
 13976  000F' 0024               	movlb	4	; select bank4
 13977  0010' 0194               	clrf	20	;volatile
 13978                           
 13979                           ;i2c1.c: 208: SSP1CON1 = 0x28;
 13980  0011' 3028               	movlw	40
 13981  0012' 0095               	movwf	21	;volatile
 13982                           
 13983                           ;i2c1.c: 210: SSP1CON3 = 0x00;
 13984  0013' 0197               	clrf	23	;volatile
 13985                           
 13986                           ;i2c1.c: 212: SSP1ADD = 0x09;
 13987  0014' 3009               	movlw	9
 13988  0015' 0092               	movwf	18	;volatile
 13989                           
 13990                           ;i2c1.c: 215: PIR1bits.SSP1IF = 0;
 13991  0016' 0020               	movlb	0	; select bank0
 13992  0017' 1191               	bcf	17,3	;volatile
 13993                           
 13994                           ;i2c1.c: 216: PIR1bits.BCL1IF = 0;
 13995  0018' 1111               	bcf	17,2	;volatile
 13996                           
 13997                           ;i2c1.c: 219: PIE1bits.SSP1IE = 1;
 13998  0019' 0021               	movlb	1	; select bank1
 13999  001A' 1591               	bsf	17,3	;volatile
 14000                           
 14001                           ;i2c1.c: 220: PIE1bits.BCL1IE = 1;
 14002  001B' 1511               	bsf	17,2	;volatile
 14003  001C' 0008               	return
 14004  001D'                    __end_of_I2C1_Initialize:	
 14005                           
 14006                           	psect	intentry
 14007  0000'                    __pintentry:	
 14008 ;; *************** function _INTERRUPT_InterruptManager *****************
 14009 ;; Defined at:
 14010 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 14011 ;; Parameters:    Size  Location     Type
 14012 ;;		None
 14013 ;; Auto vars:     Size  Location     Type
 14014 ;;		None
 14015 ;; Return value:  Size  Location     Type
 14016 ;;                  1    wreg      void 
 14017 ;; Registers used:
 14018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14019 ;; Tracked objects:
 14020 ;;		On entry : 0/0
 14021 ;;		On exit  : 0/0
 14022 ;;		Unchanged: 0/0
 14023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14028 ;;Total ram usage:        1 bytes
 14029 ;; Hardware stack levels used:    1
 14030 ;; Hardware stack levels required when called:    2
 14031 ;; This function calls:
 14032 ;;		_I2C1_BusCollisionISR
 14033 ;;		_I2C1_ISR
 14034 ;; This function is called by:
 14035 ;;		Interrupt level 1
 14036 ;; This function uses a non-reentrant model
 14037 ;;
 14038                           
 14039  0000'                    _INTERRUPT_InterruptManager:	
 14040                           
 14041                           ;incstack = 0
 14042  0000' 147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14043                           
 14044                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14045  0001' 3180'              	pagesel	$
 14046  0002' 0020               	movlb	0	; select bank0
 14047  0003' 087F               	movf	127,w
 14048  0004' 0086'              	movwf	??_INTERRUPT_InterruptManager
 14049                           
 14050                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
 14051  0005' 1F0B               	btfss	11,6	;volatile
 14052  0006' 2800'              	goto	i1l106
 14053                           
 14054                           ;interrupt_manager.c: 55: {
 14055                           ;interrupt_manager.c: 56: if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
 14056  0007' 0021               	movlb	1	; select bank1
 14057  0008' 1D11               	btfss	17,2	;volatile
 14058  0009' 2800'              	goto	i1l101
 14059  000A' 0020               	movlb	0	; select bank0
 14060  000B' 1D11               	btfss	17,2	;volatile
 14061  000C' 2800'              	goto	i1l101
 14062                           
 14063                           ;interrupt_manager.c: 57: {
 14064                           ;interrupt_manager.c: 58: I2C1_BusCollisionISR();
 14065  000D' 3180' 2000' 3180'  	fcall	_I2C1_BusCollisionISR
 14066                           
 14067                           ;interrupt_manager.c: 59: }
 14068  0010' 2800'              	goto	i1l106
 14069  0011'                    i1l101:	
 14070                           
 14071                           ;interrupt_manager.c: 60: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 14072  0011' 0021               	movlb	1	; select bank1
 14073  0012' 1D91               	btfss	17,3	;volatile
 14074  0013' 2800'              	goto	i1l106
 14075  0014' 0020               	movlb	0	; select bank0
 14076  0015' 1D91               	btfss	17,3	;volatile
 14077  0016' 2800'              	goto	i1l106
 14078                           
 14079                           ;interrupt_manager.c: 61: {
 14080                           ;interrupt_manager.c: 62: I2C1_ISR();
 14081  0017' 3180' 2000'        	fcall	_I2C1_ISR
 14082  0019'                    i1l106:	
 14083                           ;interrupt_manager.c: 69: else
 14084                           ;interrupt_manager.c: 70: {
 14085                           
 14086                           ;interrupt_manager.c: 67: }
 14087                           ;interrupt_manager.c: 68: }
 14088                           
 14089                           ;interrupt_manager.c: 64: else
 14090                           ;interrupt_manager.c: 65: {
 14091                           
 14092                           ;interrupt_manager.c: 63: }
 14093                           
 14094  0019' 0806'              	movf	??_INTERRUPT_InterruptManager,w
 14095  001A' 0020               	movlb	0	; select bank0
 14096  001B' 00FF               	movwf	127
 14097  001C' 107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14098  001D' 0009               	retfie
 14099  001E'                    __end_of_INTERRUPT_InterruptManager:	
 14100                           
 14101                           	psect	text40
 14102  0000'                    __ptext40:	
 14103 ;; *************** function _I2C1_ISR *****************
 14104 ;; Defined at:
 14105 ;;		line 233 in file "mcc_generated_files/i2c1.c"
 14106 ;; Parameters:    Size  Location     Type
 14107 ;;		None
 14108 ;; Auto vars:     Size  Location     Type
 14109 ;;		None
 14110 ;; Return value:  Size  Location     Type
 14111 ;;                  1    wreg      void 
 14112 ;; Registers used:
 14113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14114 ;; Tracked objects:
 14115 ;;		On entry : 0/0
 14116 ;;		On exit  : 0/0
 14117 ;;		Unchanged: 0/0
 14118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14121 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14123 ;;Total ram usage:        4 bytes
 14124 ;; Hardware stack levels used:    1
 14125 ;; Hardware stack levels required when called:    1
 14126 ;; This function calls:
 14127 ;;		_I2C1_FunctionComplete
 14128 ;;		_I2C1_Stop
 14129 ;; This function is called by:
 14130 ;;		_INTERRUPT_InterruptManager
 14131 ;; This function uses a non-reentrant model
 14132 ;;
 14133                           
 14134                           
 14135                           ;psect for function _I2C1_ISR
 14136  0000'                    _I2C1_ISR:	
 14137                           
 14138                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
 14139                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
 14140                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
 14141                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
 14142                           ;i2c1.c: 241: PIR1bits.SSP1IF = 0;
 14143                           
 14144                           ;incstack = 0
 14145                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14146  0000' 0020               	movlb	0	; select bank0
 14147  0001' 1191               	bcf	17,3	;volatile
 14148                           
 14149                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
 14150  0002' 0024               	movlb	4	; select bank4
 14151  0003' 1F95               	btfss	21,7	;volatile
 14152  0004' 2800'              	goto	i1l3036
 14153                           
 14154                           ;i2c1.c: 246: {
 14155                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
 14156  0005' 1395               	bcf	21,7	;volatile
 14157                           
 14158                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
 14159  0006' 0021               	movlb	1	; select bank1
 14160  0007' 0180'              	clrf	_i2c1_state^(0+128)
 14161                           
 14162                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 14163  0008' 0803'              	movf	_p_i2c1_current,w
 14164  0009' 3E02               	addlw	2
 14165  000A' 0086               	movwf	6
 14166  000B' 3001               	movlw	1	; select bank2/3
 14167  000C' 0087               	movwf	7
 14168  000D' 0801               	movf	1,w
 14169  000E' 0086               	movwf	6
 14170  000F' 0187               	clrf	7
 14171  0010' 0181               	clrf	1
 14172  0011' 0A81               	incf	1,f
 14173                           
 14174                           ;i2c1.c: 253: p_i2c1_current = (0);
 14175  0012' 0183'              	clrf	_p_i2c1_current
 14176                           
 14177                           ;i2c1.c: 255: return;
 14178  0013' 0008               	return
 14179  0014'                    i1l166:	
 14180                           ;i2c1.c: 260: {
 14181                           ;i2c1.c: 261: case S_MASTER_IDLE:
 14182                           
 14183                           ;i2c1.c: 256: }
 14184                           ;i2c1.c: 259: switch(i2c1_state)
 14185                           
 14186                           
 14187                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
 14188  0014' 1882'              	btfsc	(_i2c1_object^(0+128)+2),1
 14189  0015' 0008               	return
 14190                           
 14191                           ;i2c1.c: 264: {
 14192                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
 14193  0016' 0800'              	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14194  0017' 0082'              	movwf	??_I2C1_ISR
 14195  0018' 0802'              	movf	??_I2C1_ISR,w
 14196  0019' 0083'              	movwf	_p_i2c1_current
 14197                           
 14198                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
 14199  001A' 0800'              	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14200  001B' 0086               	movwf	6
 14201  001C' 3001               	movlw	1	; select bank2/3
 14202  001D' 0087               	movwf	7
 14203  001E' 0801               	movf	1,w
 14204  001F' 0082'              	movwf	??_I2C1_ISR
 14205  0020' 0802'              	movf	??_I2C1_ISR,w
 14206  0021' 0080'              	movwf	_i2c1_trb_count^(0+128)
 14207                           
 14208                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 14209  0022' 0800'              	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14210  0023' 0086               	movwf	6
 14211  0024' 3001               	movlw	1	; select bank2/3
 14212  0025' 0087               	movwf	7
 14213  0026' 3001               	movlw	1	; select bank2/3
 14214  0027' 3F41               	moviw [1]fsr1
 14215  0028' 0084'              	movwf	_p_i2c1_trb_current
 14216                           
 14217                           ;i2c1.c: 270: i2c1_object.pTrHead++;
 14218  0029' 3003               	movlw	3
 14219  002A' 0082'              	movwf	??_I2C1_ISR
 14220  002B' 0802'              	movf	??_I2C1_ISR,w
 14221  002C' 0780'              	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 14222                           
 14223                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 14224  002D' 0800'              	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14225  002E' 3A00'              	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 14226  002F' 1D03               	skipz
 14227  0030' 2800'              	goto	i1l2924
 14228                           
 14229                           ;i2c1.c: 274: {
 14230                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
 14231  0031' 3000'              	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 14232  0032' 0082'              	movwf	??_I2C1_ISR
 14233  0033' 0802'              	movf	??_I2C1_ISR,w
 14234  0034' 0080'              	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 14235  0035'                    i1l2924:	
 14236                           
 14237                           ;i2c1.c: 277: }
 14238                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
 14239  0035' 1002'              	bcf	(_i2c1_object^(0+128)+2),0
 14240                           
 14241                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 14242  0036' 0800'              	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14243  0037' 0600'              	xorwf	_i2c1_object^(0+128),w
 14244  0038' 1903               	btfsc	3,2
 14245                           
 14246                           ;i2c1.c: 285: {
 14247                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
 14248  0039' 1482'              	bsf	(_i2c1_object^(0+128)+2),1
 14249                           
 14250                           ;i2c1.c: 288: }
 14251                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
 14252  003A' 0024               	movlb	4	; select bank4
 14253  003B' 1416               	bsf	22,0	;volatile
 14254                           
 14255                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
 14256  003C' 3002               	movlw	2
 14257  003D' 0082'              	movwf	??_I2C1_ISR
 14258  003E' 0802'              	movf	??_I2C1_ISR,w
 14259  003F' 0021               	movlb	1	; select bank1
 14260  0040' 0080'              	movwf	_i2c1_state^(0+128)
 14261                           
 14262                           ;i2c1.c: 295: }
 14263                           ;i2c1.c: 297: break;
 14264  0041' 0008               	return
 14265  0042'                    i1l171:	
 14266                           ;i2c1.c: 299: case S_MASTER_RESTART:
 14267                           
 14268                           
 14269                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
 14270  0042' 0024               	movlb	4	; select bank4
 14271  0043' 1496               	bsf	22,1	;volatile
 14272                           
 14273                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
 14274  0044' 3002               	movlw	2
 14275  0045' 0082'              	movwf	??_I2C1_ISR
 14276  0046' 0802'              	movf	??_I2C1_ISR,w
 14277  0047' 0021               	movlb	1	; select bank1
 14278  0048' 0080'              	movwf	_i2c1_state^(0+128)
 14279                           
 14280                           ;i2c1.c: 309: break;
 14281  0049' 0008               	return
 14282  004A'                    i1l172:	
 14283                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
 14284                           
 14285                           
 14286                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
 14287  004A' 0024               	movlb	4	; select bank4
 14288  004B' 1F16               	btfss	22,6	;volatile
 14289  004C' 2800'              	goto	i1l2936
 14290                           
 14291                           ;i2c1.c: 314: {
 14292                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
 14293  004D' 3001               	movlw	1
 14294  004E' 0082'              	movwf	??_I2C1_ISR
 14295  004F' 0802'              	movf	??_I2C1_ISR,w
 14296  0050' 0021               	movlb	1	; select bank1
 14297  0051' 0784'              	addwf	(_i2c1_object^(0+128)+4),f
 14298                           
 14299                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14300  0052' 3004               	movlw	4
 14301  0053' 3180' 2000'        	fcall	_I2C1_Stop
 14302                           
 14303                           ;i2c1.c: 317: }
 14304  0055' 0008               	return
 14305  0056'                    i1l2936:	
 14306                           
 14307                           ;i2c1.c: 318: else
 14308                           ;i2c1.c: 319: {
 14309                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 14310  0056' 0806'              	movf	I2C1_ISR@i2c_address+1,w
 14311  0057' 0083'              	movwf	??_I2C1_ISR+1
 14312  0058' 0805'              	movf	I2C1_ISR@i2c_address,w
 14313  0059' 0082'              	movwf	??_I2C1_ISR
 14314  005A' 3683'              	lsrf	??_I2C1_ISR+1,f
 14315  005B' 0C82'              	rrf	??_I2C1_ISR,f
 14316  005C' 0802'              	movf	??_I2C1_ISR,w
 14317  005D' 0024               	movlb	4	; select bank4
 14318  005E' 0091               	movwf	17	;volatile
 14319                           
 14320                           ;i2c1.c: 324: if(i2c_address & 0x01)
 14321  005F' 1C05'              	btfss	I2C1_ISR@i2c_address,0
 14322  0060' 2800'              	goto	i1l2942
 14323                           
 14324                           ;i2c1.c: 325: {
 14325                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
 14326  0061' 300B               	movlw	11
 14327  0062' 0082'              	movwf	??_I2C1_ISR
 14328  0063' 0802'              	movf	??_I2C1_ISR,w
 14329  0064' 0021               	movlb	1	; select bank1
 14330  0065' 0080'              	movwf	_i2c1_state^(0+128)
 14331                           
 14332                           ;i2c1.c: 329: }
 14333  0066' 0008               	return
 14334  0067'                    i1l2942:	
 14335                           
 14336                           ;i2c1.c: 330: else
 14337                           ;i2c1.c: 331: {
 14338                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
 14339  0067' 3003               	movlw	3
 14340  0068' 0082'              	movwf	??_I2C1_ISR
 14341  0069' 0802'              	movf	??_I2C1_ISR,w
 14342  006A' 0021               	movlb	1	; select bank1
 14343  006B' 0080'              	movwf	_i2c1_state^(0+128)
 14344                           
 14345                           ;i2c1.c: 334: }
 14346                           ;i2c1.c: 335: }
 14347                           ;i2c1.c: 337: break;
 14348  006C' 0008               	return
 14349  006D'                    i1l177:	
 14350                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
 14351                           
 14352                           
 14353                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
 14354  006D' 0024               	movlb	4	; select bank4
 14355  006E' 1F16               	btfss	22,6	;volatile
 14356  006F' 2800'              	goto	i1l178
 14357                           
 14358                           ;i2c1.c: 342: {
 14359                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
 14360  0070' 3001               	movlw	1
 14361  0071' 0082'              	movwf	??_I2C1_ISR
 14362  0072' 0802'              	movf	??_I2C1_ISR,w
 14363  0073' 0021               	movlb	1	; select bank1
 14364  0074' 0784'              	addwf	(_i2c1_object^(0+128)+4),f
 14365                           
 14366                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14367  0075' 3004               	movlw	4
 14368  0076' 3180' 2000'        	fcall	_I2C1_Stop
 14369                           
 14370                           ;i2c1.c: 345: }
 14371  0078' 0008               	return
 14372  0079'                    i1l178:	
 14373                           
 14374                           ;i2c1.c: 346: else
 14375                           ;i2c1.c: 347: {
 14376                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
 14377  0079' 1496               	bsf	22,1	;volatile
 14378                           
 14379                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 14380  007A' 0806'              	movf	I2C1_ISR@i2c_address+1,w
 14381  007B' 0083'              	movwf	??_I2C1_ISR+1
 14382  007C' 0805'              	movf	I2C1_ISR@i2c_address,w
 14383  007D' 0082'              	movwf	??_I2C1_ISR
 14384  007E' 0803'              	movf	??_I2C1_ISR+1,w
 14385  007F' 0082'              	movwf	??_I2C1_ISR
 14386  0080' 0183'              	clrf	??_I2C1_ISR+1
 14387  0081' 3006               	movlw	6
 14388  0082' 0502'              	andwf	??_I2C1_ISR,w
 14389  0083' 0084'              	movwf	??_I2C1_ISR+2
 14390  0084' 3000               	movlw	0
 14391  0085' 0503'              	andwf	??_I2C1_ISR+1,w
 14392  0086' 0085'              	movwf	??_I2C1_ISR+3
 14393  0087' 30F0               	movlw	240
 14394  0088' 0404'              	iorwf	??_I2C1_ISR+2,w
 14395  0089' 0085'              	movwf	I2C1_ISR@i2c_address
 14396  008A' 3000               	movlw	0
 14397  008B' 0405'              	iorwf	??_I2C1_ISR+3,w
 14398  008C' 0086'              	movwf	I2C1_ISR@i2c_address+1
 14399                           
 14400                           ;i2c1.c: 357: i2c_address |= 0x0001;
 14401  008D' 1405'              	bsf	I2C1_ISR@i2c_address,0
 14402                           
 14403                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
 14404  008E' 0021               	movlb	1	; select bank1
 14405  008F' 0180'              	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 14406  0090' 0A80'              	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 14407                           
 14408                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
 14409  0091' 3002               	movlw	2
 14410  0092' 0082'              	movwf	??_I2C1_ISR
 14411  0093' 0802'              	movf	??_I2C1_ISR,w
 14412  0094' 0080'              	movwf	_i2c1_state^(0+128)
 14413                           
 14414                           ;i2c1.c: 364: }
 14415                           ;i2c1.c: 366: break;
 14416  0095' 0008               	return
 14417  0096'                    i1l2956:	
 14418                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
 14419                           
 14420                           
 14421                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
 14422  0096' 0300'              	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 14423  0097' 1903               	btfsc	3,2
 14424  0098' 2800'              	goto	i1l2976
 14425                           
 14426                           ;i2c1.c: 382: {
 14427                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
 14428  0099' 0804'              	movf	_p_i2c1_trb_current,w
 14429  009A' 0086               	movwf	6
 14430  009B' 3001               	movlw	1	; select bank2/3
 14431  009C' 0087               	movwf	7
 14432  009D' 3F40               	moviw [0]fsr1
 14433  009E' 0085'              	movwf	I2C1_ISR@i2c_address
 14434  009F' 3F41               	moviw [1]fsr1
 14435  00A0' 0086'              	movwf	I2C1_ISR@i2c_address+1
 14436                           
 14437                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 14438  00A1' 0804'              	movf	_p_i2c1_trb_current,w
 14439  00A2' 0086               	movwf	6
 14440  00A3' 3001               	movlw	1	; select bank2/3
 14441  00A4' 0087               	movwf	7
 14442  00A5' 3001               	movlw	1	; select bank2/3
 14443  00A6' 3F43               	moviw [3]fsr1
 14444  00A7' 0080'              	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 14445                           
 14446                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
 14447  00A8' 0804'              	movf	_p_i2c1_trb_current,w
 14448  00A9' 0086               	movwf	6
 14449  00AA' 3001               	movlw	1	; select bank2/3
 14450  00AB' 0087               	movwf	7
 14451  00AC' 3001               	movlw	1	; select bank2/3
 14452  00AD' 3F42               	moviw [2]fsr1
 14453  00AE' 0080'              	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 14454  00AF'                    i1l2976:	
 14455                           ;i2c1.c: 407: }
 14456                           ;i2c1.c: 408: }
 14457                           
 14458                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
 14459                           
 14460                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
 14461                           
 14462                           ;i2c1.c: 400: else
 14463                           ;i2c1.c: 401: {
 14464                           ;i2c1.c: 403: SSP1BUF = i2c_address;
 14465                           
 14466                           ;i2c1.c: 399: }
 14467                           
 14468                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
 14469                           
 14470                           ;i2c1.c: 393: {
 14471                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
 14472                           
 14473                           ;i2c1.c: 391: {
 14474                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
 14475                           
 14476                           ;i2c1.c: 387: }
 14477                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
 14478                           
 14479                           
 14480                           ;i2c1.c: 409: else
 14481                           ;i2c1.c: 410: {
 14482                           ;i2c1.c: 412: SSP1BUF = i2c_address;
 14483  00AF' 0805'              	movf	I2C1_ISR@i2c_address,w
 14484  00B0' 0024               	movlb	4	; select bank4
 14485  00B1' 0091               	movwf	17	;volatile
 14486                           
 14487                           ;i2c1.c: 413: if(i2c_address & 0x01)
 14488  00B2' 1C05'              	btfss	I2C1_ISR@i2c_address,0
 14489  00B3' 2800'              	goto	i1l2982
 14490                           
 14491                           ;i2c1.c: 414: {
 14492                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
 14493  00B4' 3005               	movlw	5
 14494  00B5' 0082'              	movwf	??_I2C1_ISR
 14495  00B6' 0802'              	movf	??_I2C1_ISR,w
 14496  00B7' 0021               	movlb	1	; select bank1
 14497  00B8' 0080'              	movwf	_i2c1_state^(0+128)
 14498                           
 14499                           ;i2c1.c: 417: }
 14500  00B9' 0008               	return
 14501  00BA'                    i1l2982:	
 14502                           
 14503                           ;i2c1.c: 418: else
 14504                           ;i2c1.c: 419: {
 14505                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
 14506  00BA' 3003               	movlw	3
 14507  00BB' 0082'              	movwf	??_I2C1_ISR
 14508  00BC' 0802'              	movf	??_I2C1_ISR,w
 14509  00BD' 0021               	movlb	1	; select bank1
 14510  00BE' 0080'              	movwf	_i2c1_state^(0+128)
 14511                           
 14512                           ;i2c1.c: 422: }
 14513                           ;i2c1.c: 423: }
 14514                           ;i2c1.c: 424: break;
 14515  00BF' 0008               	return
 14516  00C0'                    i1l188:	
 14517                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
 14518                           
 14519                           
 14520                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
 14521  00C0' 0024               	movlb	4	; select bank4
 14522  00C1' 1F16               	btfss	22,6	;volatile
 14523  00C2' 2800'              	goto	i1l2990
 14524                           
 14525                           ;i2c1.c: 430: {
 14526                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
 14527  00C3' 3001               	movlw	1
 14528  00C4' 0082'              	movwf	??_I2C1_ISR
 14529  00C5' 0802'              	movf	??_I2C1_ISR,w
 14530  00C6' 0021               	movlb	1	; select bank1
 14531  00C7' 0784'              	addwf	(_i2c1_object^(0+128)+4),f
 14532                           
 14533                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
 14534  00C8' 0024               	movlb	4	; select bank4
 14535  00C9' 1316               	bcf	22,6	;volatile
 14536                           
 14537                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
 14538  00CA' 3005               	movlw	5
 14539  00CB' 3180' 2000'        	fcall	_I2C1_Stop
 14540                           
 14541                           ;i2c1.c: 440: }
 14542  00CD' 0008               	return
 14543  00CE'                    i1l2990:	
 14544                           
 14545                           ;i2c1.c: 441: else
 14546                           ;i2c1.c: 442: {
 14547                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
 14548  00CE' 3001               	movlw	1
 14549  00CF' 0021               	movlb	1	; select bank1
 14550  00D0' 0280'              	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 14551  00D1' 0A00'              	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 14552  00D2' 1D03               	btfss	3,2
 14553  00D3' 2800'              	goto	i1l2998
 14554                           
 14555                           ;i2c1.c: 445: {
 14556                           ;i2c1.c: 449: p_i2c1_trb_current++;
 14557  00D4' 3004               	movlw	4
 14558  00D5' 0082'              	movwf	??_I2C1_ISR
 14559  00D6' 0802'              	movf	??_I2C1_ISR,w
 14560  00D7' 0784'              	addwf	_p_i2c1_trb_current,f
 14561                           
 14562                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
 14563  00D8' 3001               	movlw	1
 14564  00D9' 0280'              	subwf	_i2c1_trb_count^(0+128),f
 14565  00DA' 1D03               	btfss	3,2
 14566  00DB' 2800'              	goto	i1l192
 14567                           
 14568                           ;i2c1.c: 453: {
 14569                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14570  00DC' 3000               	movlw	0
 14571  00DD' 3180' 2000'        	fcall	_I2C1_Stop
 14572                           
 14573                           ;i2c1.c: 455: }
 14574  00DF' 0008               	return
 14575  00E0'                    i1l192:	
 14576                           
 14577                           ;i2c1.c: 456: else
 14578                           ;i2c1.c: 457: {
 14579                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
 14580  00E0' 0024               	movlb	4	; select bank4
 14581  00E1' 1496               	bsf	22,1	;volatile
 14582                           
 14583                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
 14584  00E2' 3002               	movlw	2
 14585  00E3' 0082'              	movwf	??_I2C1_ISR
 14586  00E4' 0802'              	movf	??_I2C1_ISR,w
 14587  00E5' 0021               	movlb	1	; select bank1
 14588  00E6' 0080'              	movwf	_i2c1_state^(0+128)
 14589                           
 14590                           ;i2c1.c: 469: }
 14591                           ;i2c1.c: 470: }
 14592  00E7' 0008               	return
 14593  00E8'                    i1l2998:	
 14594                           
 14595                           ;i2c1.c: 471: else
 14596                           ;i2c1.c: 472: {
 14597                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
 14598  00E8' 0800'              	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 14599  00E9' 0086               	movwf	6
 14600  00EA' 0187               	clrf	7
 14601  00EB' 0801               	movf	1,w
 14602  00EC' 0024               	movlb	4	; select bank4
 14603  00ED' 0091               	movwf	17	;volatile
 14604  00EE' 3001               	movlw	1
 14605  00EF' 0082'              	movwf	??_I2C1_ISR
 14606  00F0' 0802'              	movf	??_I2C1_ISR,w
 14607  00F1' 0021               	movlb	1	; select bank1
 14608  00F2' 0780'              	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 14609                           
 14610                           ;i2c1.c: 475: }
 14611                           ;i2c1.c: 476: }
 14612                           ;i2c1.c: 477: break;
 14613  00F3' 0008               	return
 14614  00F4'                    i1l195:	
 14615                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
 14616                           
 14617                           
 14618                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
 14619  00F4' 0024               	movlb	4	; select bank4
 14620  00F5' 1F16               	btfss	22,6	;volatile
 14621  00F6' 2800'              	goto	i1l196
 14622                           
 14623                           ;i2c1.c: 483: {
 14624                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
 14625  00F7' 3001               	movlw	1
 14626  00F8' 0082'              	movwf	??_I2C1_ISR
 14627  00F9' 0802'              	movf	??_I2C1_ISR,w
 14628  00FA' 0021               	movlb	1	; select bank1
 14629  00FB' 0784'              	addwf	(_i2c1_object^(0+128)+4),f
 14630                           
 14631                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14632  00FC' 3004               	movlw	4
 14633  00FD' 3180' 2000'        	fcall	_I2C1_Stop
 14634                           
 14635                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
 14636  00FF' 0024               	movlb	4	; select bank4
 14637  0100' 1316               	bcf	22,6	;volatile
 14638                           
 14639                           ;i2c1.c: 493: }
 14640  0101' 0008               	return
 14641  0102'                    i1l196:	
 14642                           
 14643                           ;i2c1.c: 494: else
 14644                           ;i2c1.c: 495: {
 14645                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
 14646  0102' 1596               	bsf	22,3	;volatile
 14647                           
 14648                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
 14649  0103' 3008               	movlw	8
 14650  0104' 0082'              	movwf	??_I2C1_ISR
 14651  0105' 0802'              	movf	??_I2C1_ISR,w
 14652  0106' 0021               	movlb	1	; select bank1
 14653  0107' 0080'              	movwf	_i2c1_state^(0+128)
 14654                           
 14655                           ;i2c1.c: 498: }
 14656                           ;i2c1.c: 499: break;
 14657  0108' 0008               	return
 14658  0109'                    i1l3010:	
 14659                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
 14660                           
 14661                           
 14662                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
 14663  0109' 3008               	movlw	8
 14664  010A' 0082'              	movwf	??_I2C1_ISR
 14665  010B' 0802'              	movf	??_I2C1_ISR,w
 14666  010C' 0080'              	movwf	_i2c1_state^(0+128)
 14667                           
 14668                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
 14669  010D' 0024               	movlb	4	; select bank4
 14670  010E' 1596               	bsf	22,3	;volatile
 14671                           
 14672                           ;i2c1.c: 511: break;
 14673  010F' 0008               	return
 14674  0110'                    i1l3014:	
 14675                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
 14676                           
 14677                           
 14678                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
 14679  0110' 0024               	movlb	4	; select bank4
 14680  0111' 0811               	movf	17,w	;volatile
 14681  0112' 0082'              	movwf	??_I2C1_ISR
 14682  0113' 0021               	movlb	1	; select bank1
 14683  0114' 0800'              	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 14684  0115' 0086               	movwf	6
 14685  0116' 0187               	clrf	7
 14686  0117' 0802'              	movf	??_I2C1_ISR,w
 14687  0118' 0081               	movwf	1
 14688  0119' 3001               	movlw	1
 14689  011A' 0082'              	movwf	??_I2C1_ISR
 14690  011B' 0802'              	movf	??_I2C1_ISR,w
 14691  011C' 0780'              	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 14692                           
 14693                           ;i2c1.c: 519: if(--i2c_bytes_left)
 14694  011D' 3001               	movlw	1
 14695  011E' 0280'              	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 14696  011F' 1903               	btfsc	3,2
 14697  0120' 2800'              	goto	i1l200
 14698                           
 14699                           ;i2c1.c: 520: {
 14700                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
 14701  0121' 0024               	movlb	4	; select bank4
 14702  0122' 1296               	bcf	22,5	;volatile
 14703                           
 14704                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
 14705  0123' 3006               	movlw	6
 14706  0124' 0082'              	movwf	??_I2C1_ISR
 14707  0125' 0802'              	movf	??_I2C1_ISR,w
 14708  0126' 0021               	movlb	1	; select bank1
 14709  0127' 0080'              	movwf	_i2c1_state^(0+128)
 14710                           
 14711                           ;i2c1.c: 530: }
 14712  0128' 2800'              	goto	i1l3026
 14713  0129'                    i1l200:	
 14714                           
 14715                           ;i2c1.c: 531: else
 14716                           ;i2c1.c: 532: {
 14717                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
 14718  0129' 0024               	movlb	4	; select bank4
 14719  012A' 1696               	bsf	22,5	;volatile
 14720                           
 14721                           ;i2c1.c: 538: I2C1_FunctionComplete();
 14722  012B' 3180' 2000'        	fcall	_I2C1_FunctionComplete
 14723  012D'                    i1l3026:	
 14724                           
 14725                           ;i2c1.c: 539: }
 14726                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
 14727  012D' 0024               	movlb	4	; select bank4
 14728  012E' 1616               	bsf	22,4	;volatile
 14729                           
 14730                           ;i2c1.c: 543: break;
 14731  012F' 0008               	return
 14732  0130'                    i1l3028:	
 14733                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
 14734                           
 14735                           
 14736                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
 14737                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14738  0130' 3000               	movlw	0
 14739  0131' 3180' 2000'        	fcall	_I2C1_Stop
 14740                           
 14741                           ;i2c1.c: 550: break;
 14742  0133' 0008               	return
 14743  0134'                    i1l3030:	
 14744                           ;i2c1.c: 552: default:
 14745                           
 14746                           
 14747                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
 14748  0134' 3001               	movlw	1
 14749  0135' 0082'              	movwf	??_I2C1_ISR
 14750  0136' 0802'              	movf	??_I2C1_ISR,w
 14751  0137' 0021               	movlb	1	; select bank1
 14752  0138' 0784'              	addwf	(_i2c1_object^(0+128)+4),f
 14753                           
 14754                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
 14755  0139' 3006               	movlw	6
 14756  013A' 3180' 2000'        	fcall	_I2C1_Stop
 14757                           
 14758                           ;i2c1.c: 560: }
 14759                           
 14760                           ;i2c1.c: 558: break;
 14761  013C' 0008               	return
 14762  013D'                    i1l3036:	
 14763  013D' 0021               	movlb	1	; select bank1
 14764  013E' 0800'              	movf	_i2c1_state^(0+128),w
 14765                           
 14766                           ; Switch size 1, requested type "space"
 14767                           ; Number of cases is 11, Range of values is 0 to 11
 14768                           ; switch strategies available:
 14769                           ; Name         Instructions Cycles
 14770                           ; direct_byte           30     6 (fixed)
 14771                           ; simple_byte           34    18 (average)
 14772                           ; jumptable            260     6 (fixed)
 14773                           ;	Chosen strategy is direct_byte
 14774  013F' 0084               	movwf	4
 14775  0140' 300C               	movlw	12
 14776  0141' 0204               	subwf	4,w
 14777  0142' 1803               	skipnc
 14778  0143' 2800'              	goto	i1l3030
 14779  0144' 3180'              	movlp	high i1S4552
 14780  0145' 3504               	lslf	4,w
 14781  0146' 3E00'              	addlw	low i1S4552
 14782  0147' 0082               	movwf	2
 14783  0148' 0008               	return
 14784  0149'                    __end_of_I2C1_ISR:	
 14785                           
 14786                           	psect	swtext1
 14787  0000'                    __pswtext1:	
 14788  0000'                    i1S4552:	
 14789  0000' 3180' 2800'        	ljmp	i1l166
 14790  0002' 3180' 2800'        	ljmp	i1l171
 14791  0004' 3180' 2800'        	ljmp	i1l2956
 14792  0006' 3180' 2800'        	ljmp	i1l188
 14793  0008' 3180' 2800'        	ljmp	i1l3028
 14794  000A' 3180' 2800'        	ljmp	i1l195
 14795  000C' 3180' 2800'        	ljmp	i1l3010
 14796  000E' 3180' 2800'        	ljmp	i1l3028
 14797  0010' 3180' 2800'        	ljmp	i1l3014
 14798  0012' 3180' 2800'        	ljmp	i1l3030
 14799  0014' 3180' 2800'        	ljmp	i1l172
 14800  0016' 3180' 2800'        	ljmp	i1l177
 14801                           
 14802                           	psect	text41
 14803  0000'                    __ptext41:	
 14804 ;; *************** function _I2C1_Stop *****************
 14805 ;; Defined at:
 14806 ;;		line 581 in file "mcc_generated_files/i2c1.c"
 14807 ;; Parameters:    Size  Location     Type
 14808 ;;  completion_c    1    wreg     enum E7419
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;  completion_c    1    1[COMMON] enum E7419
 14811 ;; Return value:  Size  Location     Type
 14812 ;;                  1    wreg      void 
 14813 ;; Registers used:
 14814 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14815 ;; Tracked objects:
 14816 ;;		On entry : 0/0
 14817 ;;		On exit  : 0/0
 14818 ;;		Unchanged: 0/0
 14819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14824 ;;Total ram usage:        2 bytes
 14825 ;; Hardware stack levels used:    1
 14826 ;; This function calls:
 14827 ;;		Nothing
 14828 ;; This function is called by:
 14829 ;;		_I2C1_ISR
 14830 ;; This function uses a non-reentrant model
 14831 ;;
 14832                           
 14833                           
 14834                           ;psect for function _I2C1_Stop
 14835  0000'                    _I2C1_Stop:	
 14836                           
 14837                           ;incstack = 0
 14838                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 14839                           ;I2C1_Stop@completion_code stored from wreg
 14840  0000' 0081'              	movwf	I2C1_Stop@completion_code
 14841                           
 14842                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
 14843  0001' 0024               	movlb	4	; select bank4
 14844  0002' 1516               	bsf	22,2	;volatile
 14845                           
 14846                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
 14847  0003' 0803'              	movf	_p_i2c1_current,w
 14848  0004' 3E02               	addlw	2
 14849  0005' 0086               	movwf	6
 14850  0006' 3001               	movlw	1	; select bank2/3
 14851  0007' 0087               	movwf	7
 14852  0008' 0801               	movf	1,w
 14853  0009' 1903               	btfsc	3,2
 14854  000A' 2800'              	goto	i1l2838
 14855                           
 14856                           ;i2c1.c: 588: {
 14857                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
 14858  000B' 0801'              	movf	I2C1_Stop@completion_code,w
 14859  000C' 0080'              	movwf	??_I2C1_Stop
 14860  000D' 0803'              	movf	_p_i2c1_current,w
 14861  000E' 3E02               	addlw	2
 14862  000F' 0086               	movwf	6
 14863  0010' 3001               	movlw	1	; select bank2/3
 14864  0011' 0087               	movwf	7
 14865  0012' 0801               	movf	1,w
 14866  0013' 0086               	movwf	6
 14867  0014' 0187               	clrf	7
 14868  0015' 0800'              	movf	??_I2C1_Stop,w
 14869  0016' 0081               	movwf	1
 14870  0017'                    i1l2838:	
 14871                           
 14872                           ;i2c1.c: 591: }
 14873                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
 14874  0017' 0021               	movlb	1	; select bank1
 14875  0018' 0180'              	clrf	_i2c1_state^(0+128)
 14876  0019' 0008               	return
 14877  001A'                    __end_of_I2C1_Stop:	
 14878                           
 14879                           	psect	text42
 14880  0000'                    __ptext42:	
 14881 ;; *************** function _I2C1_FunctionComplete *****************
 14882 ;; Defined at:
 14883 ;;		line 563 in file "mcc_generated_files/i2c1.c"
 14884 ;; Parameters:    Size  Location     Type
 14885 ;;		None
 14886 ;; Auto vars:     Size  Location     Type
 14887 ;;		None
 14888 ;; Return value:  Size  Location     Type
 14889 ;;                  1    wreg      void 
 14890 ;; Registers used:
 14891 ;;		wreg, status,2, status,0
 14892 ;; Tracked objects:
 14893 ;;		On entry : 0/0
 14894 ;;		On exit  : 0/0
 14895 ;;		Unchanged: 0/0
 14896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14901 ;;Total ram usage:        1 bytes
 14902 ;; Hardware stack levels used:    1
 14903 ;; This function calls:
 14904 ;;		Nothing
 14905 ;; This function is called by:
 14906 ;;		_I2C1_ISR
 14907 ;; This function uses a non-reentrant model
 14908 ;;
 14909                           
 14910                           
 14911                           ;psect for function _I2C1_FunctionComplete
 14912  0000'                    _I2C1_FunctionComplete:	
 14913                           
 14914                           ;i2c1.c: 567: p_i2c1_trb_current++;
 14915                           
 14916                           ;incstack = 0
 14917                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 14918  0000' 3004               	movlw	4
 14919  0001' 0080'              	movwf	??_I2C1_FunctionComplete
 14920  0002' 0800'              	movf	??_I2C1_FunctionComplete,w
 14921  0003' 0784'              	addwf	_p_i2c1_trb_current,f
 14922                           
 14923                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
 14924  0004' 3001               	movlw	1
 14925  0005' 0021               	movlb	1	; select bank1
 14926  0006' 0280'              	subwf	_i2c1_trb_count^(0+128),f
 14927  0007' 1D03               	btfss	3,2
 14928  0008' 2800'              	goto	i1l207
 14929                           
 14930                           ;i2c1.c: 571: {
 14931                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
 14932  0009' 3004               	movlw	4
 14933  000A' 0080'              	movwf	??_I2C1_FunctionComplete
 14934  000B' 0800'              	movf	??_I2C1_FunctionComplete,w
 14935  000C' 0080'              	movwf	_i2c1_state^(0+128)
 14936                           
 14937                           ;i2c1.c: 573: }
 14938  000D' 0008               	return
 14939  000E'                    i1l207:	
 14940                           
 14941                           ;i2c1.c: 574: else
 14942                           ;i2c1.c: 575: {
 14943                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
 14944  000E' 0180'              	clrf	_i2c1_state^(0+128)
 14945  000F' 0A80'              	incf	_i2c1_state^(0+128),f
 14946  0010' 0008               	return
 14947  0011'                    __end_of_I2C1_FunctionComplete:	
 14948                           
 14949                           	psect	text43
 14950  0000'                    __ptext43:	
 14951 ;; *************** function _I2C1_BusCollisionISR *****************
 14952 ;; Defined at:
 14953 ;;		line 728 in file "mcc_generated_files/i2c1.c"
 14954 ;; Parameters:    Size  Location     Type
 14955 ;;		None
 14956 ;; Auto vars:     Size  Location     Type
 14957 ;;		None
 14958 ;; Return value:  Size  Location     Type
 14959 ;;                  1    wreg      void 
 14960 ;; Registers used:
 14961 ;;		None
 14962 ;; Tracked objects:
 14963 ;;		On entry : 0/0
 14964 ;;		On exit  : 0/0
 14965 ;;		Unchanged: 0/0
 14966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14971 ;;Total ram usage:        0 bytes
 14972 ;; Hardware stack levels used:    1
 14973 ;; This function calls:
 14974 ;;		Nothing
 14975 ;; This function is called by:
 14976 ;;		_INTERRUPT_InterruptManager
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           
 14981                           ;psect for function _I2C1_BusCollisionISR
 14982  0000'                    _I2C1_BusCollisionISR:	
 14983                           
 14984                           ;i2c1.c: 731: PIR1bits.BCL1IF = 0;
 14985                           
 14986                           ;incstack = 0
 14987                           ; Regs used in _I2C1_BusCollisionISR: []
 14988  0000' 0020               	movlb	0	; select bank0
 14989  0001' 1111               	bcf	17,2	;volatile
 14990  0002' 0008               	return
 14991  0003'                    __end_of_I2C1_BusCollisionISR:	
 14992  007E                     btemp	set	126	;btemp
 14993  007E                     int$flags	set	126
 14994  007E                     wtemp0	set	126


Data Sizes:
    Strings     36
    Constant    1331
    Data        1077
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     78      80
    BANK1            80     67      80
    BANK2            80     21      75
    BANK3            80      0      26
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           40      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E7419 size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    oled_sendCmd$0	PTR unsigned char  size(2) Largest target is 1032
		 -> display_scroll@cmdbuf(BANK0[9]), display_stopscroll@cmdbuf(BANK0[2]), display_update@cmdbuf(BANK0[5]), display_invert@cmdbuf(BANK0[2]), 
		 -> display_contrast@cmdbuf(BANK0[3]), frameBuff(BIGRAM[1032]), display_init@cmdbuf(BANK0[26]), 

    gfx_println@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[7]), STR_2(CODE[13]), STR_1(CODE[16]), 

    gfx_print@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[7]), STR_2(CODE[13]), STR_1(CODE[16]), 

    my_strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[7]), STR_2(CODE[13]), STR_1(CODE[16]), 

    my_strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[7]), STR_2(CODE[13]), STR_1(CODE[16]), 

    gfx_rotation_adjust@px	PTR int  size(1) Largest target is 2
		 -> gfx_hvLine@x2(BANK0[2]), gfx_hvLine@x1(BANK0[2]), gfx_drawPixel@x(BANK0[2]), 

    gfx_rotation_adjust@py	PTR int  size(1) Largest target is 2
		 -> gfx_hvLine@y2(BANK0[2]), gfx_hvLine@y1(BANK0[2]), gfx_drawPixel@y(BANK0[2]), 

    display_line@ptr_781	PTR unsigned char  size(2) Largest target is 1032
		 -> frameBuff(BIGRAM[1032]), 

    display_line@pend_779	PTR unsigned char  size(2) Largest target is 1032
		 -> frameBuff(BIGRAM[1032]), 

    display_line@pstart_778	PTR unsigned char  size(2) Largest target is 1032
		 -> frameBuff(BIGRAM[1032]), 

    display_line@ptr	PTR unsigned char  size(2) Largest target is 1032
		 -> frameBuff(BIGRAM[1032]), 

    display_line@pend	PTR unsigned char  size(2) Largest target is 1032
		 -> frameBuff(BIGRAM[1032]), 

    display_line@pstart	PTR unsigned char  size(2) Largest target is 1032
		 -> frameBuff(BIGRAM[1032]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E7419 size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    F7531.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    F7526.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E7419 size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S239$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    S251$pTrFlag	PTR enum E7419 size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    p_i2c1_current.pTrFlag	PTR enum E7419 size(1) Largest target is 1
		 -> oled_sendData@flag(COMMON[1]), 

    S251$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S262$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S262$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_gfx_drawRect
    _main->_gfx_write
    _gfx_println->_gfx_write
    _gfx_print->_gfx_write
    _gfx_drawChar->_gfx_fillRect
    _gfx_fillRect->_gfx_drawLine
    _gfx_drawTriangle->_gfx_drawLine
    _gfx_drawRect->_gfx_drawLine
    _gfx_drawLine->_gfx_hvLine
    _gfx_hvLine->_display_line
    _display_line->___wmul
    ___awdiv->_gfx_height
    ___awdiv->_gfx_width
    _gfx_drawCircle->_gfx_drawPixel
    _gfx_drawPixel->_display_setPixel
    _display_setPixel->___wmul
    _display_update->___wmul
    _display_init->_gfx_init
    _display_clear->___wmul
    _SYSTEM_Initialize->_I2C1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_gfx_println
    _gfx_println->_gfx_print
    _gfx_print->_gfx_write
    _gfx_write->_gfx_drawChar
    _gfx_drawChar->_gfx_fillRect
    _gfx_fillRect->_gfx_drawLine
    _gfx_drawTriangle->_gfx_drawLine
    _gfx_drawRect->_gfx_drawLine

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0  235343
                                             61 BANK1      6     6      0
                                              0 BANK2     21    21      0
                  _SYSTEM_Initialize
                            ___awdiv
                      _display_clear
                   _display_contrast
                       _display_init
                     _display_invert
                     _display_scroll
                 _display_stopscroll
                     _display_update
                     _gfx_drawCircle
                       _gfx_drawLine
                      _gfx_drawPixel
                       _gfx_drawRect
                   _gfx_drawTriangle
                       _gfx_fillRect
                         _gfx_height
                        _gfx_println
                      _gfx_setCursor
                    _gfx_setRotation
                   _gfx_setTextColor
                    _gfx_setTextSize
                          _gfx_width
                          _gfx_write
 ---------------------------------------------------------------------------------
 (1) _gfx_width                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _gfx_setTextSize                                      5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _gfx_setTextColor                                     2     0      2     226
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _gfx_setRotation                                      2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _gfx_setCursor                                        4     0      4     582
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _gfx_println                                          2     0      2   76019
                                             59 BANK1      2     0      2
                          _gfx_print
                          _gfx_write
 ---------------------------------------------------------------------------------
 (2) _gfx_print                                            6     4      2   38084
                                             53 BANK1      6     4      2
                          _gfx_write
                          _my_strlen
 ---------------------------------------------------------------------------------
 (3) _my_strlen                                            6     4      2     143
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _gfx_write                                            8     8      0   37709
                                             77 BANK0      1     1      0
                                             46 BANK1      7     7      0
                             ___wmul
                       _gfx_drawChar
 ---------------------------------------------------------------------------------
 (2) _gfx_drawChar                                        24    14     10   35140
                                             22 BANK1     24    14     10
                             ___wmul
                      _gfx_drawPixel
                       _gfx_fillRect
 ---------------------------------------------------------------------------------
 (3) _gfx_fillRect                                        15     5     10   23408
                                             72 BANK0      5     5      0
                                             12 BANK1     10     0     10
                       _gfx_drawLine
                         _gfx_height (ARG)
                          _gfx_width (ARG)
 ---------------------------------------------------------------------------------
 (1) _gfx_height                                           2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _gfx_drawTriangle                                    14     0     14   23111
                                             12 BANK1     14     0     14
                       _gfx_drawLine
                         _gfx_height (ARG)
                          _gfx_width (ARG)
 ---------------------------------------------------------------------------------
 (1) _gfx_drawRect                                        16     6     10   22929
                                             72 BANK0      6     6      0
                                             12 BANK1     10     0     10
                       _gfx_drawLine
                         _gfx_height (ARG)
                          _gfx_width (ARG)
 ---------------------------------------------------------------------------------
 (4) _gfx_drawLine                                        31    21     10   21736
                                             53 BANK0     19     9     10
                                              0 BANK1     12    12      0
                            ___awdiv
                      _gfx_drawPixel
                         _gfx_height (ARG)
                         _gfx_hvLine
                          _gfx_width (ARG)
                             _my_abs
 ---------------------------------------------------------------------------------
 (5) _my_abs                                               4     2      2     225
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _gfx_hvLine                                          13     3     10    6791
                                             40 BANK0     13     3     10
                       _display_line
                _gfx_rotation_adjust
 ---------------------------------------------------------------------------------
 (6) _display_line                                        34    24     10    4486
                                              6 BANK0     34    24     10
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2314
                                              2 BANK0      9     5      4
                         _gfx_height (ARG)
                          _gfx_width (ARG)
 ---------------------------------------------------------------------------------
 (1) _gfx_drawCircle                                      22    14      8    9554
                                             29 BANK0     22    14      8
                            ___awdiv (ARG)
                      _gfx_drawPixel
                         _gfx_height (ARG)
                          _gfx_width (ARG)
 ---------------------------------------------------------------------------------
 (5) _gfx_drawPixel                                        7     1      6    7277
                                             22 BANK0      7     1      6
                   _display_setPixel
                _gfx_rotation_adjust
 ---------------------------------------------------------------------------------
 (6) _gfx_rotation_adjust                                 10     9      1     527
                                              0 BANK0     10     9      1
 ---------------------------------------------------------------------------------
 (6) _display_setPixel                                    16    10      6    3105
                                              6 BANK0     16    10      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _display_update                                      12    12      0    3016
                                              6 BANK0     12    12      0
                             ___wmul
                       _oled_sendCmd
 ---------------------------------------------------------------------------------
 (1) _display_stopscroll                                   3     3      0     342
                                              0 BANK0      3     3      0
                       _oled_sendCmd
 ---------------------------------------------------------------------------------
 (1) _display_scroll                                      14    11      3    1004
                                              0 BANK0     14    11      3
                       _oled_sendCmd
 ---------------------------------------------------------------------------------
 (1) _display_invert                                       6     6      0     447
                                              0 BANK0      6     6      0
                       _oled_sendCmd
 ---------------------------------------------------------------------------------
 (1) _display_init                                        27    27      0     534
                                              4 BANK0     27    27      0
                           _gfx_init
                       _oled_sendCmd
 ---------------------------------------------------------------------------------
 (2) _gfx_init                                             4     0      4     192
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _display_contrast                                     5     5      0     410
                                              0 BANK0      5     5      0
                       _oled_sendCmd
 ---------------------------------------------------------------------------------
 (2) _oled_sendCmd                                         3     0      3     308
 ---------------------------------------------------------------------------------
 (1) _display_clear                                       10    10      0    2705
                                              6 BANK0     10    10      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    2476
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (11) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (12) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _WDT_Initialize
   ___awdiv
     _gfx_height (ARG)
     _gfx_width (ARG)
   _display_clear
     ___wmul
   _display_contrast
     _oled_sendCmd
   _display_init
     _gfx_init
     _oled_sendCmd
   _display_invert
     _oled_sendCmd
   _display_scroll
     _oled_sendCmd
   _display_stopscroll
     _oled_sendCmd
   _display_update
     ___wmul
     _oled_sendCmd
   _gfx_drawCircle
     ___awdiv (ARG)
       _gfx_height (ARG)
       _gfx_width (ARG)
     _gfx_drawPixel (ARG)
       _display_setPixel
         ___wmul
       _gfx_rotation_adjust
     _gfx_height (ARG)
     _gfx_width (ARG)
   _gfx_drawLine
     ___awdiv
       _gfx_height (ARG)
       _gfx_width (ARG)
     _gfx_drawPixel
       _display_setPixel
         ___wmul
       _gfx_rotation_adjust
     _gfx_height (ARG)
     _gfx_hvLine (ARG)
       _display_line
         ___wmul
       _gfx_rotation_adjust
     _gfx_width (ARG)
     _my_abs (ARG)
   _gfx_drawPixel
     _display_setPixel
       ___wmul
     _gfx_rotation_adjust
   _gfx_drawRect
     _gfx_drawLine
       ___awdiv
         _gfx_height (ARG)
         _gfx_width (ARG)
       _gfx_drawPixel
         _display_setPixel
           ___wmul
         _gfx_rotation_adjust
       _gfx_height (ARG)
       _gfx_hvLine (ARG)
         _display_line
           ___wmul
         _gfx_rotation_adjust
       _gfx_width (ARG)
       _my_abs (ARG)
     _gfx_height (ARG)
     _gfx_width (ARG)
   _gfx_drawTriangle
     _gfx_drawLine
       ___awdiv
         _gfx_height (ARG)
         _gfx_width (ARG)
       _gfx_drawPixel
         _display_setPixel
           ___wmul
         _gfx_rotation_adjust
       _gfx_height (ARG)
       _gfx_hvLine (ARG)
         _display_line
           ___wmul
         _gfx_rotation_adjust
       _gfx_width (ARG)
       _my_abs (ARG)
     _gfx_height (ARG)
     _gfx_width (ARG)
   _gfx_fillRect
     _gfx_drawLine
       ___awdiv
         _gfx_height (ARG)
         _gfx_width (ARG)
       _gfx_drawPixel
         _display_setPixel
           ___wmul
         _gfx_rotation_adjust
       _gfx_height (ARG)
       _gfx_hvLine (ARG)
         _display_line
           ___wmul
         _gfx_rotation_adjust
       _gfx_width (ARG)
       _my_abs (ARG)
     _gfx_height (ARG)
     _gfx_width (ARG)
   _gfx_height
   _gfx_println
     _gfx_print
       _gfx_write
         ___wmul
         _gfx_drawChar
           ___wmul
           _gfx_drawPixel
             _display_setPixel
               ___wmul
             _gfx_rotation_adjust
           _gfx_fillRect
             _gfx_drawLine
               ___awdiv
                 _gfx_height (ARG)
                 _gfx_width (ARG)
               _gfx_drawPixel
                 _display_setPixel
                   ___wmul
                 _gfx_rotation_adjust
               _gfx_height (ARG)
               _gfx_hvLine (ARG)
                 _display_line
                   ___wmul
                 _gfx_rotation_adjust
               _gfx_width (ARG)
               _my_abs (ARG)
             _gfx_height (ARG)
             _gfx_width (ARG)
       _my_strlen
     _gfx_write
       ___wmul
       _gfx_drawChar
         ___wmul
         _gfx_drawPixel
           _display_setPixel
             ___wmul
           _gfx_rotation_adjust
         _gfx_fillRect
           _gfx_drawLine
             ___awdiv
               _gfx_height (ARG)
               _gfx_width (ARG)
             _gfx_drawPixel
               _display_setPixel
                 ___wmul
               _gfx_rotation_adjust
             _gfx_height (ARG)
             _gfx_hvLine (ARG)
               _display_line
                 ___wmul
               _gfx_rotation_adjust
             _gfx_width (ARG)
             _my_abs (ARG)
           _gfx_height (ARG)
           _gfx_width (ARG)
   _gfx_setCursor
   _gfx_setRotation
   _gfx_setTextColor
   _gfx_setTextSize
   _gfx_width
   _gfx_write
     ___wmul
     _gfx_drawChar
       ___wmul
       _gfx_drawPixel
         _display_setPixel
           ___wmul
         _gfx_rotation_adjust
       _gfx_fillRect
         _gfx_drawLine
           ___awdiv
             _gfx_height (ARG)
             _gfx_width (ARG)
           _gfx_drawPixel
             _display_setPixel
               ___wmul
             _gfx_rotation_adjust
           _gfx_height (ARG)
           _gfx_hvLine (ARG)
             _display_line
               ___wmul
             _gfx_rotation_adjust
           _gfx_width (ARG)
           _my_abs (ARG)
         _gfx_height (ARG)
         _gfx_width (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     43      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     15      4B       9       93.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      1A      11       32.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     113      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     113      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              28      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Feb 07 13:25:51 2018

                   gfx_setRotation@x 0001                                    pc 0002  
                     _gfx_drawCircle 0000                        _gfx_drawPixel 0000  
                        __CFG_CP$OFF 0000                                   l76 0009  
                       ___awdiv@sign 0008                    _gfx_drawChar$1414 0028  
                  _gfx_drawChar$1415 002A                 ?_gfx_rotation_adjust 0000  
                ___wmul@multiplicand 0002                                  l404 00E4  
                                l441 006B                                  l601 0162  
                                l621 0098                                  l551 009E  
                                l463 018F                                  l543 0032  
                                l562 0052                                  l564 0018  
                                l637 0099                                  l750 0009  
                                l593 0095                                  l597 0124  
                      ?_display_line 0006                        ?_display_init 0000  
                       __CFG_CPD$OFF 0000               __end_of_display_invert 0023  
             __end_of_display_scroll 002C              __size_of_PMD_Initialize 0008  
             __end_of_display_update 006A                                  wreg 0009  
                      ?_gfx_fillRect 000C                        ?_gfx_drawChar 0016  
                       ?_gfx_println 003B                        ?_gfx_drawLine 0035  
                      ?_gfx_drawRect 000C                         __CFG_LVP$OFF 0000  
                   __end_of_I2C1_ISR 0149                                 l3108 0009  
                               l4032 0037                                 l2512 000A  
                               l4026 000C                                 l4210 00FB  
                               l2516 002D                                 l2524 0093  
                               l2604 0016                                 l3180 0024  
                               l4204 00F1                       ?_display_clear 0000  
                               l4134 000F                                 l2518 006C  
                               l2630 004D                                 l2622 003C  
                               l2614 001E                                 l3174 0008  
                               l4214 010D                                 l4150 0008  
                               l2616 002A                                 l3176 0016  
                               l4304 023C                                 l2626 0045  
                               l4306 02B8                                 l3700 00CD  
                               l4404 06B8                                 l4340 036D  
                               l4324 02D0                                 l3710 00F2  
                               l3702 00D6                                 l4350 03DA  
                               l4342 03C3                                 l4326 0357  
                               l4174 0039                                 l3640 0003  
                               l3712 00F9                                 l3704 00DF  
                               l3720 0118                                 l4424 06F1  
                               l4416 06DD                                 l4280 01D9  
                               l4184 007A                                 l4176 0077  
                               l3730 0171                                 l3714 00FF  
                               l3722 011D                                 l3810 00E2  
                               l4442 0732                                 l4434 0712  
                               l4362 04F6                                 l4274 01BF  
                               l4186 00B8                                 l3660 001D  
                               l3732 017A                                 l3740 018B  
                               l3708 00E1                                 l3804 00B4  
                               l3820 0028                                 l4380 0548  
                               l4550 00D9                                 l3662 005A  
                               l2598 000B                                 l3734 0183  
                               l3718 0108                                 l4358 04CD  
                               l3664 0097                                 l4544 00E6  
                               l3808 00C9                                 l3816 0011  
                               l3904 00C7                                 l2776 0005  
                               l4384 0551                                 l4546 010D  
                               l3690 008F                                 l3770 0011  
                               l3914 0155                                 l2778 0011  
                               l4394 0650                                 l3668 00D3  
                               l4548 019C                                 l3692 00A6  
                               l3844 013F                                 l3828 00CB  
                               l3908 0120                                 l3924 01BD  
                               l3838 011F                                 l3870 006C  
                               l3862 001C                                 l3918 01B1  
                               l3934 001A                                 l4398 0679  
                               l3696 00BC                                 l3864 0064  
                               l3890 0067                                 l3892 0092  
                               l3998 0017                                 STR_1 0004  
                               STR_2 0000                                 STR_3 0000  
                               u2205 0035                                 _LATA 010C  
                               u2215 003D                                 _LATC 010E  
                               u4110 000B                                 u2175 0021  
                               u3305 001A                                 u3314 0025  
                               u3315 0024                                 u2195 002B  
                               u4035 009A                                 u4060 0017  
                               u4140 000C                                 u3324 0061  
                               u3404 00B5                                 u3245 000A  
                               u3325 0060                                 u3405 00B4  
                               u4205 00EF                                 u3334 009E  
                               u3255 000F                                 u3335 009D  
                               u3415 00C2                                 u4055 001D  
                               u3425 00CA                                 u3345 0007  
                               u3505 0007                                 u4305 0546  
                               u4225 010B                                 u3435 0071  
                               u3355 0079                                 u3515 000F  
                               u4315 066D                                 u4235 01BD  
                               u3444 0166                                 u3285 000C  
                               u4165 0087                                 u3445 0165  
                               u4325 06A4                                 u4245 01D7  
                               u3374 0098                                 u3455 0195  
                               u3375 0097                                 u4335 06B6  
                               u4255 025C                                 u4407 0116  
                               u3384 00A0                                 u3385 009F  
                               u3705 00A6                                 u4265 02F0  
                               u4417 014E                                 u4185 004C  
                               u3475 0011                                 u3395 00AC  
                               u3715 00B2                                 u3635 005E  
                               u3555 0024                                 u4507 0645  
                               u4275 0380                                 u4427 018A  
                               u4195 008D                                 _PMD0 0911  
                               u3725 00BB                                 u3805 0118  
                               u4365 0710                                 u4517 06BE  
                               u4285 04EA                                 u4437 01F8  
                               _PMD1 0912                                 _PMD2 0913  
                               u3495 0024                                 u3735 00C7  
                               u3655 006D                                 u3575 0033  
                               u4375 0730                                 u4527 06CF  
                               u4295 0521                                 u4447 021D  
                               _PMD3 0914                                 u3760 005D  
                               _PMD4 0915                                 u3745 0007  
                               u4537 06E5                                 u4457 022C  
                               _PMD5 0916                                 u3770 005E  
                               u3675 007C                                 u3595 0042  
                               u3835 012F                                 u3755 000F  
                               u4547 06FB                                 u4467 02BE  
                               u4387 0027                                 u3765 0059  
                               u3845 0012                                 u4557 071B  
                               u4477 035D                                 u4397 00BE  
                               u3695 008B                                 u3855 0030  
                               u4567 0738                                 u4487 03C9  
                               u3865 0080                                 u4497 0529  
                               u3795 00A0                                 u3875 000B  
                               u3965 0127                                 u3885 001C  
                               _PLLR 48E0                        _gfx_setCursor 0000  
                               _WPUA 020C                                 _WPUC 020E  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 0000                                 _font 0000  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 _wrap 0016  
                      __CFG_BORV$LOW 0000                                 start 0000* 
             __end_of_gfx_drawCircle 0175                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000                     _ssd1306_init_cmd 0000  
                   _gfx_drawTriangle 0000                       ?_gfx_drawPixel 0016  
                        gfx_hvLine@t 0033                ??_gfx_rotation_adjust 0001  
                         _i2c1_state 000C       __size_of_OSCILLATOR_Initialize 000C  
                display_invert@F7621 0014        __end_of_OSCILLATOR_Initialize 000C  
                     ??_display_line 0010                       ??_display_init 0004  
                              ?_main 0000             __end_of_display_contrast 001E  
                    __end_of___awdiv 0052                    __end_of_I2C1_Stop 001A  
                      __CFG_WDTE$OFF 0000                      ___awdiv@divisor 0002  
                     __CFG_DEBUG$OFF 0000                                i1l101 0011  
                              i1l200 0129                                i1l106 0019  
                              i1l207 000E                                i1l171 0042  
                              i1l172 004A                                i1l166 0014  
                              i1l192 00E0                                i1l177 006D  
                              i1l178 0079                                i1l195 00F4  
                              i1l196 0102                                i1l188 00C0  
                    ___awdiv@counter 0007                                _OSCEN 091D  
                    ?_display_invert 0000                                _WIDTH 0000  
                              _TRISA 008C                                _TRISC 008E  
                    ?_display_scroll 0000                                _DotB1 0000  
                     ??_gfx_fillRect 0048                       ??_gfx_drawChar 0020  
       __end_of_I2C1_BusCollisionISR 0003                      ?_display_update 0000  
                     ??_gfx_drawLine 003F                       ??_gfx_drawRect 0048  
                  ??_I2C1_Initialize 0000                   gfx_drawPixel@color 001A  
           __end_of_display_setPixel 00E5                       _WDT_Initialize 0000  
                    gfx_drawCircle@f 002D                      gfx_drawCircle@r 0021  
                    gfx_drawCircle@x 002F                      gfx_drawCircle@y 0031  
                              main@i 0013                                main@j 0011  
                     ?_gfx_setCursor 0000                       __CFG_BOREN$OFF 0000  
                        gfx_write@ch 004D                                status 0003  
                              wtemp0 007E                      gfx_drawLine@err 0004  
                    ?_gfx_drawCircle 001D                      __initialization 0000  
                    gfx_hvLine@color 0030                         __end_of_main 0740  
                       __end_of_font 04FB                         gfx_hvLine@x1 0028  
                       gfx_hvLine@x2 002C                         gfx_hvLine@y1 002A  
                       gfx_hvLine@y2 002E          ?_INTERRUPT_InterruptManager 0000  
                        _i2c1_object 0000                               ??_main 003D  
             _ssd1306_cmd_setColAddr 0000               __end_of_WDT_Initialize 0004  
                    ??_display_clear 0006                               i1S4552 0000  
                   ___awdiv@dividend 0004                               _ANSELA 018C  
                             _ANSELC 018E                               _HEIGHT 0000  
                             i1l3010 0109                               i1l3030 0134  
                             i1l3014 0110                               _ODCONA 028C  
                             i1l3026 012D                               _ODCONC 028E  
                             i1l3028 0130                               i1l3036 013D  
                             i1l2924 0035                               i1l2838 0017  
                             i1l2942 0067                               i1l2936 0056  
                             i1l2956 0096                               i1l2990 00CE  
                             i1l2982 00BA                               i1l2976 00AF  
                             i1l2998 00E8                               _OSCFRQ 091F  
                             _WDTCON 0097                       __CFG_PWRTE$OFF 0000  
                 gfx_drawTriangle@x0 000C                   gfx_drawTriangle@x1 0010  
                 gfx_drawTriangle@x2 0014                   gfx_drawTriangle@y0 000E  
                 gfx_drawTriangle@y1 0012                   gfx_drawTriangle@y2 0016  
                   gfx_drawChar@line 0027                      ??_gfx_drawPixel 001C  
                   gfx_drawChar@size 001F                         gfx_print@len 0037  
                     _p_i2c1_current 0003                     __end_of_gfx_init 0029  
                       gfx_println@s 003B                 display_invert@cmdbuf 0002  
                             ___wmul 0000                            ??___awdiv 0006  
                     __CFG_STVREN$ON 0000                      _gfx_setTextSize 0000  
                             __width 0005                      _gfx_setRotation 0000  
               display_invert@invert 0001            __size_of_gfx_setTextColor 000D  
                          ?_I2C1_ISR 0000                     gfx_drawCircle@x0 001D  
                   gfx_drawCircle@y0 001F                     ___awdiv@quotient 0009  
                             _my_abs 0000                  display_scroll@F7650 0000  
                       __pdataBIGRAM 23E8                       _PMD_Initialize 0000  
                    ?_WDT_Initialize 0000                      ??_gfx_setCursor 0004  
               __size_of_gfx_println 000C                  display_scroll@speed 0002  
                display_scroll@start 000D                    _SYSTEM_Initialize 0000  
            __end_of__initialization 0048                 __end_of_display_line 01A8  
               __end_of_display_init 0027                   ?_SYSTEM_Initialize 0000  
                      ?_oled_sendCmd 0000                       _i2c1_trb_count 000B  
                      __end_of_DotB1 0009                 __end_of_gfx_fillRect 00B3  
               __end_of_gfx_drawChar 01C2                _I2C1_FunctionComplete 0000  
               _I2C1_BusCollisionISR 0000                 __end_of_gfx_drawLine 0168  
               __end_of_gfx_drawRect 00EC                       __pcstackCOMMON 0000  
         __end_of_display_stopscroll 0014                         __pidataBANK2 0000  
                       __pidataBANK3 0000                        gfx_fillRect@h 0012  
                      gfx_fillRect@i 004B                  ??_SYSTEM_Initialize 0001  
                      gfx_fillRect@w 0010                        gfx_fillRect@x 000C  
                      gfx_fillRect@y 000E                        gfx_drawChar@c 001A  
                      gfx_drawChar@i 002D                        gfx_drawChar@j 002C  
                      gfx_drawChar@x 0016                        gfx_drawChar@y 0018  
                      gfx_drawLine@t 000A                           ??_I2C1_ISR 0002  
                      gfx_drawRect@h 0012                        gfx_drawRect@w 0010  
                      gfx_drawRect@x 000C                        gfx_drawRect@y 000E  
             __end_of_PMD_Initialize 0008             __end_of_ssd1306_init_cmd 002B  
                _gfx_setTextSize$814 0002             __end_of_gfx_drawTriangle 0081  
          __end_of_SYSTEM_Initialize 000F                   __size_of_gfx_print 002F  
                 __size_of_gfx_width 0009                           __pbssBANK0 0000  
                         __pbssBANK1 0000                           __pbssBANK2 0000  
                 __size_of_gfx_write 00B0                        gfx_init@width 0000  
                     ??_oled_sendCmd 0000              __end_of_gfx_setTextSize 0016  
            __end_of_gfx_setRotation 0033                ?_I2C1_BusCollisionISR 0000  
                     _SSP1DATPPSbits 0E21                           __pmaintext 0000  
                            ?___wmul 0000                      __CFG_PPS1WAY$ON 0000  
                display_update@F7624 0009               display_contrast@cmdbuf 0001  
                         __pintentry 0000                      _I2C1_Initialize 0000  
                   ??_display_invert 0000                     ??_display_scroll 0003  
                   ??_display_update 0006                              ?_my_abs 0000  
                     _SSP1CLKPPSbits 0E20                      ?_PMD_Initialize 0000  
                __CFG_RSTOSC$HFINT32 0000                    ?_display_contrast 0000  
                  gfx_fillRect@color 0014                   __size_of_my_strlen 001F  
                 ??_display_contrast 0000                              _OSCCON1 0919  
                            _OSCCON3 091B                            _I2C1_Stop 0000  
                            _OSCTUNE 091E                              _SSP1ADD 0212  
                            _SSP1BUF 0211             display_stopscroll@cmdbuf 0001  
                  ?_display_setPixel 0006                           _gfx_height 0000  
                         _gfx_hvLine 0000                            ?_gfx_init 0000  
           display_contrast@contrast 0004                   ??_display_setPixel 000C  
                   ??_gfx_drawCircle 0025                    gfx_drawChar@color 001B  
             ?_I2C1_FunctionComplete 0000          __end_of_gfx_rotation_adjust 009F  
                 _p_i2c1_trb_current 0004                              ___awdiv 0000  
                    __size_of___wmul 001C                     _gfx_setTextColor 0000  
                            __height 0012                    __end_of_gfx_print 002F  
                  __end_of_gfx_width 0009                    __end_of_gfx_write 00B0  
              gfx_setTextColor@color 0000                      __size_of_my_abs 000F  
                            __ptext1 0000                              __ptext2 0000  
                            __ptext3 0000                              __ptext4 0000  
                            __ptext5 0000                              __ptext6 0000  
                            __ptext7 0000                              __ptext8 0000  
                            __ptext9 0000                _OSCILLATOR_Initialize 0000  
           ??_PIN_MANAGER_Initialize 0000                           ?_I2C1_Stop 0000  
         __size_of_SYSTEM_Initialize 000F                 I2C1_ISR@pi2c_buf_ptr 000A  
                            clrloop0 0001                __size_of_display_line 01A8  
              __size_of_display_init 0027                 end_of_initialization 0048  
                         ??_gfx_init 0004                   _display_invert$761 0004  
              __size_of_gfx_fillRect 00B3                              init_ram 0000  
              __size_of_gfx_drawChar 01C2                __size_of_gfx_drawLine 0168  
                            initloop 0001                __size_of_gfx_drawRect 00EC  
                     display_clear@x 000E               ??_I2C1_BusCollisionISR 0000  
                   ?_gfx_setTextSize 0000                              my_abs@a 0000  
            __end_of_I2C1_Initialize 001D                     ?_gfx_setRotation 0000  
                  __end_of_my_strlen 001F                       display_line@x1 0006  
                     display_line@x2 000A                       display_line@y1 0008  
                     display_line@y2 000C       __end_of_ssd1306_cmd_setColAddr 0004  
                 display_init@cmdbuf 0005                     ??_WDT_Initialize 0000  
                  gfx_drawLine@color 003D                 display_scroll@cmdbuf 0004  
                 display_line@pstart 001D                    gfx_drawLine@steep 0006  
                  __size_of_I2C1_ISR 0149                    gfx_drawLine@ystep 0002  
                       _display_line 0000                         _display_init 0000  
                       _gfx_fillRect 0000                         _gfx_drawChar 0000  
                       _gfx_drawLine 0000                         _gfx_drawRect 0000  
                        my_strlen@cp 0004                          ?_gfx_height 0000  
                   __CFG_FEXTOSC$OFF 0000                          ?_gfx_hvLine 0028  
              __end_of_display_clear 005B                    gfx_drawRect@color 0014  
  I2C1_ISR@i2c_10bit_address_restart 0008                __end_of_gfx_drawPixel 003F  
                      __pidataBIGRAM 0000                       __end_of___wmul 001C  
            I2C1_MasterWrite@trBlock 001C                       gfx_drawChar@bg 001D  
                         gfx_print@i 0039                           gfx_print@s 0035  
           I2C1_Stop@completion_code 0001               ?_OSCILLATOR_Initialize 0000  
                     __end_of_my_abs 000F                       gfx_drawLine@x0 0035  
                     gfx_drawLine@x1 0039                       gfx_drawLine@y0 0037  
                     gfx_drawLine@y1 003B                       gfx_drawLine@dx 0008  
                     gfx_drawLine@dy 0000                  start_initialization 0000  
              gfx_drawTriangle@color 0018                   _display_stopscroll 0000  
                      ??_gfx_println 004E                          ??_I2C1_Stop 0000  
    __size_of_PIN_MANAGER_Initialize 0026                       gfx_drawPixel@x 0016  
                     gfx_drawPixel@y 0018                    ?_gfx_drawTriangle 000C  
              __end_of_gfx_setCursor 0011                  ?_display_stopscroll 0000  
                 ??_gfx_drawTriangle 0048                     ?_I2C1_Initialize 0000  
                   __CFG_LPBOREN$OFF 0000                     ??_PMD_Initialize 0000  
                           ??___wmul 0004                          __pdataBANK2 0000  
                        __pdataBANK3 0000                 ??_display_stopscroll 0000  
                __size_of_gfx_height 0009                  __size_of_gfx_hvLine 00FA  
                           ??_my_abs 0002                       gfx_init@height 0002  
                        __pbssCOMMON 0000                            ___latbits 0003  
                      __pcstackBANK0 0000                        __pcstackBANK1 0000  
                      __pcstackBANK2 0000                        _i2c1_tr_queue 0020  
           __end_of_gfx_setTextColor 000D                  __end_of_gfx_println 000C  
              display_contrast@F7618 000E              ??_I2C1_FunctionComplete 0000  
          __size_of_display_contrast 001E                    __size_of_gfx_init 0029  
                          _main$1410 0009                            _main$1411 000B  
                          _main$1412 000D                            _main$1413 000F  
                          _main$1408 0005                            _main$1409 0007  
             _PIN_MANAGER_Initialize 0000              display_stopscroll@F7644 0011  
                  display_clear@page 000F            __size_of_display_setPixel 00E5  
                           ?___awdiv 0002                             _I2C1_ISR 0000  
                 display_update@page 0011         ??_INTERRUPT_InterruptManager 0006  
                          __pswtext1 0000                            _frameBuff 23E8  
                          _gfx_print 0000                            _gfx_width 0000  
                          _gfx_write 0000                            _dummy_cmd 0017  
             I2C1_MasterRead@trBlock 0018                    display_init@F7608 0000  
                     ___wmul@product 0004                  gfx_drawCircle@ddF_x 0029  
                gfx_drawCircle@ddF_y 002B                 display_update@cmdbuf 000C  
                          clear_ram0 0000                  gfx_drawCircle@color 0023  
                           _PIE1bits 0091                         _oled_sendCmd 0000* 
                     gfx_setCursor@x 0000                       gfx_setCursor@y 0002  
__size_of_INTERRUPT_InterruptManager 001E                             _PIR1bits 0011  
              display_setPixel@color 000A                    display_line@color 000E  
                           _SSP1CON1 0215                             _SSP1CON3 0217  
                          _my_strlen 0000                             _SSP1STAT 0214  
       __size_of_gfx_rotation_adjust 009F                            _textcolor 000C  
                         my_strlen@s 0000                    ___wmul@multiplier 0000  
                         ?_gfx_print 0035                           ?_gfx_width 0000  
                         ?_gfx_write 0000                            main@color 0004  
                        _gfx_println 0000              __size_of_display_invert 0023  
            __size_of_display_scroll 002C              __size_of_display_update 006A  
                       ??_gfx_height 0002                         ??_gfx_hvLine 0032  
             display_line@pstart_778 001A                          _ssd1306_cmd 0000  
                  display_setPixel@x 0006                    display_setPixel@y 0008  
      __size_of_I2C1_BusCollisionISR 0003               I2C1_ISR@i2c_bytes_left 0009  
            ??_OSCILLATOR_Initialize 0000                           ?_my_strlen 0000  
            __size_of_gfx_drawCircle 0175                    display_scroll@dir 0001  
                  display_scroll@end 0000                     __size_of___awdiv 0052  
           __size_of_gfx_setTextSize 0016             __size_of_gfx_setRotation 0033  
                 __end_of_gfx_height 0009                   __end_of_gfx_hvLine 00FA  
                           _main$672 0000                             _main$674 0002  
                I2C1_ISR@i2c_address 0005                             __ptext10 0000  
                           __ptext11 0000                             __ptext20 0000  
                           __ptext12 0000                             __ptext21 0000  
                           __ptext13 0000                             __ptext30 0000  
                           __ptext22 0000                             __ptext14 0000  
                           __ptext31 0000                             __ptext23 0000  
                           __ptext15 0000                             __ptext40 0000  
                           __ptext32 0000                             __ptext24 0000  
                           __ptext16 0000                             __ptext41 0000  
                           __ptext33 0000                             __ptext25 0000  
                           __ptext17 0000                             __ptext42 0000  
                           __ptext34 0000                             __ptext26 0000  
                           __ptext18 0000                             __ptext43 0000  
                           __ptext35 0000                             __ptext27 0000  
                           __ptext19 0000                             __ptext36 0000  
                           __ptext28 0000                             __ptext37 0000  
                           __ptext29 0000                             __ptext38 0000  
                       _SSP1CON1bits 0215                         _SSP1CON2bits 0216  
                           _gfx_init 0000                     _display_contrast 0000  
                      __size_of_main 0740                             _cursor_x 0010  
                           _cursor_y 000E                     _display_setPixel 0000  
                   display_line@lbit 0021                     display_line@mask 0023  
          __size_of_gfx_drawTriangle 0081                     display_line@pend 001F  
                   display_line@ubit 001C                           _RC4PPSbits 0EA4  
                           int$flags 007E                           _RC5PPSbits 0EA5  
                           _rotation 0002                             _textsize 0007  
 __end_of_INTERRUPT_InterruptManager 001E           _INTERRUPT_InterruptManager 0000  
             __size_of_display_clear 005B                          ??_gfx_print 004E  
                        ??_gfx_width 0002                          ??_gfx_write 002E  
                         _INTCONbits 000B                       _oled_sendCmd$0 0000  
                     _oled_sendCmd$1 0002              __size_of_WDT_Initialize 0004  
             __size_of_gfx_drawPixel 003F                             intlevel1 0000* 
                gfx_setTextSize@size 0004                    ?_gfx_setTextColor 0000  
               display_line@pend_779 0018              ?_PIN_MANAGER_Initialize 0000  
                 ??_gfx_setTextColor 0002                    __CFG_CLKOUTEN$OFF 0000  
     __size_of_I2C1_FunctionComplete 0011        __end_of_I2C1_FunctionComplete 0011  
                    display_line@ptr 0026                          ??_my_strlen 0002  
        __size_of_display_stopscroll 0014               __size_of_gfx_setCursor 0011  
           __size_of_I2C1_Initialize 001D                        __pstringtext1 0000  
                      __pstringtext2 0000                        __pstringtext3 0000  
                      __pstringtext4 0000                        __pstringtext5 0000  
                      __pstringtext6 0000                        __pstringtext7 0000  
                  ??_gfx_setTextSize 0000                  display_line@ptr_781 0024  
                     _display_invert 0000                    ??_gfx_setRotation 0000  
                     _display_scroll 0000                  display_line@pixmask 0022  
                     _display_update 0000                        _display_clear 0000  
     __end_of_PIN_MANAGER_Initialize 0026                  _gfx_rotation_adjust 0000  
                 __size_of_I2C1_Stop 001A                gfx_rotation_adjust@y0 0007  
              gfx_rotation_adjust@px 0009                gfx_rotation_adjust@py 0000  
                        _textbgcolor 000A  
